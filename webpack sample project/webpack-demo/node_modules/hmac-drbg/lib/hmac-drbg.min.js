"use strict";var hash=require("hash.js");var utils=require("minimalistic-crypto-utils");var assert=require("minimalistic-assert");function HmacDRBG(b){if(!(this instanceof HmacDRBG)){return new HmacDRBG(b)}this.hash=b.hash;this.predResist=!!b.predResist;this.outLen=this.hash.outSize;this.minEntropy=b.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var a=utils.toArray(b.entropy,b.entropyEnc||"hex");var c=utils.toArray(b.nonce,b.nonceEnc||"hex");var d=utils.toArray(b.pers,b.persEnc||"hex");assert(a.length>=(this.minEntropy/8),"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._init(a,c,d)}module.exports=HmacDRBG;HmacDRBG.prototype._init=function init(b,d,e){var a=b.concat(d).concat(e);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var c=0;c<this.V.length;c++){this.K[c]=0;this.V[c]=1}this._update(a);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new hash.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(a){var b=this._hmac().update(this.V).update([0]);if(a){b=b.update(a)}this.K=b.digest();this.V=this._hmac().update(this.V).digest();if(!a){return}this.K=this._hmac().update(this.V).update([1]).update(a).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(a,d,c,b){if(typeof d!=="string"){b=c;c=d;d=null}a=utils.toArray(a,d);c=utils.toArray(c,b);assert(a.length>=(this.minEntropy/8),"Not enough entropy. Minimum is: "+this.minEntropy+" bits");this._update(a.concat(c||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(a,c,f,e){if(this._reseed>this.reseedInterval){throw new Error("Reseed is required")}if(typeof c!=="string"){e=f;f=c;c=null}if(f){f=utils.toArray(f,e||"hex");this._update(f)}var b=[];while(b.length<a){this.V=this._hmac().update(this.V).digest();b=b.concat(this.V)}var d=b.slice(0,a);this._update(f);this._reseed++;return utils.encode(d,c)};