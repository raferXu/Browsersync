var common=require("./common");var assert=require("assert");var events=require("../");var after_checks=[];after(function(){for(var a=0;a<after_checks.length;++a){after_checks[a]()}});function expect(a){var c=[];after_checks.push(function(){assert.deepEqual(c.sort(),a.sort())});function b(d){c.push(d)}return common.mustCall(b,a.length)}function listener(){}var e1=new events.EventEmitter();e1.on("foo",listener);e1.on("bar",listener);e1.on("baz",listener);e1.on("baz",listener);var fooListeners=e1.listeners("foo");var barListeners=e1.listeners("bar");var bazListeners=e1.listeners("baz");e1.on("removeListener",expect(["bar","baz","baz"]));e1.removeAllListeners("bar");e1.removeAllListeners("baz");assert.deepEqual(e1.listeners("foo"),[listener]);assert.deepEqual(e1.listeners("bar"),[]);assert.deepEqual(e1.listeners("baz"),[]);assert.deepEqual(fooListeners,[listener]);assert.deepEqual(barListeners,[listener]);assert.deepEqual(bazListeners,[listener,listener]);assert.notEqual(e1.listeners("bar"),barListeners);assert.notEqual(e1.listeners("baz"),bazListeners);var e2=new events.EventEmitter();e2.on("foo",listener);e2.on("bar",listener);e2.on("removeListener",expect(["foo","bar","removeListener"]));e2.on("removeListener",expect(["foo","bar"]));e2.removeAllListeners();console.error(e2);assert.deepEqual([],e2.listeners("foo"));assert.deepEqual([],e2.listeners("bar"));