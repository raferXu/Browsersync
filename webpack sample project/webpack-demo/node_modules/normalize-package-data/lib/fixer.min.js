var semver=require("semver");var validateLicense=require("validate-npm-package-license");var hostedGitInfo=require("hosted-git-info");var isBuiltinModule=require("is-builtin-module");var depTypes=["dependencies","devDependencies","optionalDependencies"];var extractDescription=require("./extract_description");var url=require("url");var typos=require("./typos.json");var fixer=module.exports={warn:function(){},fixRepositoryField:function(b){if(b.repositories){this.warn("repositories");b.repository=b.repositories[0]}if(!b.repository){return this.warn("missingRepository")}if(typeof b.repository==="string"){b.repository={type:"git",url:b.repository}}var a=b.repository.url||"";if(a){var c=hostedGitInfo.fromUrl(a);if(c){a=b.repository.url=c.getDefaultRepresentation()=="shortcut"?c.https():c.toString()}}if(a.match(/github.com\/[^\/]+\/[^\/]+\.git\.git$/)){this.warn("brokenGitUrl",a)}},fixTypos:function(a){Object.keys(typos.topLevel).forEach(function(b){if(a.hasOwnProperty(b)){this.warn("typo",b,typos.topLevel[b])}},this)},fixScriptsField:function(a){if(!a.scripts){return}if(typeof a.scripts!=="object"){this.warn("nonObjectScripts");delete a.scripts;return}Object.keys(a.scripts).forEach(function(b){if(typeof a.scripts[b]!=="string"){this.warn("nonStringScript");delete a.scripts[b]}else{if(typos.script[b]&&!a.scripts[typos.script[b]]){this.warn("typo",b,typos.script[b],"scripts")}}},this)},fixFilesField:function(b){var a=b.files;if(a&&!Array.isArray(a)){this.warn("nonArrayFiles");delete b.files}else{if(b.files){b.files=b.files.filter(function(c){if(!c||typeof c!=="string"){this.warn("invalidFilename",c);return false}else{return true}},this)}}},fixBinField:function(d){if(!d.bin){return}if(typeof d.bin==="string"){var a={};var c;if(c=d.name.match(/^@[^/]+[/](.*)$/)){a[c[1]]=d.bin}else{a[d.name]=d.bin}d.bin=a}},fixManField:function(a){if(!a.man){return}if(typeof a.man==="string"){a.man=[a.man]}},fixBundleDependenciesField:function(c){var a="bundledDependencies";var b="bundleDependencies";if(c[a]&&!c[b]){c[b]=c[a];delete c[a]}if(c[b]&&!Array.isArray(c[b])){this.warn("nonArrayBundleDependencies");delete c[b]}else{if(c[b]){c[b]=c[b].filter(function(d){if(!d||typeof d!=="string"){this.warn("nonStringBundleDependency",d);return false}else{if(!c.dependencies){c.dependencies={}}if(!c.dependencies.hasOwnProperty(d)){this.warn("nonDependencyBundleDependency",d);c.dependencies[d]="*"}return true}},this)}}},fixDependencies:function(b,a){var c=!a;objectifyDeps(b,this.warn);addOptionalDepsToDeps(b,this.warn);this.fixBundleDependenciesField(b);["dependencies","devDependencies"].forEach(function(d){if(!(d in b)){return}if(!b[d]||typeof b[d]!=="object"){this.warn("nonObjectDependencies",d);delete b[d];return}Object.keys(b[d]).forEach(function(f){var e=b[d][f];if(typeof e!=="string"){this.warn("nonStringDependency",f,JSON.stringify(e));delete b[d][f]}var g=hostedGitInfo.fromUrl(b[d][f]);if(g){b[d][f]=g.toString()}},this)},this)},fixModulesField:function(a){if(a.modules){this.warn("deprecatedModules");delete a.modules}},fixKeywordsField:function(a){if(typeof a.keywords==="string"){a.keywords=a.keywords.split(/,\s+/)}if(a.keywords&&!Array.isArray(a.keywords)){delete a.keywords;this.warn("nonArrayKeywords")}else{if(a.keywords){a.keywords=a.keywords.filter(function(b){if(typeof b!=="string"||!b){this.warn("nonStringKeyword");return false}else{return true}},this)}}},fixVersionField:function(b,a){var c=!a;if(!b.version){b.version="";return true}if(!semver.valid(b.version,c)){throw new Error('Invalid version: "'+b.version+'"')}b.version=semver.clean(b.version,c);return true},fixPeople:function(a){modifyPeople(a,unParsePerson);modifyPeople(a,parsePerson)},fixNameField:function(c,b){if(typeof b==="boolean"){b={strict:b}}else{if(typeof b==="undefined"){b={}}}var a=b.strict;if(!c.name&&!a){c.name="";return}if(typeof c.name!=="string"){throw new Error("name field must be a string.")}if(!a){c.name=c.name.trim()}ensureValidName(c.name,a,b.allowLegacyCase);if(isBuiltinModule(c.name)){this.warn("conflictingName",c.name)}},fixDescriptionField:function(a){if(a.description&&typeof a.description!=="string"){this.warn("nonStringDescription");delete a.description}if(a.readme&&!a.description){a.description=extractDescription(a.readme)}if(a.description===undefined){delete a.description}if(!a.description){this.warn("missingDescription")}},fixReadmeField:function(a){if(!a.readme){this.warn("missingReadme");a.readme="ERROR: No README data found!"}},fixBugsField:function(b){if(!b.bugs&&b.repository&&b.repository.url){var d=hostedGitInfo.fromUrl(b.repository.url);if(d&&d.bugs()){b.bugs={url:d.bugs()}}}else{if(b.bugs){var c=/^.+@.*\..+$/;if(typeof b.bugs=="string"){if(c.test(b.bugs)){b.bugs={email:b.bugs}}else{if(url.parse(b.bugs).protocol){b.bugs={url:b.bugs}}else{this.warn("nonEmailUrlBugsString")}}}else{bugsTypos(b.bugs,this.warn);var a=b.bugs;b.bugs={};if(a.url){if(typeof(a.url)=="string"&&url.parse(a.url).protocol){b.bugs.url=a.url}else{this.warn("nonUrlBugsUrlField")}}if(a.email){if(typeof(a.email)=="string"&&c.test(a.email)){b.bugs.email=a.email}else{this.warn("nonEmailBugsEmailField")}}}if(!b.bugs.email&&!b.bugs.url){delete b.bugs;this.warn("emptyNormalizedBugs")}}}},fixHomepageField:function(a){if(!a.homepage&&a.repository&&a.repository.url){var b=hostedGitInfo.fromUrl(a.repository.url);if(b&&b.docs()){a.homepage=b.docs()}}if(!a.homepage){return}if(typeof a.homepage!=="string"){this.warn("nonUrlHomepage");return delete a.homepage}if(!url.parse(a.homepage).protocol){a.homepage="http://"+a.homepage}},fixLicenseField:function(a){if(!a.license){return this.warn("missingLicense")}else{if(typeof(a.license)!=="string"||a.license.length<1){this.warn("invalidLicense")}else{if(!validateLicense(a.license).validForNewPackages){this.warn("invalidLicense")}}}}};function isValidScopedPackageName(a){if(a.charAt(0)!=="@"){return false}var b=a.slice(1).split("/");if(b.length!==2){return false}return b[0]&&b[1]&&b[0]===encodeURIComponent(b[0])&&b[1]===encodeURIComponent(b[1])}function isCorrectlyEncodedName(a){return !a.match(/[\/@\s\+%:]/)&&a===encodeURIComponent(a)}function ensureValidName(b,a,c){if(b.charAt(0)==="."||!(isValidScopedPackageName(b)||isCorrectlyEncodedName(b))||(a&&(!c)&&b!==b.toLowerCase())||b.toLowerCase()==="node_modules"||b.toLowerCase()==="favicon.ico"){throw new Error("Invalid name: "+JSON.stringify(b))}}function modifyPeople(b,a){if(b.author){b.author=a(b.author)}["maintainers","contributors"].forEach(function(c){if(!Array.isArray(b[c])){return}b[c]=b[c].map(a)});return b}function unParsePerson(f){if(typeof f==="string"){return f}var d=f.name||"";var c=f.url||f.web;var b=c?(" ("+c+")"):"";var g=f.email||f.mail;var a=g?(" <"+g+">"):"";return d+a+b}function parsePerson(d){if(typeof d!=="string"){return d}var c=d.match(/^([^\(<]+)/);var b=d.match(/\(([^\)]+)\)/);var a=d.match(/<([^>]+)>/);var e={};if(c&&c[0].trim()){e.name=c[0].trim()}if(a){e.email=a[1]}if(b){e.url=b[1]}return e}function addOptionalDepsToDeps(a,e){var c=a.optionalDependencies;if(!c){return}var b=a.dependencies||{};Object.keys(c).forEach(function(d){b[d]=c[d]});a.dependencies=b}function depObjectify(c,a,d){if(!c){return{}}if(typeof c==="string"){c=c.trim().split(/[\n\r\s\t ,]+/)}if(!Array.isArray(c)){return c}d("deprecatedArrayDependencies",a);var b={};c.filter(function(e){return typeof e==="string"}).forEach(function(g){g=g.trim().split(/(:?[@\s><=])/);var e=g.shift();var f=g.join("");f=f.trim();f=f.replace(/^@/,"");b[e]=f});return b}function objectifyDeps(a,b){depTypes.forEach(function(c){if(!a[c]){return}a[c]=depObjectify(a[c],c,b)})}function bugsTypos(b,a){if(!b){return}Object.keys(b).forEach(function(c){if(typos.bugs[c]){a("typo",c,typos.bugs[c],"bugs");b[typos.bugs[c]]=b[c];delete b[c]}})};