"use strict";var utils=require("../utils/common");var adler32=require("./adler32");var crc32=require("./crc32");var inflate_fast=require("./inffast");var inflate_table=require("./inftrees");var CODES=0;var LENS=1;var DISTS=2;var Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;var Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;var Z_DEFLATED=8;var HEAD=1;var FLAGS=2;var TIME=3;var OS=4;var EXLEN=5;var EXTRA=6;var NAME=7;var COMMENT=8;var HCRC=9;var DICTID=10;var DICT=11;var TYPE=12;var TYPEDO=13;var STORED=14;var COPY_=15;var COPY=16;var TABLE=17;var LENLENS=18;var CODELENS=19;var LEN_=20;var LEN=21;var LENEXT=22;var DIST=23;var DISTEXT=24;var MATCH=25;var LIT=26;var CHECK=27;var LENGTH=28;var DONE=29;var BAD=30;var MEM=31;var SYNC=32;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;var MAX_WBITS=15;var DEF_WBITS=MAX_WBITS;function zswap32(a){return(((a>>>24)&255)+((a>>>8)&65280)+((a&65280)<<8)+((a&255)<<24))}function InflateState(){this.mode=0;this.last=false;this.wrap=0;this.havedict=false;this.flags=0;this.dmax=0;this.check=0;this.total=0;this.head=null;this.wbits=0;this.wsize=0;this.whave=0;this.wnext=0;this.window=null;this.hold=0;this.bits=0;this.length=0;this.offset=0;this.extra=0;this.lencode=null;this.distcode=null;this.lenbits=0;this.distbits=0;this.ncode=0;this.nlen=0;this.ndist=0;this.have=0;this.next=null;this.lens=new utils.Buf16(320);this.work=new utils.Buf16(288);this.lendyn=null;this.distdyn=null;this.sane=0;this.back=0;this.was=0}function inflateResetKeep(a){var b;if(!a||!a.state){return Z_STREAM_ERROR}b=a.state;a.total_in=a.total_out=b.total=0;a.msg="";if(b.wrap){a.adler=b.wrap&1}b.mode=HEAD;b.last=0;b.havedict=0;b.dmax=32768;b.head=null;b.hold=0;b.bits=0;b.lencode=b.lendyn=new utils.Buf32(ENOUGH_LENS);b.distcode=b.distdyn=new utils.Buf32(ENOUGH_DISTS);b.sane=1;b.back=-1;return Z_OK}function inflateReset(a){var b;if(!a||!a.state){return Z_STREAM_ERROR}b=a.state;b.wsize=0;b.whave=0;b.wnext=0;return inflateResetKeep(a)}function inflateReset2(a,c){var b;var d;if(!a||!a.state){return Z_STREAM_ERROR}d=a.state;if(c<0){b=0;c=-c}else{b=(c>>4)+1;if(c<48){c&=15}}if(c&&(c<8||c>15)){return Z_STREAM_ERROR}if(d.window!==null&&d.wbits!==c){d.window=null}d.wrap=b;d.wbits=c;return inflateReset(a)}function inflateInit2(a,c){var b;var d;if(!a){return Z_STREAM_ERROR}d=new InflateState();a.state=d;d.window=null;b=inflateReset2(a,c);if(b!==Z_OK){a.state=null}return b}function inflateInit(a){return inflateInit2(a,DEF_WBITS)}var virgin=true;var lenfix,distfix;function fixedtables(b){if(virgin){var a;lenfix=new utils.Buf32(512);distfix=new utils.Buf32(32);a=0;while(a<144){b.lens[a++]=8}while(a<256){b.lens[a++]=9}while(a<280){b.lens[a++]=7}while(a<288){b.lens[a++]=8}inflate_table(LENS,b.lens,0,288,lenfix,0,b.work,{bits:9});a=0;while(a<32){b.lens[a++]=5}inflate_table(DISTS,b.lens,0,32,distfix,0,b.work,{bits:5});virgin=false}b.lencode=lenfix;b.lenbits=9;b.distcode=distfix;b.distbits=5}function updatewindow(b,e,a,f){var d;var c=b.state;if(c.window===null){c.wsize=1<<c.wbits;c.wnext=0;c.whave=0;c.window=new utils.Buf8(c.wsize)}if(f>=c.wsize){utils.arraySet(c.window,e,a-c.wsize,c.wsize,0);c.wnext=0;c.whave=c.wsize}else{d=c.wsize-c.wnext;if(d>f){d=f}utils.arraySet(c.window,e,a-f,d,c.wnext);f-=d;if(f){utils.arraySet(c.window,e,a-f,f,0);c.wnext=f;c.whave=c.wsize}else{c.wnext+=d;if(c.wnext===c.wsize){c.wnext=0}if(c.whave<c.wsize){c.whave+=d}}}return 0}function inflate(y,s){var f;var k,i;var q;var g;var d,e;var o;var u;var C,B;var t;var v;var c;var a=0;var z,j,A;var p,b,l;var x;var D;var h=new utils.Buf8(4);var m;var r;var w=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!y||!y.state||!y.output||(!y.input&&y.avail_in!==0)){return Z_STREAM_ERROR}f=y.state;if(f.mode===TYPE){f.mode=TYPEDO}g=y.next_out;i=y.output;e=y.avail_out;q=y.next_in;k=y.input;d=y.avail_in;o=f.hold;u=f.bits;C=d;B=e;D=Z_OK;inf_leave:for(;;){switch(f.mode){case HEAD:if(f.wrap===0){f.mode=TYPEDO;break}while(u<16){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if((f.wrap&2)&&o===35615){f.check=0;h[0]=o&255;h[1]=(o>>>8)&255;f.check=crc32(f.check,h,2,0);o=0;u=0;f.mode=FLAGS;break}f.flags=0;if(f.head){f.head.done=false}if(!(f.wrap&1)||(((o&255)<<8)+(o>>8))%31){y.msg="incorrect header check";f.mode=BAD;break}if((o&15)!==Z_DEFLATED){y.msg="unknown compression method";f.mode=BAD;break}o>>>=4;u-=4;x=(o&15)+8;if(f.wbits===0){f.wbits=x}else{if(x>f.wbits){y.msg="invalid window size";f.mode=BAD;break}}f.dmax=1<<x;y.adler=f.check=1;f.mode=o&512?DICTID:TYPE;o=0;u=0;break;case FLAGS:while(u<16){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.flags=o;if((f.flags&255)!==Z_DEFLATED){y.msg="unknown compression method";f.mode=BAD;break}if(f.flags&57344){y.msg="unknown header flags set";f.mode=BAD;break}if(f.head){f.head.text=((o>>8)&1)}if(f.flags&512){h[0]=o&255;h[1]=(o>>>8)&255;f.check=crc32(f.check,h,2,0)}o=0;u=0;f.mode=TIME;case TIME:while(u<32){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(f.head){f.head.time=o}if(f.flags&512){h[0]=o&255;h[1]=(o>>>8)&255;h[2]=(o>>>16)&255;h[3]=(o>>>24)&255;f.check=crc32(f.check,h,4,0)}o=0;u=0;f.mode=OS;case OS:while(u<16){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(f.head){f.head.xflags=(o&255);f.head.os=(o>>8)}if(f.flags&512){h[0]=o&255;h[1]=(o>>>8)&255;f.check=crc32(f.check,h,2,0)}o=0;u=0;f.mode=EXLEN;case EXLEN:if(f.flags&1024){while(u<16){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.length=o;if(f.head){f.head.extra_len=o}if(f.flags&512){h[0]=o&255;h[1]=(o>>>8)&255;f.check=crc32(f.check,h,2,0)}o=0;u=0}else{if(f.head){f.head.extra=null}}f.mode=EXTRA;case EXTRA:if(f.flags&1024){t=f.length;if(t>d){t=d}if(t){if(f.head){x=f.head.extra_len-f.length;if(!f.head.extra){f.head.extra=new Array(f.head.extra_len)}utils.arraySet(f.head.extra,k,q,t,x)}if(f.flags&512){f.check=crc32(f.check,k,t,q)}d-=t;q+=t;f.length-=t}if(f.length){break inf_leave}}f.length=0;f.mode=NAME;case NAME:if(f.flags&2048){if(d===0){break inf_leave}t=0;do{x=k[q+t++];if(f.head&&x&&(f.length<65536)){f.head.name+=String.fromCharCode(x)}}while(x&&t<d);if(f.flags&512){f.check=crc32(f.check,k,t,q)}d-=t;q+=t;if(x){break inf_leave}}else{if(f.head){f.head.name=null}}f.length=0;f.mode=COMMENT;case COMMENT:if(f.flags&4096){if(d===0){break inf_leave}t=0;do{x=k[q+t++];if(f.head&&x&&(f.length<65536)){f.head.comment+=String.fromCharCode(x)}}while(x&&t<d);if(f.flags&512){f.check=crc32(f.check,k,t,q)}d-=t;q+=t;if(x){break inf_leave}}else{if(f.head){f.head.comment=null}}f.mode=HCRC;case HCRC:if(f.flags&512){while(u<16){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(o!==(f.check&65535)){y.msg="header crc mismatch";f.mode=BAD;break}o=0;u=0}if(f.head){f.head.hcrc=((f.flags>>9)&1);f.head.done=true}y.adler=f.check=0;f.mode=TYPE;break;case DICTID:while(u<32){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}y.adler=f.check=zswap32(o);o=0;u=0;f.mode=DICT;case DICT:if(f.havedict===0){y.next_out=g;y.avail_out=e;y.next_in=q;y.avail_in=d;f.hold=o;f.bits=u;return Z_NEED_DICT}y.adler=f.check=1;f.mode=TYPE;case TYPE:if(s===Z_BLOCK||s===Z_TREES){break inf_leave}case TYPEDO:if(f.last){o>>>=u&7;u-=u&7;f.mode=CHECK;break}while(u<3){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.last=(o&1);o>>>=1;u-=1;switch((o&3)){case 0:f.mode=STORED;break;case 1:fixedtables(f);f.mode=LEN_;if(s===Z_TREES){o>>>=2;u-=2;break inf_leave}break;case 2:f.mode=TABLE;break;case 3:y.msg="invalid block type";f.mode=BAD}o>>>=2;u-=2;break;case STORED:o>>>=u&7;u-=u&7;while(u<32){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if((o&65535)!==((o>>>16)^65535)){y.msg="invalid stored block lengths";f.mode=BAD;break}f.length=o&65535;o=0;u=0;f.mode=COPY_;if(s===Z_TREES){break inf_leave}case COPY_:f.mode=COPY;case COPY:t=f.length;if(t){if(t>d){t=d}if(t>e){t=e}if(t===0){break inf_leave}utils.arraySet(i,k,q,t,g);d-=t;q+=t;e-=t;g+=t;f.length-=t;break}f.mode=TYPE;break;case TABLE:while(u<14){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.nlen=(o&31)+257;o>>>=5;u-=5;f.ndist=(o&31)+1;o>>>=5;u-=5;f.ncode=(o&15)+4;o>>>=4;u-=4;if(f.nlen>286||f.ndist>30){y.msg="too many length or distance symbols";f.mode=BAD;break}f.have=0;f.mode=LENLENS;case LENLENS:while(f.have<f.ncode){while(u<3){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.lens[w[f.have++]]=(o&7);o>>>=3;u-=3}while(f.have<19){f.lens[w[f.have++]]=0}f.lencode=f.lendyn;f.lenbits=7;m={bits:f.lenbits};D=inflate_table(CODES,f.lens,0,19,f.lencode,0,f.work,m);f.lenbits=m.bits;if(D){y.msg="invalid code lengths set";f.mode=BAD;break}f.have=0;f.mode=CODELENS;case CODELENS:while(f.have<f.nlen+f.ndist){for(;;){a=f.lencode[o&((1<<f.lenbits)-1)];z=a>>>24;j=(a>>>16)&255;A=a&65535;if((z)<=u){break}if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(A<16){o>>>=z;u-=z;f.lens[f.have++]=A}else{if(A===16){r=z+2;while(u<r){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}o>>>=z;u-=z;if(f.have===0){y.msg="invalid bit length repeat";f.mode=BAD;break}x=f.lens[f.have-1];t=3+(o&3);o>>>=2;u-=2}else{if(A===17){r=z+3;while(u<r){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}o>>>=z;u-=z;x=0;t=3+(o&7);o>>>=3;u-=3}else{r=z+7;while(u<r){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}o>>>=z;u-=z;x=0;t=11+(o&127);o>>>=7;u-=7}}if(f.have+t>f.nlen+f.ndist){y.msg="invalid bit length repeat";f.mode=BAD;break}while(t--){f.lens[f.have++]=x}}}if(f.mode===BAD){break}if(f.lens[256]===0){y.msg="invalid code -- missing end-of-block";f.mode=BAD;break}f.lenbits=9;m={bits:f.lenbits};D=inflate_table(LENS,f.lens,0,f.nlen,f.lencode,0,f.work,m);f.lenbits=m.bits;if(D){y.msg="invalid literal/lengths set";f.mode=BAD;break}f.distbits=6;f.distcode=f.distdyn;m={bits:f.distbits};D=inflate_table(DISTS,f.lens,f.nlen,f.ndist,f.distcode,0,f.work,m);f.distbits=m.bits;if(D){y.msg="invalid distances set";f.mode=BAD;break}f.mode=LEN_;if(s===Z_TREES){break inf_leave}case LEN_:f.mode=LEN;case LEN:if(d>=6&&e>=258){y.next_out=g;y.avail_out=e;y.next_in=q;y.avail_in=d;f.hold=o;f.bits=u;inflate_fast(y,B);g=y.next_out;i=y.output;e=y.avail_out;q=y.next_in;k=y.input;d=y.avail_in;o=f.hold;u=f.bits;if(f.mode===TYPE){f.back=-1}break}f.back=0;for(;;){a=f.lencode[o&((1<<f.lenbits)-1)];z=a>>>24;j=(a>>>16)&255;A=a&65535;if(z<=u){break}if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(j&&(j&240)===0){p=z;b=j;l=A;for(;;){a=f.lencode[l+((o&((1<<(p+b))-1))>>p)];z=a>>>24;j=(a>>>16)&255;A=a&65535;if((p+z)<=u){break}if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}o>>>=p;u-=p;f.back+=p}o>>>=z;u-=z;f.back+=z;f.length=A;if(j===0){f.mode=LIT;break}if(j&32){f.back=-1;f.mode=TYPE;break}if(j&64){y.msg="invalid literal/length code";f.mode=BAD;break}f.extra=j&15;f.mode=LENEXT;case LENEXT:if(f.extra){r=f.extra;while(u<r){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.length+=o&((1<<f.extra)-1);o>>>=f.extra;u-=f.extra;f.back+=f.extra}f.was=f.length;f.mode=DIST;case DIST:for(;;){a=f.distcode[o&((1<<f.distbits)-1)];z=a>>>24;j=(a>>>16)&255;A=a&65535;if((z)<=u){break}if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if((j&240)===0){p=z;b=j;l=A;for(;;){a=f.distcode[l+((o&((1<<(p+b))-1))>>p)];z=a>>>24;j=(a>>>16)&255;A=a&65535;if((p+z)<=u){break}if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}o>>>=p;u-=p;f.back+=p}o>>>=z;u-=z;f.back+=z;if(j&64){y.msg="invalid distance code";f.mode=BAD;break}f.offset=A;f.extra=(j)&15;f.mode=DISTEXT;case DISTEXT:if(f.extra){r=f.extra;while(u<r){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}f.offset+=o&((1<<f.extra)-1);o>>>=f.extra;u-=f.extra;f.back+=f.extra}if(f.offset>f.dmax){y.msg="invalid distance too far back";f.mode=BAD;break}f.mode=MATCH;case MATCH:if(e===0){break inf_leave}t=B-e;if(f.offset>t){t=f.offset-t;if(t>f.whave){if(f.sane){y.msg="invalid distance too far back";f.mode=BAD;break}}if(t>f.wnext){t-=f.wnext;v=f.wsize-t}else{v=f.wnext-t}if(t>f.length){t=f.length}c=f.window}else{c=i;v=g-f.offset;t=f.length}if(t>e){t=e}e-=t;f.length-=t;do{i[g++]=c[v++]}while(--t);if(f.length===0){f.mode=LEN}break;case LIT:if(e===0){break inf_leave}i[g++]=f.length;e--;f.mode=LEN;break;case CHECK:if(f.wrap){while(u<32){if(d===0){break inf_leave}d--;o|=k[q++]<<u;u+=8}B-=e;y.total_out+=B;f.total+=B;if(B){y.adler=f.check=(f.flags?crc32(f.check,i,B,g-B):adler32(f.check,i,B,g-B))}B=e;if((f.flags?o:zswap32(o))!==f.check){y.msg="incorrect data check";f.mode=BAD;break}o=0;u=0}f.mode=LENGTH;case LENGTH:if(f.wrap&&f.flags){while(u<32){if(d===0){break inf_leave}d--;o+=k[q++]<<u;u+=8}if(o!==(f.total&4294967295)){y.msg="incorrect length check";f.mode=BAD;break}o=0;u=0}f.mode=DONE;case DONE:D=Z_STREAM_END;break inf_leave;case BAD:D=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:default:return Z_STREAM_ERROR}}y.next_out=g;y.avail_out=e;y.next_in=q;y.avail_in=d;f.hold=o;f.bits=u;if(f.wsize||(B!==y.avail_out&&f.mode<BAD&&(f.mode<CHECK||s!==Z_FINISH))){if(updatewindow(y,y.output,y.next_out,B-y.avail_out)){f.mode=MEM;return Z_MEM_ERROR}}C-=y.avail_in;B-=y.avail_out;y.total_in+=C;y.total_out+=B;f.total+=B;if(f.wrap&&B){y.adler=f.check=(f.flags?crc32(f.check,i,B,y.next_out-B):adler32(f.check,i,B,y.next_out-B))}y.data_type=f.bits+(f.last?64:0)+(f.mode===TYPE?128:0)+(f.mode===LEN_||f.mode===COPY_?256:0);if(((C===0&&B===0)||s===Z_FINISH)&&D===Z_OK){D=Z_BUF_ERROR}return D}function inflateEnd(a){if(!a||!a.state){return Z_STREAM_ERROR}var b=a.state;if(b.window){b.window=null}a.state=null;return Z_OK}function inflateGetHeader(a,b){var c;if(!a||!a.state){return Z_STREAM_ERROR}c=a.state;if((c.wrap&2)===0){return Z_STREAM_ERROR}c.head=b;b.done=false;return Z_OK}function inflateSetDictionary(b,f){var e=f.length;var d;var a;var c;if(!b||!b.state){return Z_STREAM_ERROR}d=b.state;if(d.wrap!==0&&d.mode!==DICT){return Z_STREAM_ERROR}if(d.mode===DICT){a=1;a=adler32(a,f,e,0);if(a!==d.check){return Z_DATA_ERROR}}c=updatewindow(b,f,e,e);if(c){d.mode=MEM;return Z_MEM_ERROR}d.havedict=1;return Z_OK}exports.inflateReset=inflateReset;exports.inflateReset2=inflateReset2;exports.inflateResetKeep=inflateResetKeep;exports.inflateInit=inflateInit;exports.inflateInit2=inflateInit2;exports.inflate=inflate;exports.inflateEnd=inflateEnd;exports.inflateGetHeader=inflateGetHeader;exports.inflateSetDictionary=inflateSetDictionary;exports.inflateInfo="pako inflate (from Nodeca project)";