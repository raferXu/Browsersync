if(process.env.OBJECT_IMPL){global.TYPED_ARRAY_SUPPORT=false}var B=require("../").Buffer;var test=require("tape");test("new buffer from array",function(a){a.equal(new B([1,2,3]).toString(),"\u0001\u0002\u0003");a.end()});test("new buffer from array w/ negatives",function(a){a.equal(new B([-1,-2,-3]).toString("hex"),"fffefd");a.end()});test("new buffer from array with mixed signed input",function(a){a.equal(new B([-255,255,-128,128,512,-512,511,-511]).toString("hex"),"01ff80800000ff01");a.end()});test("new buffer from string",function(a){a.equal(new B("hey","utf8").toString(),"hey");a.end()});test("new buffer from buffer",function(c){var b=new B("asdf");var a=new B(b);c.equal(b.toString("hex"),a.toString("hex"));c.end()});test("new buffer from ArrayBuffer",function(c){if(typeof ArrayBuffer!=="undefined"){var d=new Uint8Array([0,1,2,3]).buffer;var a=new B(d);c.equal(a.length,4);c.equal(a[0],0);c.equal(a[1],1);c.equal(a[2],2);c.equal(a[3],3);c.equal(a[4],undefined)}c.end()});test("new buffer from ArrayBuffer, shares memory",function(d){if(Buffer.TYPED_ARRAY_SUPPORT){var c=new Uint8Array([0,1,2,3]);var e=c.buffer;var a=new B(e);d.equal(a.length,4);d.equal(a[0],0);d.equal(a[1],1);d.equal(a[2],2);d.equal(a[3],3);d.equal(a[4],undefined);c[0]=10;d.equal(a[0],10);c[1]=11;d.equal(a[1],11);c[2]=12;d.equal(a[2],12);c[3]=13;d.equal(a[3],13)}d.end()});test("new buffer from Uint8Array",function(c){if(typeof Uint8Array!=="undefined"){var b=new Uint8Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Uint16Array",function(c){if(typeof Uint16Array!=="undefined"){var b=new Uint16Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Uint32Array",function(c){if(typeof Uint32Array!=="undefined"){var b=new Uint32Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Int16Array",function(c){if(typeof Int16Array!=="undefined"){var b=new Int16Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Int32Array",function(c){if(typeof Int32Array!=="undefined"){var b=new Int32Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Float32Array",function(c){if(typeof Float32Array!=="undefined"){var b=new Float32Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from Float64Array",function(c){if(typeof Float64Array!=="undefined"){var b=new Float64Array([0,1,2,3]);var a=new B(b);c.equal(b.length,a.length);c.equal(b[0],0);c.equal(b[1],1);c.equal(b[2],2);c.equal(b[3],3);c.equal(b[4],undefined)}c.end()});test("new buffer from buffer.toJSON() output",function(c){if(typeof JSON==="undefined"){c.end();return}var a=new B("test");var b=JSON.stringify(a);var d=JSON.parse(b);var e=new B(d);c.ok(a.equals(e));c.end()});