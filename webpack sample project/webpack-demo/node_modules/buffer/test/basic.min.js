if(process.env.OBJECT_IMPL){global.TYPED_ARRAY_SUPPORT=false}var B=require("../").Buffer;var test=require("tape");test("instanceof Buffer",function(b){var a=new B([1,2]);b.ok(a instanceof B);b.end()});test("convert to Uint8Array in modern browsers",function(c){if(B.TYPED_ARRAY_SUPPORT){var b=new B([1,2]);var a=new Uint8Array(b.buffer);c.ok(a instanceof Uint8Array);c.equal(a[0],1);c.equal(a[1],2)}else{c.pass("object impl: skipping test")}c.end()});test("indexes from a string",function(b){var a=new B("abc");b.equal(a[0],97);b.equal(a[1],98);b.equal(a[2],99);b.end()});test("indexes from an array",function(b){var a=new B([97,98,99]);b.equal(a[0],97);b.equal(a[1],98);b.equal(a[2],99);b.end()});test("setting index value should modify buffer contents",function(b){var a=new B([97,98,99]);b.equal(a[2],99);b.equal(a.toString(),"abc");a[2]+=10;b.equal(a[2],109);b.equal(a.toString(),"abm");b.end()});test("storing negative number should cast to unsigned",function(b){var a=new B(1);if(B.TYPED_ARRAY_SUPPORT){a[0]=-3;b.equal(a[0],253)}a=new B(1);a.writeInt8(-3,0);b.equal(a[0],253);b.end()});test("test that memory is copied from array-like",function(d){if(B.TYPED_ARRAY_SUPPORT){var c=new Uint8Array(4);var a=new B(c);a[0]=1;a[1]=2;a[2]=3;a[3]=4;d.equal(c[0],0);d.equal(c[1],0);d.equal(c[2],0);d.equal(c[3],0)}else{d.pass("object impl: skipping test")}d.end()});