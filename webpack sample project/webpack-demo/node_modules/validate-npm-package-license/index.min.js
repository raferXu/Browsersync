var parse=require("spdx-expression-parse");var correct=require("spdx-correct");var genericWarning=('license should be a valid SPDX license expression (without "LicenseRef"), "UNLICENSED", or "SEE LICENSE IN <filename>"');var fileReferenceRE=/^SEE LICEN[CS]E IN (.+)$/;function startsWith(b,a){return a.slice(0,b.length)===b}function usesLicenseRef(a){if(a.hasOwnProperty("license")){var b=a.license;return(startsWith("LicenseRef",b)||startsWith("DocumentRef",b))}else{return(usesLicenseRef(a.left)||usesLicenseRef(a.right))}}module.exports=function(f){var b;try{b=parse(f)}catch(g){var d;if(f==="UNLICENSED"||f==="UNLICENCED"){return{validForOldPackages:true,validForNewPackages:true,unlicensed:true}}else{if(d=fileReferenceRE.exec(f)){return{validForOldPackages:true,validForNewPackages:true,inFile:d[1]}}else{var a={validForOldPackages:false,validForNewPackages:false,warnings:[genericWarning]};var c=correct(f);if(c){a.warnings.push('license is similar to the valid expression "'+c+'"')}return a}}}if(usesLicenseRef(b)){return{validForNewPackages:false,validForOldPackages:false,spdx:true,warnings:[genericWarning]}}else{return{validForNewPackages:true,validForOldPackages:true,spdx:true}}};