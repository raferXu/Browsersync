var assert=require("assert");var delegate=require("..");describe(".method(name)",function(){it("should delegate methods",function(){var a={};a.request={foo:function(b){assert(this==a.request);return b}};delegate(a,"request").method("foo");a.foo("something").should.equal("something")})});describe(".getter(name)",function(){it("should delegate getters",function(){var a={};a.request={get type(){return"text/html"}};delegate(a,"request").getter("type");a.type.should.equal("text/html")})});describe(".setter(name)",function(){it("should delegate setters",function(){var a={};a.request={get type(){return this._type.toUpperCase()},set type(b){this._type=b}};delegate(a,"request").setter("type");a.type="hey";a.request.type.should.equal("HEY")})});describe(".access(name)",function(){it("should delegate getters and setters",function(){var a={};a.request={get type(){return this._type.toUpperCase()},set type(b){this._type=b}};delegate(a,"request").access("type");a.type="hey";a.type.should.equal("HEY")})});describe(".fluent(name)",function(){it("should delegate in a fluent fashion",function(){var a={settings:{env:"development"}};delegate(a,"settings").fluent("env");a.env().should.equal("development");a.env("production").should.equal(a);a.settings.env.should.equal("production")})});