"use strict";var buffer=require("buffer");var Buffer=buffer.Buffer;var SlowBuffer=buffer.SlowBuffer;var MAX_LEN=buffer.kMaxLength||2147483647;exports.alloc=function alloc(j,g,a){if(typeof Buffer.alloc==="function"){return Buffer.alloc(j,g,a)}if(typeof a==="number"){throw new TypeError("encoding must not be number")}if(typeof j!=="number"){throw new TypeError("size must be a number")}if(j>MAX_LEN){throw new RangeError("size is too large")}var d=a;var f=g;if(f===undefined){d=undefined;f=0}var b=new Buffer(j);if(typeof f==="string"){var c=new Buffer(f,d);var h=c.length;var e=-1;while(++e<j){b[e]=c[e%h]}}else{b.fill(f)}return b};exports.allocUnsafe=function allocUnsafe(a){if(typeof Buffer.allocUnsafe==="function"){return Buffer.allocUnsafe(a)}if(typeof a!=="number"){throw new TypeError("size must be a number")}if(a>MAX_LEN){throw new RangeError("size is too large")}return new Buffer(a)};exports.from=function from(e,c,d){if(typeof Buffer.from==="function"&&(!global.Uint8Array||Uint8Array.from!==Buffer.from)){return Buffer.from(e,c,d)}if(typeof e==="number"){throw new TypeError('"value" argument must not be a number')}if(typeof e==="string"){return new Buffer(e,c)}if(typeof ArrayBuffer!=="undefined"&&e instanceof ArrayBuffer){var f=c;if(arguments.length===1){return new Buffer(e)}if(typeof f==="undefined"){f=0}var a=d;if(typeof a==="undefined"){a=e.byteLength-f}if(f>=e.byteLength){throw new RangeError("'offset' is out of bounds")}if(a>e.byteLength-f){throw new RangeError("'length' is out of bounds")}return new Buffer(e.slice(f,f+a))}if(Buffer.isBuffer(e)){var b=new Buffer(e.length);e.copy(b,0,0,e.length);return b}if(e){if(Array.isArray(e)||(typeof ArrayBuffer!=="undefined"&&e.buffer instanceof ArrayBuffer)||"length" in e){return new Buffer(e)}if(e.type==="Buffer"&&Array.isArray(e.data)){return new Buffer(e.data)}}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")};exports.allocUnsafeSlow=function allocUnsafeSlow(a){if(typeof Buffer.allocUnsafeSlow==="function"){return Buffer.allocUnsafeSlow(a)}if(typeof a!=="number"){throw new TypeError("size must be a number")}if(a>=MAX_LEN){throw new RangeError("size is too large")}return new SlowBuffer(a)};