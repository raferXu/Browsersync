"use strict";var url=require("url"),tunnel=require("tunnel-agent");var defaultProxyHeaderWhiteList=["accept","accept-charset","accept-encoding","accept-language","accept-ranges","cache-control","content-encoding","content-language","content-location","content-md5","content-range","content-type","connection","date","expect","max-forwards","pragma","referer","te","user-agent","via"];var defaultProxyHeaderExclusiveList=["proxy-authorization"];function constructProxyHost(d){var b=d.port,c=d.protocol,a=d.hostname+":";if(b){a+=b}else{if(c==="https:"){a+="443"}else{a+="80"}}return a}function constructProxyHeaderWhiteList(c,b){var a=b.reduce(function(e,d){e[d.toLowerCase()]=true;return e},{});return Object.keys(c).filter(function(d){return a[d.toLowerCase()]}).reduce(function(e,d){e[d]=c[d];return e},{})}function constructTunnelOptions(c,d){var b=c.proxy;var a={proxy:{host:b.hostname,port:+b.port,proxyAuth:b.auth,headers:d},headers:c.headers,ca:c.ca,cert:c.cert,key:c.key,passphrase:c.passphrase,pfx:c.pfx,ciphers:c.ciphers,rejectUnauthorized:c.rejectUnauthorized,secureOptions:c.secureOptions,secureProtocol:c.secureProtocol};return a}function constructTunnelFnName(d,c){var b=(d.protocol==="https:"?"https":"http");var a=(c.protocol==="https:"?"Https":"Http");return[b,a].join("Over")}function getTunnelFn(d){var c=d.uri;var b=d.proxy;var a=constructTunnelFnName(c,b);return tunnel[a]}function Tunnel(a){this.request=a;this.proxyHeaderWhiteList=defaultProxyHeaderWhiteList;this.proxyHeaderExclusiveList=[];if(typeof a.tunnel!=="undefined"){this.tunnelOverride=a.tunnel}}Tunnel.prototype.isEnabled=function(){var a=this,b=a.request;if(typeof a.tunnelOverride!=="undefined"){return a.tunnelOverride}if(b.uri.protocol==="https:"){return true}return false};Tunnel.prototype.setup=function(f){var e=this,g=e.request;f=f||{};if(typeof g.proxy==="string"){g.proxy=url.parse(g.proxy)}if(!g.proxy||!g.tunnel){return false}if(f.proxyHeaderWhiteList){e.proxyHeaderWhiteList=f.proxyHeaderWhiteList}if(f.proxyHeaderExclusiveList){e.proxyHeaderExclusiveList=f.proxyHeaderExclusiveList}var a=e.proxyHeaderExclusiveList.concat(defaultProxyHeaderExclusiveList);var d=e.proxyHeaderWhiteList.concat(a);var h=constructProxyHeaderWhiteList(g.headers,d);h.host=constructProxyHost(g.uri);a.forEach(g.removeHeader,g);var c=getTunnelFn(g);var b=constructTunnelOptions(g,h);g.agent=c(b);return true};Tunnel.defaultProxyHeaderWhiteList=defaultProxyHeaderWhiteList;Tunnel.defaultProxyHeaderExclusiveList=defaultProxyHeaderExclusiveList;exports.Tunnel=Tunnel;