var tar=require("../");var path=require("path");var rfile=require("rfile");var rimraf=require("rimraf").sync;var mkdir=require("mkdirp").sync;var read=require("fs").createReadStream;var write=require("fs").createWriteStream;var assert=require("assert");beforeEach(function(){rimraf(__dirname+"/output")});afterEach(function(){rimraf(__dirname+"/output")});describe("tarball.pipe(unpack(directory, callback))",function(){it("unpacks the tarball into the directory",function(a){read(__dirname+"/fixtures/packed.tar").pipe(tar.unpack(__dirname+"/output/unpacked",function(b){if(b){return a(b)}assert.equal(rfile("./output/unpacked/bar.txt"),rfile("./fixtures/to-pack/bar.txt"));assert.equal(rfile("./output/unpacked/foo.txt"),rfile("./fixtures/to-pack/foo.txt"));a()}))});it("unpacks the tarball into the directory without deleting existing files",function(a){read(__dirname+"/fixtures/packed-file.txt").pipe(tar.unpack(__dirname+"/output/unpacked",function(b){if(b){return a(b)}read(__dirname+"/fixtures/packed.tar").pipe(tar.unpack(__dirname+"/output/unpacked",{keepFiles:true},function(c){if(c){return a(c)}assert.equal(rfile("./output/unpacked/index.js"),rfile("./fixtures/packed-file.txt"));a()}))}))})});describe("tarball.pipe(unpack(directory, { strip: 0 }, callback))",function(){it("unpacks the tarball into the directory with subdir package",function(a){read(__dirname+"/fixtures/packed.tar").pipe(tar.unpack(__dirname+"/output/unpacked",{strip:0},function(b){if(b){return a(b)}assert.equal(rfile("./output/unpacked/package/bar.txt"),rfile("./fixtures/to-pack/bar.txt"));assert.equal(rfile("./output/unpacked/package/foo.txt"),rfile("./fixtures/to-pack/foo.txt"));a()}))})});describe("gziptarball.pipe(unpack(directory, callback))",function(){it("unpacks the tarball into the directory",function(a){read(__dirname+"/fixtures/packed.tar.gz").pipe(tar.unpack(__dirname+"/output/unpacked",function(b){if(b){return a(b)}assert.equal(rfile("./output/unpacked/bar.txt"),rfile("./fixtures/to-pack/bar.txt"));assert.equal(rfile("./output/unpacked/foo.txt"),rfile("./fixtures/to-pack/foo.txt"));a()}))})});describe("file.pipe(unpack(directory, callback))",function(){it("copies the file into the directory",function(a){read(__dirname+"/fixtures/packed-file.txt").pipe(tar.unpack(__dirname+"/output/unpacked",function(b){if(b){return a(b)}assert.equal(rfile("./output/unpacked/index.js"),rfile("./fixtures/packed-file.txt"));a()}))})});describe("pack(directory).pipe(tarball)",function(){it("packs the directory into the output",function(a){var b=false;mkdir(__dirname+"/output/");tar.pack(__dirname+"/fixtures/to-pack").pipe(write(__dirname+"/output/packed.tar.gz")).on("error",function(c){if(b){return}b=true;a(c)}).on("close",function(){if(b){return}b=true;read(__dirname+"/output/packed.tar.gz").pipe(tar.unpack(__dirname+"/output/unpacked",function(c){if(c){return a(c)}assert.equal(rfile("./output/unpacked/bar.txt"),rfile("./fixtures/to-pack/bar.txt"));assert.equal(rfile("./output/unpacked/foo.txt"),rfile("./fixtures/to-pack/foo.txt"));a()}))})})});describe("pack(directory, { fromBase: true }).pipe(tarball)",function(){it("packs the directory with input dir as base dir",function(a){var b=false;mkdir(__dirname+"/output/");tar.pack(__dirname+"/fixtures/to-pack",{fromBase:true}).pipe(write(__dirname+"/output/packed.tar.gz")).on("error",function(c){if(b){return}b=true;a(c)}).on("close",function(){if(b){return}b=true;read(__dirname+"/output/packed.tar.gz").pipe(tar.unpack(__dirname+"/output/unpacked",{strip:0},function(c){if(c){return a(c)}assert.equal(rfile("./output/unpacked/bar.txt"),rfile("./fixtures/to-pack/bar.txt"));assert.equal(rfile("./output/unpacked/foo.txt"),rfile("./fixtures/to-pack/foo.txt"));a()}))})})});