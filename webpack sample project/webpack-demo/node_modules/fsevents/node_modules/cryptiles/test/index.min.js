var Code=require("code");var Cryptiles=require("..");var Lab=require("lab");var internals={};var lab=exports.lab=Lab.script();var describe=lab.describe;var it=lab.it;var expect=Code.expect;describe("randomString()",function(){it("should generate the right length string",function(a){for(var b=1;b<=1000;++b){expect(Cryptiles.randomString(b).length).to.equal(b)}a()});it("returns an error on invalid bits size",function(a){expect(Cryptiles.randomString(100000000000000000000).message).to.match(/Failed generating random bits/);a()})});describe("randomBits()",function(){it("returns an error on invalid input",function(a){expect(Cryptiles.randomBits(0).message).to.equal("Invalid random bits count");a()})});describe("fixedTimeComparison()",function(){var d=Cryptiles.randomString(50000);var c=Cryptiles.randomString(150000);it("should take the same amount of time comparing different string sizes",function(a){var b=Date.now();Cryptiles.fixedTimeComparison(c,d);var f=Date.now()-b;b=Date.now();Cryptiles.fixedTimeComparison(c,c);var e=Date.now()-b;expect(e-f).to.be.within(-20,20);a()});it("should return true for equal strings",function(a){expect(Cryptiles.fixedTimeComparison(d,d)).to.equal(true);a()});it("should return false for different strings (size, a < b)",function(a){expect(Cryptiles.fixedTimeComparison(d,d+"x")).to.equal(false);a()});it("should return false for different strings (size, a > b)",function(a){expect(Cryptiles.fixedTimeComparison(d+"x",d)).to.equal(false);a()});it("should return false for different strings (size, a = b)",function(a){expect(Cryptiles.fixedTimeComparison(d+"x",d+"y")).to.equal(false);a()});it("should return false when not a string",function(a){expect(Cryptiles.fixedTimeComparison("x",null)).to.equal(false);a()});it("should return false when not a string (left)",function(a){expect(Cryptiles.fixedTimeComparison(null,"x")).to.equal(false);a()})});