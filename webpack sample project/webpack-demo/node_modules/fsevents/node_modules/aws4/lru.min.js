module.exports=function(a){return new LruCache(a)};function LruCache(a){this.capacity=a|0;this.map=Object.create(null);this.list=new DoublyLinkedList()}LruCache.prototype.get=function(a){var b=this.map[a];if(b==null){return undefined}this.used(b);return b.val};LruCache.prototype.set=function(a,c){var b=this.map[a];if(b!=null){b.val=c}else{if(!this.capacity){this.prune()}if(!this.capacity){return false}b=new DoublyLinkedNode(a,c);this.map[a]=b;this.capacity--}this.used(b);return true};LruCache.prototype.used=function(a){this.list.moveToFront(a)};LruCache.prototype.prune=function(){var a=this.list.pop();if(a!=null){delete this.map[a.key];this.capacity++}};function DoublyLinkedList(){this.firstNode=null;this.lastNode=null}DoublyLinkedList.prototype.moveToFront=function(a){if(this.firstNode==a){return}this.remove(a);if(this.firstNode==null){this.firstNode=a;this.lastNode=a;a.prev=null;a.next=null}else{a.prev=null;a.next=this.firstNode;a.next.prev=a;this.firstNode=a}};DoublyLinkedList.prototype.pop=function(){var a=this.lastNode;if(a!=null){this.remove(a)}return a};DoublyLinkedList.prototype.remove=function(a){if(this.firstNode==a){this.firstNode=a.next}else{if(a.prev!=null){a.prev.next=a.next}}if(this.lastNode==a){this.lastNode=a.prev}else{if(a.next!=null){a.next.prev=a.prev}}};function DoublyLinkedNode(a,b){this.key=a;this.val=b;this.prev=null;this.next=null};