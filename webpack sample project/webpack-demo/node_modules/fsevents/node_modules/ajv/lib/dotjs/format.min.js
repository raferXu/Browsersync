"use strict";module.exports=function generate_format(f,i){var o=" ";var t=f.level;var g=f.dataLevel;var p=f.schema[i];var d=f.schemaPath+f.util.getProperty(i);var k=f.errSchemaPath+"/"+i;var h=!f.opts.allErrors;var c="data"+(g||"");if(f.opts.format===false){if(h){o+=" if (true) { "}return o}var b=f.opts.v5&&p&&p.$data,m;if(b){o+=" var schema"+(t)+" = "+(f.util.getData(p.$data,g,f.dataPathArr))+"; ";m="schema"+t}else{m=p}var e=f.opts.unknownFormats,q=Array.isArray(e);if(b){var s="format"+t;o+=" var "+(s)+" = formats["+(m)+"]; var isObject"+(t)+" = typeof "+(s)+" == 'object' && !("+(s)+" instanceof RegExp) && "+(s)+".validate; if (isObject"+(t)+") { ";if(f.async){o+=" var async"+(t)+" = "+(s)+".async; "}o+=" "+(s)+" = "+(s)+".validate; } if (  ";if(b){o+=" ("+(m)+" !== undefined && typeof "+(m)+" != 'string') || "}o+=" (";if(e===true||q){o+=" ("+(m)+" && !"+(s)+" ";if(q){o+=" && self._opts.unknownFormats.indexOf("+(m)+") == -1 "}o+=") || "}o+=" ("+(s)+" && !(typeof "+(s)+" == 'function' ? ";if(f.async){o+=" (async"+(t)+" ? "+(f.yieldAwait)+" "+(s)+"("+(c)+") : "+(s)+"("+(c)+")) "}else{o+=" "+(s)+"("+(c)+") "}o+=" : "+(s)+".test("+(c)+"))))) {"}else{var s=f.formats[p];if(!s){if(e===true||(q&&e.indexOf(p)==-1)){throw new Error('unknown format "'+p+'" is used in schema at path "'+f.errSchemaPath+'"')}else{if(!q){console.warn('unknown format "'+p+'" ignored in schema at path "'+f.errSchemaPath+'"');if(e!=="ignore"){console.warn("In the next major version it will throw exception. See option unknownFormats for more information")}}if(h){o+=" if (true) { "}return o}}var n=typeof s=="object"&&!(s instanceof RegExp)&&s.validate;if(n){var r=s.async===true;s=s.validate}if(r){if(!f.async){throw new Error("async format in sync schema")}var j="formats"+f.util.getProperty(p)+".validate";o+=" if (!("+(f.yieldAwait)+" "+(j)+"("+(c)+"))) { "}else{o+=" if (! ";var j="formats"+f.util.getProperty(p);if(n){j+=".validate"}if(typeof s=="function"){o+=" "+(j)+"("+(c)+") "}else{o+=" "+(j)+".test("+(c)+") "}o+=") { "}}var l=l||[];l.push(o);o="";if(f.createErrors!==false){o+=" { keyword: '"+("format")+"' , dataPath: (dataPath || '') + "+(f.errorPath)+" , schemaPath: "+(f.util.toQuotedString(k))+" , params: { format:  ";if(b){o+=""+(m)}else{o+=""+(f.util.toQuotedString(p))}o+="  } ";if(f.opts.messages!==false){o+=" , message: 'should match format \"";if(b){o+="' + "+(m)+" + '"}else{o+=""+(f.util.escapeQuotes(p))}o+="\"' "}if(f.opts.verbose){o+=" , schema:  ";if(b){o+="validate.schema"+(d)}else{o+=""+(f.util.toQuotedString(p))}o+="         , parentSchema: validate.schema"+(f.schemaPath)+" , data: "+(c)+" "}o+=" } "}else{o+=" {} "}var a=o;o=l.pop();if(!f.compositeRule&&h){if(f.async){o+=" throw new ValidationError(["+(a)+"]); "}else{o+=" validate.errors = ["+(a)+"]; return false; "}}else{o+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}o+=" } ";if(h){o+=" else { "}return o};