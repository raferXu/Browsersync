"use strict";module.exports=function generate_oneOf(j,m){var t=" ";var w=j.level;var k=j.dataLevel;var u=j.schema[m];var h=j.schemaPath+j.util.getProperty(m);var n=j.errSchemaPath+"/"+m;var l=!j.opts.allErrors;var e="data"+(k||"");var g="valid"+w;var q="errs__"+w;var f=j.util.copy(j);var d="";f.level++;var v="valid"+f.level;t+="var "+(q)+" = errors;var prevValid"+(w)+" = false;var "+(g)+" = false;";var c=f.baseId;var p=j.compositeRule;j.compositeRule=f.compositeRule=true;var i=u;if(i){var o,b=-1,r=i.length-1;while(b<r){o=i[b+=1];if(j.util.schemaHasRules(o,j.RULES.all)){f.schema=o;f.schemaPath=h+"["+b+"]";f.errSchemaPath=n+"/"+b;t+="  "+(j.validate(f))+" ";f.baseId=c}else{t+=" var "+(v)+" = true; "}if(b){t+=" if ("+(v)+" && prevValid"+(w)+") "+(g)+" = false; else { ";d+="}"}t+=" if ("+(v)+") "+(g)+" = prevValid"+(w)+" = true;"}}j.compositeRule=f.compositeRule=p;t+=""+(d)+"if (!"+(g)+") {   ";var s=s||[];s.push(t);t="";if(j.createErrors!==false){t+=" { keyword: '"+("oneOf")+"' , dataPath: (dataPath || '') + "+(j.errorPath)+" , schemaPath: "+(j.util.toQuotedString(n))+" , params: {} ";if(j.opts.messages!==false){t+=" , message: 'should match exactly one schema in oneOf' "}if(j.opts.verbose){t+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(j.schemaPath)+" , data: "+(e)+" "}t+=" } "}else{t+=" {} "}var a=t;t=s.pop();if(!j.compositeRule&&l){if(j.async){t+=" throw new ValidationError(["+(a)+"]); "}else{t+=" validate.errors = ["+(a)+"]; return false; "}}else{t+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}t+="} else {  errors = "+(q)+"; if (vErrors !== null) { if ("+(q)+") vErrors.length = "+(q)+"; else vErrors = null; }";if(j.opts.allErrors){t+=" } "}return t};