"use strict";module.exports=function generate_required(k,p){var D=" ";var H=k.level;var l=k.dataLevel;var E=k.schema[p];var h=k.schemaPath+k.util.getProperty(p);var s=k.errSchemaPath+"/"+p;var o=!k.opts.allErrors;var e="data"+(l||"");var f="valid"+H;var d=k.opts.v5&&E&&E.$data,B;if(d){D+=" var schema"+(H)+" = "+(k.util.getData(E.$data,l,k.dataPathArr))+"; ";B="schema"+H}else{B=E}var F="schema"+H;if(!d){if(E.length<k.opts.loopRequired&&k.schema.properties&&Object.keys(k.schema.properties).length){var C=[];var j=E;if(j){var u,y=-1,z=j.length-1;while(y<z){u=j[y+=1];var G=k.schema.properties[u];if(!(G&&k.util.schemaHasRules(G,k.RULES.all))){C[C.length]=u}}}}else{var C=E}}if(d||C.length){var t=k.errorPath,r=d||C.length>=k.opts.loopRequired;if(o){D+=" var missing"+(H)+"; ";if(r){if(!d){D+=" var "+(F)+" = validate.schema"+(h)+"; "}var b="i"+H,c="schema"+H+"["+b+"]",q="' + "+c+" + '";if(k.opts._errorDataPathProperty){k.errorPath=k.util.getPathExpr(t,c,k.opts.jsonPointers)}D+=" var "+(f)+" = true; ";if(d){D+=" if (schema"+(H)+" === undefined) "+(f)+" = true; else if (!Array.isArray(schema"+(H)+")) "+(f)+" = false; else {"}D+=" for (var "+(b)+" = 0; "+(b)+" < "+(F)+".length; "+(b)+"++) { "+(f)+" = "+(e)+"["+(F)+"["+(b)+"]] !== undefined; if (!"+(f)+") break; } ";if(d){D+="  }  "}D+="  if (!"+(f)+") {   ";var A=A||[];A.push(D);D="";if(k.createErrors!==false){D+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(k.errorPath)+" , schemaPath: "+(k.util.toQuotedString(s))+" , params: { missingProperty: '"+(q)+"' } ";if(k.opts.messages!==false){D+=" , message: '";if(k.opts._errorDataPathProperty){D+="is a required property"}else{D+="should have required property \\'"+(q)+"\\'"}D+="' "}if(k.opts.verbose){D+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(k.schemaPath)+" , data: "+(e)+" "}D+=" } "}else{D+=" {} "}var a=D;D=A.pop();if(!k.compositeRule&&o){if(k.async){D+=" throw new ValidationError(["+(a)+"]); "}else{D+=" validate.errors = ["+(a)+"]; return false; "}}else{D+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}D+=" } else { "}else{D+=" if ( ";var i=C;if(i){var I,b=-1,x=i.length-1;while(b<x){I=i[b+=1];if(b){D+=" || "}var m=k.util.getProperty(I);D+=" ( "+(e)+(m)+" === undefined && (missing"+(H)+" = "+(k.util.toQuotedString(k.opts.jsonPointers?I:m))+") ) "}}D+=") {  ";var c="missing"+H,q="' + "+c+" + '";if(k.opts._errorDataPathProperty){k.errorPath=k.opts.jsonPointers?k.util.getPathExpr(t,c,true):t+" + "+c}var A=A||[];A.push(D);D="";if(k.createErrors!==false){D+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(k.errorPath)+" , schemaPath: "+(k.util.toQuotedString(s))+" , params: { missingProperty: '"+(q)+"' } ";if(k.opts.messages!==false){D+=" , message: '";if(k.opts._errorDataPathProperty){D+="is a required property"}else{D+="should have required property \\'"+(q)+"\\'"}D+="' "}if(k.opts.verbose){D+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(k.schemaPath)+" , data: "+(e)+" "}D+=" } "}else{D+=" {} "}var a=D;D=A.pop();if(!k.compositeRule&&o){if(k.async){D+=" throw new ValidationError(["+(a)+"]); "}else{D+=" validate.errors = ["+(a)+"]; return false; "}}else{D+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}D+=" } else { "}}else{if(r){if(!d){D+=" var "+(F)+" = validate.schema"+(h)+"; "}var b="i"+H,c="schema"+H+"["+b+"]",q="' + "+c+" + '";if(k.opts._errorDataPathProperty){k.errorPath=k.util.getPathExpr(t,c,k.opts.jsonPointers)}if(d){D+=" if ("+(F)+" && !Array.isArray("+(F)+")) {  var err =   ";if(k.createErrors!==false){D+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(k.errorPath)+" , schemaPath: "+(k.util.toQuotedString(s))+" , params: { missingProperty: '"+(q)+"' } ";if(k.opts.messages!==false){D+=" , message: '";if(k.opts._errorDataPathProperty){D+="is a required property"}else{D+="should have required property \\'"+(q)+"\\'"}D+="' "}if(k.opts.verbose){D+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(k.schemaPath)+" , data: "+(e)+" "}D+=" } "}else{D+=" {} "}D+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+(F)+" !== undefined) { "}D+=" for (var "+(b)+" = 0; "+(b)+" < "+(F)+".length; "+(b)+"++) { if ("+(e)+"["+(F)+"["+(b)+"]] === undefined) {  var err =   ";if(k.createErrors!==false){D+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(k.errorPath)+" , schemaPath: "+(k.util.toQuotedString(s))+" , params: { missingProperty: '"+(q)+"' } ";if(k.opts.messages!==false){D+=" , message: '";if(k.opts._errorDataPathProperty){D+="is a required property"}else{D+="should have required property \\'"+(q)+"\\'"}D+="' "}if(k.opts.verbose){D+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(k.schemaPath)+" , data: "+(e)+" "}D+=" } "}else{D+=" {} "}D+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ";if(d){D+="  }  "}}else{var g=C;if(g){var n,v=-1,w=g.length-1;while(v<w){n=g[v+=1];var m=k.util.getProperty(n),q=k.util.escapeQuotes(n);if(k.opts._errorDataPathProperty){k.errorPath=k.util.getPath(t,n,k.opts.jsonPointers)}D+=" if ("+(e)+(m)+" === undefined) {  var err =   ";if(k.createErrors!==false){D+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(k.errorPath)+" , schemaPath: "+(k.util.toQuotedString(s))+" , params: { missingProperty: '"+(q)+"' } ";if(k.opts.messages!==false){D+=" , message: '";if(k.opts._errorDataPathProperty){D+="is a required property"}else{D+="should have required property \\'"+(q)+"\\'"}D+="' "}if(k.opts.verbose){D+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(k.schemaPath)+" , data: "+(e)+" "}D+=" } "}else{D+=" {} "}D+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}}}k.errorPath=t}else{if(o){D+=" if (true) {"}}return D};