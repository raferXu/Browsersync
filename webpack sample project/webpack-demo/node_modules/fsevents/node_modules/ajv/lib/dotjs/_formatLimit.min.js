"use strict";module.exports=function generate__formatLimit(i,n){var B=" ";var E=i.level;var k=i.dataLevel;var C=i.schema[n];var g=i.schemaPath+i.util.getProperty(n);var q=i.errSchemaPath+"/"+n;var m=!i.opts.allErrors;var b;var e="data"+(k||"");var f="valid"+E;B+="var "+(f)+" = undefined;";if(i.opts.format===false){B+=" "+(f)+" = true; ";return B}var x=i.schema.format,l=i.opts.v5&&x.$data,d="";if(l){var w=i.util.getData(x.$data,k,i.dataPathArr),D="format"+E,r="compare"+E;B+=" var "+(D)+" = formats["+(w)+"] , "+(r)+" = "+(D)+" && "+(D)+".compare;"}else{var D=i.formats[x];if(!(D&&D.compare)){B+="  "+(f)+" = true; ";return B}var r="formats"+i.util.getProperty(x)+".compare"}var s=n=="formatMaximum",o="formatExclusive"+(s?"Maximum":"Minimum"),p=i.schema[o],v=i.opts.v5&&p&&p.$data,j=s?"<":">",u="result"+E;var c=i.opts.v5&&C&&C.$data,A;if(c){B+=" var schema"+(E)+" = "+(i.util.getData(C.$data,k,i.dataPathArr))+"; ";A="schema"+E}else{A=C}if(v){var t=i.util.getData(p.$data,k,i.dataPathArr),F="exclusive"+E,h="op"+E,z="' + "+h+" + '";B+=" var schemaExcl"+(E)+" = "+(t)+"; ";t="schemaExcl"+E;B+=" if (typeof "+(t)+" != 'boolean' && "+(t)+" !== undefined) { "+(f)+" = false; ";var b=o;var y=y||[];y.push(B);B="";if(i.createErrors!==false){B+=" { keyword: '"+(b||"_formatExclusiveLimit")+"' , dataPath: (dataPath || '') + "+(i.errorPath)+" , schemaPath: "+(i.util.toQuotedString(q))+" , params: {} ";if(i.opts.messages!==false){B+=" , message: '"+(o)+" should be boolean' "}if(i.opts.verbose){B+=" , schema: validate.schema"+(g)+" , parentSchema: validate.schema"+(i.schemaPath)+" , data: "+(e)+" "}B+=" } "}else{B+=" {} "}var a=B;B=y.pop();if(!i.compositeRule&&m){if(i.async){B+=" throw new ValidationError(["+(a)+"]); "}else{B+=" validate.errors = ["+(a)+"]; return false; "}}else{B+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}B+=" }  ";if(m){d+="}";B+=" else { "}if(c){B+=" if ("+(A)+" === undefined) "+(f)+" = true; else if (typeof "+(A)+" != 'string') "+(f)+" = false; else { ";d+="}"}if(l){B+=" if (!"+(r)+") "+(f)+" = true; else { ";d+="}"}B+=" var "+(u)+" = "+(r)+"("+(e)+",  ";if(c){B+=""+(A)}else{B+=""+(i.util.toQuotedString(C))}B+=" ); if ("+(u)+" === undefined) "+(f)+" = false; var "+(F)+" = "+(t)+" === true; if ("+(f)+" === undefined) { "+(f)+" = "+(F)+" ? "+(u)+" "+(j)+" 0 : "+(u)+" "+(j)+"= 0; } if (!"+(f)+") var op"+(E)+" = "+(F)+" ? '"+(j)+"' : '"+(j)+"=';"}else{var F=p===true,z=j;if(!F){z+="="}var h="'"+z+"'";if(c){B+=" if ("+(A)+" === undefined) "+(f)+" = true; else if (typeof "+(A)+" != 'string') "+(f)+" = false; else { ";d+="}"}if(l){B+=" if (!"+(r)+") "+(f)+" = true; else { ";d+="}"}B+=" var "+(u)+" = "+(r)+"("+(e)+",  ";if(c){B+=""+(A)}else{B+=""+(i.util.toQuotedString(C))}B+=" ); if ("+(u)+" === undefined) "+(f)+" = false; if ("+(f)+" === undefined) "+(f)+" = "+(u)+" "+(j);if(!F){B+="="}B+=" 0;"}B+=""+(d)+"if (!"+(f)+") { ";var b=n;var y=y||[];y.push(B);B="";if(i.createErrors!==false){B+=" { keyword: '"+(b||"_formatLimit")+"' , dataPath: (dataPath || '') + "+(i.errorPath)+" , schemaPath: "+(i.util.toQuotedString(q))+" , params: { comparison: "+(h)+", limit:  ";if(c){B+=""+(A)}else{B+=""+(i.util.toQuotedString(C))}B+=" , exclusive: "+(F)+" } ";if(i.opts.messages!==false){B+=" , message: 'should be "+(z)+' "';if(c){B+="' + "+(A)+" + '"}else{B+=""+(i.util.escapeQuotes(C))}B+="\"' "}if(i.opts.verbose){B+=" , schema:  ";if(c){B+="validate.schema"+(g)}else{B+=""+(i.util.toQuotedString(C))}B+="         , parentSchema: validate.schema"+(i.schemaPath)+" , data: "+(e)+" "}B+=" } "}else{B+=" {} "}var a=B;B=y.pop();if(!i.compositeRule&&m){if(i.async){B+=" throw new ValidationError(["+(a)+"]); "}else{B+=" validate.errors = ["+(a)+"]; return false; "}}else{B+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}B+="}";return B};