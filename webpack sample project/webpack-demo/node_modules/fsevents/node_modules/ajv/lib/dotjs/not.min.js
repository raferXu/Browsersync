"use strict";module.exports=function generate_not(l,c){var k=" ";var j=l.level;var p=l.dataLevel;var q=l.schema[c];var e=l.schemaPath+l.util.getProperty(c);var d=l.errSchemaPath+"/"+c;var f=!l.opts.allErrors;var i="data"+(p||"");var n="errs__"+j;var g=l.util.copy(l);g.level++;var o="valid"+g.level;if(l.util.schemaHasRules(q,l.RULES.all)){g.schema=q;g.schemaPath=e;g.errSchemaPath=d;k+=" var "+(n)+" = errors;  ";var b=l.compositeRule;l.compositeRule=g.compositeRule=true;g.createErrors=false;var m;if(g.opts.allErrors){m=g.opts.allErrors;g.opts.allErrors=false}k+=" "+(l.validate(g))+" ";g.createErrors=true;if(m){g.opts.allErrors=m}l.compositeRule=g.compositeRule=b;k+=" if ("+(o)+") {   ";var a=a||[];a.push(k);k="";if(l.createErrors!==false){k+=" { keyword: '"+("not")+"' , dataPath: (dataPath || '') + "+(l.errorPath)+" , schemaPath: "+(l.util.toQuotedString(d))+" , params: {} ";if(l.opts.messages!==false){k+=" , message: 'should NOT be valid' "}if(l.opts.verbose){k+=" , schema: validate.schema"+(e)+" , parentSchema: validate.schema"+(l.schemaPath)+" , data: "+(i)+" "}k+=" } "}else{k+=" {} "}var h=k;k=a.pop();if(!l.compositeRule&&f){if(l.async){k+=" throw new ValidationError(["+(h)+"]); "}else{k+=" validate.errors = ["+(h)+"]; return false; "}}else{k+=" var err = "+(h)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}k+=" } else {  errors = "+(n)+"; if (vErrors !== null) { if ("+(n)+") vErrors.length = "+(n)+"; else vErrors = null; } ";if(l.opts.allErrors){k+=" } "}}else{k+="  var err =   ";if(l.createErrors!==false){k+=" { keyword: '"+("not")+"' , dataPath: (dataPath || '') + "+(l.errorPath)+" , schemaPath: "+(l.util.toQuotedString(d))+" , params: {} ";if(l.opts.messages!==false){k+=" , message: 'should NOT be valid' "}if(l.opts.verbose){k+=" , schema: validate.schema"+(e)+" , parentSchema: validate.schema"+(l.schemaPath)+" , data: "+(i)+" "}k+=" } "}else{k+=" {} "}k+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";if(f){k+=" if (false) { "}}return k};