"use strict";module.exports=function generate__limit(g,k){var v=" ";var x=g.level;var i=g.dataLevel;var w=g.schema[k];var e=g.schemaPath+g.util.getProperty(k);var n=g.errSchemaPath+"/"+k;var j=!g.opts.allErrors;var b;var d="data"+(i||"");var c=g.opts.v5&&w&&w.$data,u;if(c){v+=" var schema"+(x)+" = "+(g.util.getData(w.$data,i,g.dataPathArr))+"; ";u="schema"+x}else{u=w}var o=k=="maximum",l=o?"exclusiveMaximum":"exclusiveMinimum",m=g.schema[l],r=g.opts.v5&&m&&m.$data,h=o?"<":">",q=o?">":"<";if(r){var p=g.util.getData(m.$data,i,g.dataPathArr),y="exclusive"+x,f="op"+x,t="' + "+f+" + '";v+=" var schemaExcl"+(x)+" = "+(p)+"; ";p="schemaExcl"+x;v+=" var exclusive"+(x)+"; if (typeof "+(p)+" != 'boolean' && typeof "+(p)+" != 'undefined') { ";var b=l;var s=s||[];s.push(v);v="";if(g.createErrors!==false){v+=" { keyword: '"+(b||"_exclusiveLimit")+"' , dataPath: (dataPath || '') + "+(g.errorPath)+" , schemaPath: "+(g.util.toQuotedString(n))+" , params: {} ";if(g.opts.messages!==false){v+=" , message: '"+(l)+" should be boolean' "}if(g.opts.verbose){v+=" , schema: validate.schema"+(e)+" , parentSchema: validate.schema"+(g.schemaPath)+" , data: "+(d)+" "}v+=" } "}else{v+=" {} "}var a=v;v=s.pop();if(!g.compositeRule&&j){if(g.async){v+=" throw new ValidationError(["+(a)+"]); "}else{v+=" validate.errors = ["+(a)+"]; return false; "}}else{v+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}v+=" } else if( ";if(c){v+=" ("+(u)+" !== undefined && typeof "+(u)+" != 'number') || "}v+=" ((exclusive"+(x)+" = "+(p)+" === true) ? "+(d)+" "+(q)+"= "+(u)+" : "+(d)+" "+(q)+" "+(u)+") || "+(d)+" !== "+(d)+") { var op"+(x)+" = exclusive"+(x)+" ? '"+(h)+"' : '"+(h)+"=';"}else{var y=m===true,t=h;if(!y){t+="="}var f="'"+t+"'";v+=" if ( ";if(c){v+=" ("+(u)+" !== undefined && typeof "+(u)+" != 'number') || "}v+=" "+(d)+" "+(q);if(y){v+="="}v+=" "+(u)+" || "+(d)+" !== "+(d)+") {"}var b=k;var s=s||[];s.push(v);v="";if(g.createErrors!==false){v+=" { keyword: '"+(b||"_limit")+"' , dataPath: (dataPath || '') + "+(g.errorPath)+" , schemaPath: "+(g.util.toQuotedString(n))+" , params: { comparison: "+(f)+", limit: "+(u)+", exclusive: "+(y)+" } ";if(g.opts.messages!==false){v+=" , message: 'should be "+(t)+" ";if(c){v+="' + "+(u)}else{v+=""+(w)+"'"}}if(g.opts.verbose){v+=" , schema:  ";if(c){v+="validate.schema"+(e)}else{v+=""+(w)}v+="         , parentSchema: validate.schema"+(g.schemaPath)+" , data: "+(d)+" "}v+=" } "}else{v+=" {} "}var a=v;v=s.pop();if(!g.compositeRule&&j){if(g.async){v+=" throw new ValidationError(["+(a)+"]); "}else{v+=" validate.errors = ["+(a)+"]; return false; "}}else{v+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}v+=" } ";if(j){v+=" else { "}return v};