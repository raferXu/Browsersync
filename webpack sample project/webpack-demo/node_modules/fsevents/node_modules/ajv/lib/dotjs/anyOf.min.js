"use strict";module.exports=function generate_anyOf(i,l){var r=" ";var v=i.level;var j=i.dataLevel;var s=i.schema[l];var g=i.schemaPath+i.util.getProperty(l);var m=i.errSchemaPath+"/"+l;var k=!i.opts.allErrors;var d="data"+(j||"");var f="valid"+v;var p="errs__"+v;var e=i.util.copy(i);var c="";e.level++;var u="valid"+e.level;var t=s.every(function(w){return i.util.schemaHasRules(w,i.RULES.all)});if(t){var b=e.baseId;r+=" var "+(p)+" = errors; var "+(f)+" = false;  ";var o=i.compositeRule;i.compositeRule=e.compositeRule=true;var h=s;if(h){var n,a=-1,q=h.length-1;while(a<q){n=h[a+=1];e.schema=n;e.schemaPath=g+"["+a+"]";e.errSchemaPath=m+"/"+a;r+="  "+(i.validate(e))+" ";e.baseId=b;r+=" "+(f)+" = "+(f)+" || "+(u)+"; if (!"+(f)+") { ";c+="}"}}i.compositeRule=e.compositeRule=o;r+=" "+(c)+" if (!"+(f)+") {  var err =   ";if(i.createErrors!==false){r+=" { keyword: '"+("anyOf")+"' , dataPath: (dataPath || '') + "+(i.errorPath)+" , schemaPath: "+(i.util.toQuotedString(m))+" , params: {} ";if(i.opts.messages!==false){r+=" , message: 'should match some schema in anyOf' "}if(i.opts.verbose){r+=" , schema: validate.schema"+(g)+" , parentSchema: validate.schema"+(i.schemaPath)+" , data: "+(d)+" "}r+=" } "}else{r+=" {} "}r+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = "+(p)+"; if (vErrors !== null) { if ("+(p)+") vErrors.length = "+(p)+"; else vErrors = null; } ";if(i.opts.allErrors){r+=" } "}r=i.util.cleanUpCode(r)}else{if(k){r+=" if (true) { "}}return r};