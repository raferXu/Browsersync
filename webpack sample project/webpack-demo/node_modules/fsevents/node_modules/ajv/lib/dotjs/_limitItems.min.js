"use strict";module.exports=function generate__limitItems(l,c){var k=" ";var j=l.level;var o=l.dataLevel;var p=l.schema[c];var e=l.schemaPath+l.util.getProperty(c);var d=l.errSchemaPath+"/"+c;var f=!l.opts.allErrors;var b;var h="data"+(o||"");var m=l.opts.v5&&p&&p.$data,n;if(m){k+=" var schema"+(j)+" = "+(l.util.getData(p.$data,o,l.dataPathArr))+"; ";n="schema"+j}else{n=p}var i=c=="maxItems"?">":"<";k+="if ( ";if(m){k+=" ("+(n)+" !== undefined && typeof "+(n)+" != 'number') || "}k+=" "+(h)+".length "+(i)+" "+(n)+") { ";var b=c;var a=a||[];a.push(k);k="";if(l.createErrors!==false){k+=" { keyword: '"+(b||"_limitItems")+"' , dataPath: (dataPath || '') + "+(l.errorPath)+" , schemaPath: "+(l.util.toQuotedString(d))+" , params: { limit: "+(n)+" } ";if(l.opts.messages!==false){k+=" , message: 'should NOT have ";if(c=="maxItems"){k+="more"}else{k+="less"}k+=" than ";if(m){k+="' + "+(n)+" + '"}else{k+=""+(p)}k+=" items' "}if(l.opts.verbose){k+=" , schema:  ";if(m){k+="validate.schema"+(e)}else{k+=""+(p)}k+="         , parentSchema: validate.schema"+(l.schemaPath)+" , data: "+(h)+" "}k+=" } "}else{k+=" {} "}var g=k;k=a.pop();if(!l.compositeRule&&f){if(l.async){k+=" throw new ValidationError(["+(g)+"]); "}else{k+=" validate.errors = ["+(g)+"]; return false; "}}else{k+=" var err = "+(g)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}k+="} ";if(f){k+=" else { "}return k};