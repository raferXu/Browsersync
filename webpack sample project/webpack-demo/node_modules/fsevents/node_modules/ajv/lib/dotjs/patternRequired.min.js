"use strict";module.exports=function generate_patternRequired(g,l){var p=" ";var t=g.level;var h=g.dataLevel;var q=g.schema[l];var e=g.schemaPath+g.util.getProperty(l);var m=g.errSchemaPath+"/"+l;var j=!g.opts.allErrors;var c="data"+(h||"");var d="valid"+t;var i="key"+t,s="patternMatched"+t,b="",a=g.opts.ownProperties;p+="var "+(d)+" = true;";var f=q;if(f){var k,n=-1,o=f.length-1;while(n<o){k=f[n+=1];p+=" var "+(s)+" = false; for (var "+(i)+" in "+(c)+") {  ";if(a){p+=" if (!Object.prototype.hasOwnProperty.call("+(c)+", "+(i)+")) continue; "}p+=" "+(s)+" = "+(g.usePattern(k))+".test("+(i)+"); if ("+(s)+") break; } ";var r=g.util.escapeQuotes(k);p+=" if (!"+(s)+") { "+(d)+" = false;  var err =   ";if(g.createErrors!==false){p+=" { keyword: '"+("patternRequired")+"' , dataPath: (dataPath || '') + "+(g.errorPath)+" , schemaPath: "+(g.util.toQuotedString(m))+" , params: { missingPattern: '"+(r)+"' } ";if(g.opts.messages!==false){p+=" , message: 'should have property matching pattern \\'"+(r)+"\\'' "}if(g.opts.verbose){p+=" , schema: validate.schema"+(e)+" , parentSchema: validate.schema"+(g.schemaPath)+" , data: "+(c)+" "}p+=" } "}else{p+=" {} "}p+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ";if(j){b+="}";p+=" else { "}}}p+=""+(b);return p};