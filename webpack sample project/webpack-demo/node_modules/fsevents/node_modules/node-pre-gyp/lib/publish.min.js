"use strict";module.exports=exports=publish;exports.usage="Publishes pre-built binary (requires aws-sdk)";var fs=require("fs");var path=require("path");var log=require("npmlog");var versioning=require("./util/versioning.js");var s3_setup=require("./util/s3_setup.js");var existsAsync=fs.exists||path.exists;var url=require("url");var config=require("rc")("node_pre_gyp",{acl:"public-read"});function publish(c,a,g){var f=require("aws-sdk");var d=JSON.parse(fs.readFileSync("./package.json"));var e=versioning.evaluate(d,c.opts);var b=e.staged_tarball;existsAsync(b,function(l){if(!l){return g(new Error("Cannot publish because "+b+" missing: run `node-pre-gyp package` first"))}log.info("publish","Detecting s3 credentials");s3_setup.detect(e.hosted_path,config);var k=url.resolve(config.prefix,e.package_name);log.info("publish","Authenticating with s3");f.config.update(config);var h=new f.S3();var i={Bucket:config.bucket,Key:k};var j="https://"+i.Bucket+".s3.amazonaws.com/"+i.Key;log.info("publish","Checking for existing binary at "+j);h.headObject(i,function(n,o){if(o){log.info("publish",JSON.stringify(o))}if(n&&n.code=="NotFound"){log.info("publish","Preparing to put object");var m=new f.S3();var p={ACL:config.acl,Body:fs.createReadStream(b),Bucket:config.bucket,Key:k};log.info("publish","Putting object");try{m.putObject(p,function(q,r){log.info("publish","returned from putting object");if(q){log.info("publish",'s3 putObject error: "'+q+'"');return g(q)}if(r){log.info("publish",'s3 putObject response: "'+JSON.stringify(r)+'"')}log.info("publish","successfully put object");console.log("["+d.name+"] published to "+j);return g()})}catch(n){log.info("publish",'s3 putObject error: "'+n+'"');return g(n)}}else{if(n){log.info("publish",'s3 headObject error: "'+n+'"');return g(n)}else{log.error("publish","Cannot publish over existing version");log.error("publish","Update the 'version' field in package.json and try again");log.error("publish","If the previous version was published in error see:");log.error("publish","\t node-pre-gyp unpublish");return g(new Error("Failed publishing to "+j))}}})})};