"use strict";module.exports=exports=testbinary;exports.usage="Tests that the binary.node can be required";var fs=require("fs");var path=require("path");var log=require("npmlog");var cp=require("child_process");var versioning=require("./util/versioning.js");var path=require("path");function testbinary(d,e,i){var g=[];var l={};var m=process.execPath;var j=JSON.parse(fs.readFileSync("./package.json"));var a=versioning.evaluate(j,d.opts);if(a.runtime&&a.runtime!=="node-webkit"&&a.runtime!=="node"){return i()}var f=(a.runtime&&a.runtime==="node-webkit");var h=a.module.replace(/\\/g,"/");if((process.arch!=a.target_arch)||(process.platform!=a.target_platform)){var c="skipping validation since host platform/arch (";c+=process.platform+"/"+process.arch+")";c+=" does not match target (";c+=a.target_platform+"/"+a.target_arch+")";log.info("validate",c);return i()}if(f){l.timeout=5000;if(process.platform==="darwin"){m="node-webkit"}else{if(process.platform==="win32"){m="nw.exe"}else{m="nw"}}var k=path.resolve(h);var b=path.join(__dirname,"util","nw-pre-gyp");g.push(b);g.push(k);log.info("validate","Running test command: '"+m+" "+g.join(" ")+"'");cp.execFile(m,g,l,function(p,n,o){if(p){if(p.killed===true&&p.signal&&p.signal.indexOf("SIG")>-1){return i()}var q=o.toString();log.info("stderr",q);if(/^\s*Xlib:\s*extension\s*"RANDR"\s*missing\s*on\s*display\s*":\d+\.\d+"\.\s*$/.test(q)){log.info("RANDR","stderr contains only RANDR error, ignored");return i()}return i(p)}return i()});return}g.push("--eval");g.push("require('"+h.replace(/'/g,"'")+"')");log.info("validate","Running test command: '"+m+" "+g.join(" ")+"'");cp.execFile(m,g,l,function(p,n,o){if(p){return i(p,{stdout:n,stderr:o})}return i()})};