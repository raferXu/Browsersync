/*!
 * @description Recursive object extending
 * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>
 * @license MIT
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2015 Viacheslav Lotsmanov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
;"use strict";function isSpecificValue(a){return(a instanceof Buffer||a instanceof Date||a instanceof RegExp)?true:false}function cloneSpecificValue(b){if(b instanceof Buffer){var a=new Buffer(b.length);b.copy(a);return a}else{if(b instanceof Date){return new Date(b.getTime())}else{if(b instanceof RegExp){return new RegExp(b)}else{throw new Error("Unexpected situation")}}}}function deepCloneArray(a){var b=[];a.forEach(function(d,c){if(typeof d==="object"&&d!==null){if(Array.isArray(d)){b[c]=deepCloneArray(d)}else{if(isSpecificValue(d)){b[c]=cloneSpecificValue(d)}else{b[c]=deepExtend({},d)}}}else{b[c]=d}});return b}var deepExtend=module.exports=function(){if(arguments.length<1||typeof arguments[0]!=="object"){return false}if(arguments.length<2){return arguments[0]}var b=arguments[0];var a=Array.prototype.slice.call(arguments,1);var d,c,e;a.forEach(function(f){if(typeof f!=="object"||f===null||Array.isArray(f)){return}Object.keys(f).forEach(function(g){c=b[g];d=f[g];if(d===b){return}else{if(typeof d!=="object"||d===null){b[g]=d;return}else{if(Array.isArray(d)){b[g]=deepCloneArray(d);return}else{if(isSpecificValue(d)){b[g]=cloneSpecificValue(d);return}else{if(typeof c!=="object"||c===null||Array.isArray(c)){b[g]=deepExtend({},d);return}else{b[g]=deepExtend(c,d);return}}}}}})});return b};