var test=require("tap").test;var BerReader;test("load library",function(a){BerReader=require("../../lib/index").BerReader;a.ok(BerReader);try{new BerReader();a.fail("Should have thrown")}catch(b){a.ok(b instanceof TypeError,"Should have been a type error")}a.end()});test("read byte",function(b){var a=new BerReader(new Buffer([222]));b.ok(a);b.equal(a.readByte(),222,"wrong value");b.end()});test("read 1 byte int",function(b){var a=new BerReader(new Buffer([2,1,3]));b.ok(a);b.equal(a.readInt(),3,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("read 2 byte int",function(b){var a=new BerReader(new Buffer([2,2,126,222]));b.ok(a);b.equal(a.readInt(),32478,"wrong value");b.equal(a.length,2,"wrong length");b.end()});test("read 3 byte int",function(b){var a=new BerReader(new Buffer([2,3,126,222,3]));b.ok(a);b.equal(a.readInt(),8314371,"wrong value");b.equal(a.length,3,"wrong length");b.end()});test("read 4 byte int",function(b){var a=new BerReader(new Buffer([2,4,126,222,3,1]));b.ok(a);b.equal(a.readInt(),2128478977,"wrong value");b.equal(a.length,4,"wrong length");b.end()});test("read 1 byte negative int",function(b){var a=new BerReader(new Buffer([2,1,220]));b.ok(a);b.equal(a.readInt(),-36,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("read 2 byte negative int",function(b){var a=new BerReader(new Buffer([2,2,192,78]));b.ok(a);b.equal(a.readInt(),-16306,"wrong value");b.equal(a.length,2,"wrong length");b.end()});test("read 3 byte negative int",function(b){var a=new BerReader(new Buffer([2,3,255,0,25]));b.ok(a);b.equal(a.readInt(),-65511,"wrong value");b.equal(a.length,3,"wrong length");b.end()});test("read 4 byte negative int",function(b){var a=new BerReader(new Buffer([2,4,145,124,34,31]));b.ok(a);b.equal(a.readInt(),-1854135777,"wrong value");b.equal(a.length,4,"wrong length");b.end()});test("read boolean true",function(b){var a=new BerReader(new Buffer([1,1,255]));b.ok(a);b.equal(a.readBoolean(),true,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("read boolean false",function(b){var a=new BerReader(new Buffer([1,1,0]));b.ok(a);b.equal(a.readBoolean(),false,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("read enumeration",function(b){var a=new BerReader(new Buffer([10,1,32]));b.ok(a);b.equal(a.readEnumeration(),32,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("read string",function(d){var b="cn=foo,ou=unit,o=test";var c=new Buffer(b.length+2);c[0]=4;c[1]=Buffer.byteLength(b);c.write(b,2);var a=new BerReader(c);d.ok(a);d.equal(a.readString(),b,"wrong value");d.equal(a.length,b.length,"wrong length");d.end()});test("read sequence",function(b){var a=new BerReader(new Buffer([48,3,1,1,255]));b.ok(a);b.equal(a.readSequence(),48,"wrong value");b.equal(a.length,3,"wrong length");b.equal(a.readBoolean(),true,"wrong value");b.equal(a.length,1,"wrong length");b.end()});test("anonymous LDAPv3 bind",function(c){var b=new Buffer(14);b[0]=48;b[1]=12;b[2]=2;b[3]=1;b[4]=4;b[5]=96;b[6]=7;b[7]=2;b[8]=1;b[9]=3;b[10]=4;b[11]=0;b[12]=128;b[13]=0;var a=new BerReader(b);c.equal(a.readSequence(),48,"Not an ASN.1 Sequence");c.equal(a.length,12,"Message length should be 12");c.equal(a.readInt(),4,"Message id should have been 4");c.equal(a.readSequence(),96,"Bind Request should have been 96");c.equal(a.length,7,"Bind length should have been 7");c.equal(a.readInt(),3,"LDAP version should have been 3");c.equal(a.readString(),"","Bind DN should have been empty");c.equal(a.length,0,"string length should have been 0");c.equal(a.readByte(),128,"Should have been ContextSpecific (choice)");c.equal(a.readByte(),0,"Should have been simple bind");c.equal(null,a.readByte(),"Should be out of data");c.end()});test("long string",function(c){var b=new Buffer(256);var e;var d="2;649;CN=Red Hat CS 71GA Demo,O=Red Hat CS 71GA Demo,C=US;CN=RHCS Agent - admin01,UID=admin01,O=redhat,C=US [1] This is Teena Vradmin's description.";b[0]=4;b[1]=129;b[2]=148;b.write(d,3);var a=new BerReader(b.slice(0,3+d.length));c.equal(a.readString(),d);c.end()});