"use strict";function isArguments(a){return a!=null&&typeof a==="object"&&a.hasOwnProperty("callee")}var types={"*":{label:"any",check:function(){return true}},A:{label:"array",check:function(a){return Array.isArray(a)||isArguments(a)}},S:{label:"string",check:function(a){return typeof a==="string"}},N:{label:"number",check:function(a){return typeof a==="number"}},F:{label:"function",check:function(a){return typeof a==="function"}},O:{label:"object",check:function(a){return typeof a==="object"&&a!=null&&!types.A.check(a)&&!types.E.check(a)}},B:{label:"boolean",check:function(a){return typeof a==="boolean"}},E:{label:"error",check:function(a){return a instanceof Error}},Z:{label:"null",check:function(a){return a==null}}};var validate=module.exports=function(d,g){if(arguments.length!==2){throw wrongNumberOfArgs(["SA"],arguments.length)}if(!d){throw missingRequiredArg(0,"rawSchemas")}if(!g){throw missingRequiredArg(1,"args")}if(!types.S.check(d)){throw invalidType(0,["string"],d)}if(!types.A.check(g)){throw invalidType(1,["array"],g)}var c=d.split("|");var a={};function f(j){var k=a[j.length]=a[j.length]||[];if(k.indexOf(j)===-1){k.push(j)}}c.forEach(function(l){for(var k=0;k<l.length;++k){var j=l[k];if(!types[j]){throw unknownType(k,j)}}if(/E.*E/.test(l)){throw moreThanOneError(l)}f(l);if(/E/.test(l)){f(l.replace(/E.*$/,"E"));f(l.replace(/E/,"Z"));if(l.length===1){f("")}}});var b=a[g.length];if(!b){throw wrongNumberOfArgs(Object.keys(a),g.length)}for(var i=0;i<g.length;++i){var h=b.filter(function(l){var k=l[i];var j=types[k].check;return j(g[i])});if(!h.length){var e=b.map(function(j){return types[j[i]].label}).filter(function(j){return j!=null});throw invalidType(i,e,g[i])}b=h}};function missingRequiredArg(a){return newException("EMISSINGARG","Missing required argument #"+(a+1))}function unknownType(a,b){return newException("EUNKNOWNTYPE","Unknown type "+b+" in argument #"+(a+1))}function invalidType(a,d,b){var c;Object.keys(types).forEach(function(e){if(types[e].check(b)){c=types[e].label}});return newException("EINVALIDTYPE","Argument #"+(a+1)+": Expected "+englishList(d)+" but got "+c)}function englishList(a){return a.join(", ").replace(/, ([^,]+)$/," or $1")}function wrongNumberOfArgs(d,b){var a=englishList(d);var c=d.every(function(e){return e.length===1})?"argument":"arguments";return newException("EWRONGARGCOUNT","Expected "+a+" "+c+" but got "+b)}function moreThanOneError(a){return newException("ETOOMANYERRORTYPES",'Only one error type per argument signature is allowed, more than one found in "'+a+'"')}function newException(a,c){var b=new Error(c);b.code=a;Error.captureStackTrace(b,validate);return b};