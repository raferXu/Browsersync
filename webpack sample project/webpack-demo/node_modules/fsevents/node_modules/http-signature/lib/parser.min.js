var assert=require("assert-plus");var util=require("util");var utils=require("./utils");var HASH_ALGOS=utils.HASH_ALGOS;var PK_ALGOS=utils.PK_ALGOS;var HttpSignatureError=utils.HttpSignatureError;var InvalidAlgorithmError=utils.InvalidAlgorithmError;var validateAlgorithm=utils.validateAlgorithm;var State={New:0,Params:1};var ParamsState={Name:0,Quote:1,Value:2,Comma:3};function ExpiredRequestError(a){HttpSignatureError.call(this,a,ExpiredRequestError)}util.inherits(ExpiredRequestError,HttpSignatureError);function InvalidHeaderError(a){HttpSignatureError.call(this,a,InvalidHeaderError)}util.inherits(InvalidHeaderError,HttpSignatureError);function InvalidParamsError(a){HttpSignatureError.call(this,a,InvalidParamsError)}util.inherits(InvalidParamsError,HttpSignatureError);function MissingHeaderError(a){HttpSignatureError.call(this,a,MissingHeaderError)}util.inherits(MissingHeaderError,HttpSignatureError);function StrictParsingError(a){HttpSignatureError.call(this,a,StrictParsingError)}util.inherits(StrictParsingError,HttpSignatureError);module.exports={parseRequest:function parseRequest(l,u){assert.object(l,"request");assert.object(l.headers,"request.headers");if(u===undefined){u={}}if(u.headers===undefined){u.headers=[l.headers["x-date"]?"x-date":"date"]}assert.object(u,"options");assert.arrayOfString(u.headers,"options.headers");assert.optionalNumber(u.clockSkew,"options.clockSkew");if(!l.headers.authorization){throw new MissingHeaderError("no authorization header present in the request")}u.clockSkew=u.clockSkew||300;var m=0;var a=State.New;var d=ParamsState.Name;var b="";var j="";var q={scheme:"",params:{},signingString:"",get algorithm(){return this.params.algorithm.toUpperCase()},get keyId(){return this.params.keyId}};var r=l.headers.authorization;for(m=0;m<r.length;m++){var p=r.charAt(m);switch(Number(a)){case State.New:if(p!==" "){q.scheme+=p}else{a=State.Params}break;case State.Params:switch(Number(d)){case ParamsState.Name:var g=p.charCodeAt(0);if((g>=65&&g<=90)||(g>=97&&g<=122)){b+=p}else{if(p==="="){if(b.length===0){throw new InvalidHeaderError("bad param format")}d=ParamsState.Quote}else{throw new InvalidHeaderError("bad param format")}}break;case ParamsState.Quote:if(p==='"'){j="";d=ParamsState.Value}else{throw new InvalidHeaderError("bad param format")}break;case ParamsState.Value:if(p==='"'){q.params[b]=j;d=ParamsState.Comma}else{j+=p}break;case ParamsState.Comma:if(p===","){b="";d=ParamsState.Name}else{throw new InvalidHeaderError("bad param format")}break;default:throw new Error("Invalid substate")}break;default:throw new Error("Invalid substate")}}if(!q.params.headers||q.params.headers===""){if(l.headers["x-date"]){q.params.headers=["x-date"]}else{q.params.headers=["date"]}}else{q.params.headers=q.params.headers.split(" ")}if(!q.scheme||q.scheme!=="Signature"){throw new InvalidHeaderError('scheme was not "Signature"')}if(!q.params.keyId){throw new InvalidHeaderError("keyId was not specified")}if(!q.params.algorithm){throw new InvalidHeaderError("algorithm was not specified")}if(!q.params.signature){throw new InvalidHeaderError("signature was not specified")}q.params.algorithm=q.params.algorithm.toLowerCase();try{validateAlgorithm(q.params.algorithm)}catch(o){if(o instanceof InvalidAlgorithmError){throw (new InvalidParamsError(q.params.algorithm+" is not supported"))}else{throw (o)}}for(m=0;m<q.params.headers.length;m++){var n=q.params.headers[m].toLowerCase();q.params.headers[m]=n;if(n==="request-line"){if(!u.strict){q.signingString+=l.method+" "+l.url+" HTTP/"+l.httpVersion}else{throw (new StrictParsingError("request-line is not a valid header with strict parsing enabled."))}}else{if(n==="(request-target)"){q.signingString+="(request-target): "+l.method.toLowerCase()+" "+l.url}else{var s=l.headers[n];if(s===undefined){throw new MissingHeaderError(n+" was not in the request")}q.signingString+=n+": "+s}}if((m+1)<q.params.headers.length){q.signingString+="\n"}}var k;if(l.headers.date||l.headers["x-date"]){if(l.headers["x-date"]){k=new Date(l.headers["x-date"])}else{k=new Date(l.headers.date)}var f=new Date();var t=Math.abs(f.getTime()-k.getTime());if(t>u.clockSkew*1000){throw new ExpiredRequestError("clock skew of "+(t/1000)+"s was greater than "+u.clockSkew+"s")}}u.headers.forEach(function(c){if(q.params.headers.indexOf(c)<0){throw new MissingHeaderError(c+" was not a signed header")}});if(u.algorithms){if(u.algorithms.indexOf(q.params.algorithm)===-1){throw new InvalidParamsError(q.params.algorithm+" is not a supported algorithm")}}return q}};