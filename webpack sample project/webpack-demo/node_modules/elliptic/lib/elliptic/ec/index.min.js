"use strict";var BN=require("bn.js");var HmacDRBG=require("hmac-drbg");var elliptic=require("../../elliptic");var utils=elliptic.utils;var assert=utils.assert;var KeyPair=require("./key");var Signature=require("./signature");function EC(a){if(!(this instanceof EC)){return new EC(a)}if(typeof a==="string"){assert(elliptic.curves.hasOwnProperty(a),"Unknown curve "+a);a=elliptic.curves[a]}if(a instanceof elliptic.curves.PresetCurve){a={curve:a}}this.curve=a.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=a.curve.g;this.g.precompute(a.curve.n.bitLength()+1);this.hash=a.hash||a.curve.hash}module.exports=EC;EC.prototype.keyPair=function keyPair(a){return new KeyPair(this,a)};EC.prototype.keyFromPrivate=function keyFromPrivate(b,a){return KeyPair.fromPrivate(this,b,a)};EC.prototype.keyFromPublic=function keyFromPublic(b,a){return KeyPair.fromPublic(this,b,a)};EC.prototype.genKeyPair=function genKeyPair(d){if(!d){d={}}var e=new HmacDRBG({hash:this.hash,pers:d.pers,persEnc:d.persEnc||"utf8",entropy:d.entropy||elliptic.rand(this.hash.hmacStrength),entropyEnc:d.entropy&&d.entropyEnc||"utf8",nonce:this.n.toArray()});var a=this.n.byteLength();var c=this.n.sub(new BN(2));do{var b=new BN(e.generate(a));if(b.cmp(c)>0){continue}b.iaddn(1);return this.keyFromPrivate(b)}while(true)};EC.prototype._truncateToN=function truncateToN(b,a){var c=b.byteLength()*8-this.n.bitLength();if(c>0){b=b.ushrn(c)}if(!a&&b.cmp(this.n)>=0){return b.sub(this.n)}else{return b}};EC.prototype.sign=function sign(c,m,g,p){if(typeof g==="object"){p=g;g=null}if(!p){p={}}m=this.keyFromPrivate(m,g);c=this._truncateToN(new BN(c,16));var q=this.n.byteLength();var d=m.getPrivate().toArray("be",q);var i=c.toArray("be",q);var b=new HmacDRBG({hash:this.hash,entropy:d,nonce:i,pers:p.pers,persEnc:p.persEnc||"utf8"});var l=this.n.sub(new BN(1));for(var j=0;true;j++){var e=p.k?p.k(j):new BN(b.generate(this.n.byteLength()));e=this._truncateToN(e,true);if(e.cmpn(1)<=0||e.cmp(l)>=0){continue}var n=this.g.mul(e);if(n.isInfinity()){continue}var h=n.getX();var a=h.umod(this.n);if(a.cmpn(0)===0){continue}var o=e.invm(this.n).mul(a.mul(m.getPrivate()).iadd(c));o=o.umod(this.n);if(o.cmpn(0)===0){continue}var f=(n.getY().isOdd()?1:0)|(h.cmp(a)!==0?2:0);if(p.canonical&&o.cmp(this.nh)>0){o=this.n.sub(o);f^=1}return new Signature({r:a,s:o,recoveryParam:f})}};EC.prototype.verify=function verify(e,f,i,g){e=this._truncateToN(new BN(e,16));i=this.keyFromPublic(i,g);f=new Signature(f,"hex");var a=f.r;var j=f.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0){return false}if(j.cmpn(1)<0||j.cmp(this.n)>=0){return false}var h=j.invm(this.n);var d=h.mul(e).umod(this.n);var c=h.mul(a).umod(this.n);if(!this.curve._maxwellTrick){var b=this.g.mulAdd(d,i.getPublic(),c);if(b.isInfinity()){return false}return b.getX().umod(this.n).cmp(a)===0}var b=this.g.jmulAdd(d,i.getPublic(),c);if(b.isInfinity()){return false}return b.eqXToP(a)};EC.prototype.recoverPubKey=function(d,f,g,h){assert((3&g)===g,"The recovery param is more than two bits");f=new Signature(f,h);var c=this.n;var i=new BN(d);var b=f.r;var p=f.s;var a=g&1;var k=g>>1;if(b.cmp(this.curve.p.umod(this.curve.n))>=0&&k){throw new Error("Unable to find sencond key candinate")}if(k){b=this.curve.pointFromX(b.add(this.curve.n),a)}else{b=this.curve.pointFromX(b,a)}var l=f.r.invm(c);var o=c.sub(i).mul(l).umod(c);var m=p.mul(l).umod(c);return this.g.mulAdd(o,b,m)};EC.prototype.getKeyRecoveryParam=function(g,a,f,c){a=new Signature(a,c);if(a.recoveryParam!==null){return a.recoveryParam}for(var d=0;d<4;d++){var b;try{b=this.recoverPubKey(g,a,d)}catch(g){continue}if(b.eq(f)){return d}}throw new Error("Unable to find valid recovery factor")};