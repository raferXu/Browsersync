"use strict";var curve=require("../curve");var elliptic=require("../../elliptic");var BN=require("bn.js");var inherits=require("inherits");var Base=curve.base;var assert=elliptic.utils.assert;function EdwardsCurve(a){this.twisted=(a.a|0)!==1;this.mOneA=this.twisted&&(a.a|0)===-1;this.extended=this.mOneA;Base.call(this,"edwards",a);this.a=new BN(a.a,16).umod(this.red.m);this.a=this.a.toRed(this.red);this.c=new BN(a.c,16).toRed(this.red);this.c2=this.c.redSqr();this.d=new BN(a.d,16).toRed(this.red);this.dd=this.d.redAdd(this.d);assert(!this.twisted||this.c.fromRed().cmpn(1)===0);this.oneC=(a.c|0)===1}inherits(EdwardsCurve,Base);module.exports=EdwardsCurve;EdwardsCurve.prototype._mulA=function _mulA(a){if(this.mOneA){return a.redNeg()}else{return this.a.redMul(a)}};EdwardsCurve.prototype._mulC=function _mulC(a){if(this.oneC){return a}else{return this.c.redMul(a)}};EdwardsCurve.prototype.jpoint=function jpoint(a,d,c,b){return this.point(a,d,c,b)};EdwardsCurve.prototype.pointFromX=function pointFromX(a,f){a=new BN(a,16);if(!a.red){a=a.toRed(this.red)}var d=a.redSqr();var h=this.c2.redSub(this.a.redMul(d));var b=this.one.redSub(this.c2.redMul(this.d).redMul(d));var e=h.redMul(b.redInvm());var g=e.redSqrt();if(g.redSqr().redSub(e).cmp(this.zero)!==0){throw new Error("invalid point")}var c=g.fromRed().isOdd();if(f&&!c||!f&&c){g=g.redNeg()}return this.point(a,g)};EdwardsCurve.prototype.pointFromY=function pointFromY(g,e){g=new BN(g,16);if(!g.red){g=g.toRed(this.red)}var d=g.redSqr();var b=d.redSub(this.one);var f=d.redMul(this.d).redAdd(this.one);var c=b.redMul(f.redInvm());if(c.cmp(this.zero)===0){if(e){throw new Error("invalid point")}else{return this.point(this.zero,g)}}var a=c.redSqrt();if(a.redSqr().redSub(c).cmp(this.zero)!==0){throw new Error("invalid point")}if(a.isOdd()!==e){a=a.redNeg()}return this.point(a,g)};EdwardsCurve.prototype.validate=function validate(a){if(a.isInfinity()){return true}a.normalize();var c=a.x.redSqr();var d=a.y.redSqr();var b=c.redMul(this.a).redAdd(d);var e=this.c2.redMul(this.one.redAdd(this.d.redMul(c).redMul(d)));return b.cmp(e)===0};function Point(d,a,e,c,b){Base.BasePoint.call(this,d,"projective");if(a===null&&e===null&&c===null){this.x=this.curve.zero;this.y=this.curve.one;this.z=this.curve.one;this.t=this.curve.zero;this.zOne=true}else{this.x=new BN(a,16);this.y=new BN(e,16);this.z=c?new BN(c,16):this.curve.one;this.t=b&&new BN(b,16);if(!this.x.red){this.x=this.x.toRed(this.curve.red)}if(!this.y.red){this.y=this.y.toRed(this.curve.red)}if(!this.z.red){this.z=this.z.toRed(this.curve.red)}if(this.t&&!this.t.red){this.t=this.t.toRed(this.curve.red)}this.zOne=this.z===this.curve.one;if(this.curve.extended&&!this.t){this.t=this.x.redMul(this.y);if(!this.zOne){this.t=this.t.redMul(this.z.redInvm())}}}}inherits(Point,Base.BasePoint);EdwardsCurve.prototype.pointFromJSON=function pointFromJSON(a){return Point.fromJSON(this,a)};EdwardsCurve.prototype.point=function point(a,d,c,b){return new Point(this,a,d,c,b)};Point.fromJSON=function fromJSON(b,a){return new Point(b,a[0],a[1],a[2])};Point.prototype.inspect=function inspect(){if(this.isInfinity()){return"<EC Point Infinity>"}return"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"};Point.prototype.isInfinity=function isInfinity(){return this.x.cmpn(0)===0&&this.y.cmp(this.z)===0};Point.prototype._extDbl=function _extDbl(){var t=this.x.redSqr();var s=this.y.redSqr();var r=this.z.redSqr();r=r.redIAdd(r);var p=this.curve._mulA(t);var o=this.x.redAdd(this.y).redSqr().redISub(t).redISub(s);var m=p.redAdd(s);var n=m.redSub(r);var k=p.redSub(s);var l=o.redMul(n);var j=m.redMul(k);var q=o.redMul(k);var i=n.redMul(m);return this.curve.point(l,j,i,q)};Point.prototype._projDbl=function _projDbl(){var q=this.x.redAdd(this.y).redSqr();var p=this.x.redSqr();var o=this.y.redSqr();var l;var k;var g;if(this.curve.twisted){var n=this.curve._mulA(p);var m=n.redAdd(o);if(this.zOne){l=q.redSub(p).redSub(o).redMul(m.redSub(this.curve.two));k=m.redMul(n.redSub(o));g=m.redSqr().redSub(m).redSub(m)}else{var i=this.z.redSqr();var a=m.redSub(i).redISub(i);l=q.redSub(p).redISub(o).redMul(a);k=m.redMul(n.redSub(o));g=m.redMul(a)}}else{var n=p.redAdd(o);var i=this.curve._mulC(this.c.redMul(this.z)).redSqr();var a=n.redSub(i).redSub(i);l=this.curve._mulC(q.redISub(n)).redMul(a);k=this.curve._mulC(n).redMul(p.redISub(o));g=n.redMul(a)}return this.curve.point(l,k,g)};Point.prototype.dbl=function dbl(){if(this.isInfinity()){return this}if(this.curve.extended){return this._extDbl()}else{return this._projDbl()}};Point.prototype._extAdd=function _extAdd(i){var v=this.y.redSub(this.x).redMul(i.y.redSub(i.x));var u=this.y.redAdd(this.x).redMul(i.y.redAdd(i.x));var t=this.t.redMul(this.curve.dd).redMul(i.t);var r=this.z.redMul(i.z.redAdd(i.z));var q=u.redSub(v);var o=r.redSub(t);var n=r.redAdd(t);var l=u.redAdd(v);var m=q.redMul(o);var k=n.redMul(l);var s=q.redMul(l);var j=o.redMul(n);return this.curve.point(m,k,j,s)};Point.prototype._projAdd=function _projAdd(h){var t=this.z.redMul(h.z);var s=t.redSqr();var r=this.x.redMul(h.x);var q=this.y.redMul(h.y);var o=this.curve.d.redMul(r).redMul(q);var n=s.redSub(o);var m=s.redAdd(o);var j=this.x.redAdd(this.y).redMul(h.x.redAdd(h.y)).redISub(r).redISub(q);var l=t.redMul(n).redMul(j);var k;var i;if(this.curve.twisted){k=t.redMul(m).redMul(q.redSub(this.curve._mulA(r)));i=n.redMul(m)}else{k=t.redMul(m).redMul(q.redSub(r));i=this.curve._mulC(n).redMul(m)}return this.curve.point(l,k,i)};Point.prototype.add=function add(a){if(this.isInfinity()){return a}if(a.isInfinity()){return this}if(this.curve.extended){return this._extAdd(a)}else{return this._projAdd(a)}};Point.prototype.mul=function mul(a){if(this._hasDoubles(a)){return this.curve._fixedNafMul(this,a)}else{return this.curve._wnafMul(this,a)}};Point.prototype.mulAdd=function mulAdd(c,a,b){return this.curve._wnafMulAdd(1,[this,a],[c,b],2,false)};Point.prototype.jmulAdd=function jmulAdd(c,a,b){return this.curve._wnafMulAdd(1,[this,a],[c,b],2,true)};Point.prototype.normalize=function normalize(){if(this.zOne){return this}var a=this.z.redInvm();this.x=this.x.redMul(a);this.y=this.y.redMul(a);if(this.t){this.t=this.t.redMul(a)}this.z=this.curve.one;this.zOne=true;return this};Point.prototype.neg=function neg(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()};Point.prototype.getY=function getY(){this.normalize();return this.y.fromRed()};Point.prototype.eq=function eq(a){return this===a||this.getX().cmp(a.getX())===0&&this.getY().cmp(a.getY())===0};Point.prototype.eqXToP=function eqXToP(a){var d=a.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(d)===0){return true}var c=a.clone();var b=this.curve.redN.redMul(this.z);for(;;){c.iadd(this.curve.n);if(c.cmp(this.curve.p)>=0){return false}d.redIAdd(b);if(this.x.cmp(d)===0){return true}}return false};Point.prototype.toP=Point.prototype.normalize;Point.prototype.mixedAdd=Point.prototype.add;