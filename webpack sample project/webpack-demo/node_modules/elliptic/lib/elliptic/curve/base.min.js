"use strict";var BN=require("bn.js");var elliptic=require("../../elliptic");var utils=elliptic.utils;var getNAF=utils.getNAF;var getJSF=utils.getJSF;var assert=utils.assert;function BaseCurve(c,a){this.type=c;this.p=new BN(a.p,16);this.red=a.prime?BN.red(a.prime):BN.mont(this.p);this.zero=new BN(0).toRed(this.red);this.one=new BN(1).toRed(this.red);this.two=new BN(2).toRed(this.red);this.n=a.n&&new BN(a.n,16);this.g=a.g&&this.pointFromJSON(a.g,a.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);var b=this.n&&this.p.div(this.n);if(!b||b.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}module.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error("Not implemented")};BaseCurve.prototype.validate=function validate(){throw new Error("Not implemented")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(c,f){assert(c.precomputed);var o=c._getDoubles();var m=getNAF(f,1);var q=(1<<(o.step+1))-(o.step%2===0?2:1);q/=3;var e=[];for(var g=0;g<m.length;g+=o.step){var d=0;for(var f=g+o.step-1;f>=g;f--){d=(d<<1)+m[f]}e.push(d)}var n=this.jpoint(null,null,null);var l=this.jpoint(null,null,null);for(var h=q;h>0;h--){for(var g=0;g<e.length;g++){var d=e[g];if(d===h){l=l.mixedAdd(o.points[g])}else{if(d===-h){l=l.mixedAdd(o.points[g].neg())}}}n=n.add(l)}return n.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(a,d){var j=4;var f=a._getNAFPoints(j);j=f.wnd;var b=f.points;var h=getNAF(d,j);var c=this.jpoint(null,null,null);for(var e=h.length-1;e>=0;e--){for(var d=0;e>=0&&h[e]===0;e--){d++}if(e>=0){d++}c=c.dblp(d);if(e<0){break}var g=h[e];assert(g!==0);if(a.type==="affine"){if(g>0){c=c.mixedAdd(b[(g-1)>>1])}else{c=c.mixedAdd(b[(-g-1)>>1].neg())}}else{if(g>0){c=c.add(b[(g-1)>>1])}else{c=c.add(b[(-g-1)>>1].neg())}}}return a.type==="affine"?c.toP():c};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(r,v,h,y,n){var D=this._wnafT1;var d=this._wnafT2;var s=this._wnafT3;var w=0;for(var x=0;x<y;x++){var q=v[x];var E=q._getNAFPoints(r);D[x]=E.wnd;d[x]=E.points}for(var x=y-1;x>=1;x-=2){var C=x-1;var B=x;if(D[C]!==1||D[B]!==1){s[C]=getNAF(h[C],D[C]);s[B]=getNAF(h[B],D[B]);w=Math.max(s[C].length,w);w=Math.max(s[B].length,w);continue}var e=[v[C],null,null,v[B]];if(v[C].y.cmp(v[B].y)===0){e[1]=v[C].add(v[B]);e[2]=v[C].toJ().mixedAdd(v[B].neg())}else{if(v[C].y.cmp(v[B].y.redNeg())===0){e[1]=v[C].toJ().mixedAdd(v[B]);e[2]=v[C].add(v[B].neg())}else{e[1]=v[C].toJ().mixedAdd(v[B]);e[2]=v[C].toJ().mixedAdd(v[B].neg())}}var g=[-3,-1,-5,-7,0,7,5,1,3];var o=getJSF(h[C],h[B]);w=Math.max(o[0].length,w);s[C]=new Array(w);s[B]=new Array(w);for(var u=0;u<w;u++){var c=o[0][u]|0;var F=o[1][u]|0;s[C][u]=g[(c+1)*3+(F+1)];s[B][u]=0;d[C]=e}}var f=this.jpoint(null,null,null);var A=this._wnafT4;for(var x=w;x>=0;x--){var t=0;while(x>=0){var m=true;for(var u=0;u<y;u++){A[u]=s[u][x]|0;if(A[u]!==0){m=false}}if(!m){break}t++;x--}if(x>=0){t++}f=f.dblp(t);if(x<0){break}for(var u=0;u<y;u++){var l=A[u];var q;if(l===0){continue}else{if(l>0){q=d[u][(l-1)>>1]}else{if(l<0){q=d[u][(-l-1)>>1].neg()}}}if(q.type==="affine"){f=f.mixedAdd(q)}else{f=f.add(q)}}}for(var x=0;x<y;x++){d[x]=null}if(n){return f}else{return f.toP()}};function BasePoint(b,a){this.curve=b;this.type=a;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error("Not implemented")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(b,c){b=utils.toArray(b,c);var a=this.p.byteLength();if((b[0]===4||b[0]===6||b[0]===7)&&b.length-1===2*a){if(b[0]===6){assert(b[b.length-1]%2===0)}else{if(b[0]===7){assert(b[b.length-1]%2===1)}}var d=this.point(b.slice(1,1+a),b.slice(1+a,1+2*a));return d}else{if((b[0]===2||b[0]===3)&&b.length-1===a){return this.pointFromX(b.slice(1,1+a),b[0]===3)}}throw new Error("Unknown point format")};BasePoint.prototype.encodeCompressed=function encodeCompressed(a){return this.encode(a,true)};BasePoint.prototype._encode=function _encode(c){var b=this.curve.p.byteLength();var a=this.getX().toArray("be",b);if(c){return[this.getY().isEven()?2:3].concat(a)}return[4].concat(a,this.getY().toArray("be",b))};BasePoint.prototype.encode=function encode(a,b){return utils.encode(this._encode(b),a)};BasePoint.prototype.precompute=function precompute(a){if(this.precomputed){return this}var b={doubles:null,naf:null,beta:null};b.naf=this._getNAFPoints(8);b.doubles=this._getDoubles(4,a);b.beta=this._getBeta();this.precomputed=b;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(a){if(!this.precomputed){return false}var b=this.precomputed.doubles;if(!b){return false}return b.points.length>=Math.ceil((a.bitLength()+1)/b.step)};BasePoint.prototype._getDoubles=function _getDoubles(e,d){if(this.precomputed&&this.precomputed.doubles){return this.precomputed.doubles}var c=[this];var f=this;for(var b=0;b<d;b+=e){for(var a=0;a<e;a++){f=f.dbl()}c.push(f)}return{step:e,points:c}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(e){if(this.precomputed&&this.precomputed.naf){return this.precomputed.naf}var c=[this];var a=(1<<e)-1;var d=a===1?null:this.dbl();for(var b=1;b<a;b++){c[b]=c[b-1].add(d)}return{wnd:e,points:c}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(a){var c=this;for(var b=0;b<a;b++){c=c.dbl()}return c};