"use strict";var assert=require("minimalistic-assert");var inherits=require("inherits");var proto={};function CBCState(a){assert.equal(a.length,8,"Invalid IV length");this.iv=new Array(8);for(var b=0;b<this.iv.length;b++){this.iv[b]=a[b]}}function instantiate(d){function e(g){d.call(this,g);this._cbcInit()}inherits(e,d);var f=Object.keys(proto);for(var c=0;c<f.length;c++){var b=f[c];e.prototype[b]=proto[b]}e.create=function a(g){return new e(g)};return e}exports.instantiate=instantiate;proto._cbcInit=function _cbcInit(){var a=new CBCState(this.options.iv);this._cbcState=a};proto._update=function _update(e,h,b,g){var f=this._cbcState;var d=this.constructor.super_.prototype;var a=f.iv;if(this.type==="encrypt"){for(var c=0;c<this.blockSize;c++){a[c]^=e[h+c]}d._update.call(this,a,0,b,g);for(var c=0;c<this.blockSize;c++){a[c]=b[g+c]}}else{d._update.call(this,e,h,b,g);for(var c=0;c<this.blockSize;c++){b[g+c]^=a[c]}for(var c=0;c<this.blockSize;c++){a[c]=e[h+c]}}};