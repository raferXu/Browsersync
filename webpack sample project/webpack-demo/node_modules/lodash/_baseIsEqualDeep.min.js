var Stack=require("./_Stack"),equalArrays=require("./_equalArrays"),equalByTag=require("./_equalByTag"),equalObjects=require("./_equalObjects"),getTag=require("./_getTag"),isArray=require("./isArray"),isBuffer=require("./isBuffer"),isTypedArray=require("./isTypedArray");var COMPARE_PARTIAL_FLAG=1;var argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]";var objectProto=Object.prototype;var hasOwnProperty=objectProto.hasOwnProperty;function baseIsEqualDeep(f,i,d,e,m,k){var b=isArray(f),c=isArray(i),n=b?arrayTag:getTag(f),l=c?arrayTag:getTag(i);n=n==argsTag?objectTag:n;l=l==argsTag?objectTag:l;var q=n==objectTag,a=l==objectTag,j=n==l;if(j&&isBuffer(f)){if(!isBuffer(i)){return false}b=true;q=false}if(j&&!q){k||(k=new Stack);return(b||isTypedArray(f))?equalArrays(f,i,d,e,m,k):equalByTag(f,i,n,d,e,m,k)}if(!(d&COMPARE_PARTIAL_FLAG)){var h=q&&hasOwnProperty.call(f,"__wrapped__"),p=a&&hasOwnProperty.call(i,"__wrapped__");if(h||p){var o=h?f.value():f,g=p?i.value():i;k||(k=new Stack);return m(o,g,d,e,k)}}if(!j){return false}k||(k=new Stack);return equalObjects(f,i,d,e,m,k)}module.exports=baseIsEqualDeep;