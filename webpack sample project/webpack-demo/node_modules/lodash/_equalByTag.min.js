var Symbol=require("./_Symbol"),Uint8Array=require("./_Uint8Array"),eq=require("./eq"),equalArrays=require("./_equalArrays"),mapToArray=require("./_mapToArray"),setToArray=require("./_setToArray");var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;var boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]";var arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]";var symbolProto=Symbol?Symbol.prototype:undefined,symbolValueOf=symbolProto?symbolProto.valueOf:undefined;function equalByTag(d,f,k,b,c,i,h){switch(k){case dataViewTag:if((d.byteLength!=f.byteLength)||(d.byteOffset!=f.byteOffset)){return false}d=d.buffer;f=f.buffer;case arrayBufferTag:if((d.byteLength!=f.byteLength)||!i(new Uint8Array(d),new Uint8Array(f))){return false}return true;case boolTag:case dateTag:case numberTag:return eq(+d,+f);case errorTag:return d.name==f.name&&d.message==f.message;case regexpTag:case stringTag:return d==(f+"");case mapTag:var g=mapToArray;case setTag:var a=b&COMPARE_PARTIAL_FLAG;g||(g=setToArray);if(d.size!=f.size&&!a){return false}var e=h.get(d);if(e){return e==f}b|=COMPARE_UNORDERED_FLAG;h.set(d,f);var j=equalArrays(g(d),g(f),b,c,i,h);h["delete"](d);return j;case symbolTag:if(symbolValueOf){return symbolValueOf.call(d)==symbolValueOf.call(f)}}return false}module.exports=equalByTag;