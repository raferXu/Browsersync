var mods=["secp256k1","secp224r1","prime256v1","prime192v1"];var test=require("tape");var _crypto=require("../");var createECDH1=_crypto.createECDH;var createECDH2=require("create-ecdh/browser");mods.forEach(function(a){test("createECDH: "+a+" uncompressed",function(f){f.plan(2);var b=createECDH1(a);b.generateKeys();var h=createECDH2(a);h.generateKeys();var g=b.getPublicKey();var e=h.getPublicKey();f.notEquals(g.toString("hex"),e.toString("hex"),"diff public keys");var d=b.computeSecret(e).toString("hex");var c=h.computeSecret(g).toString("hex");f.equals(d,c,"equal secrets")});test("createECDH: "+a+" compressed",function(f){f.plan(2);var b=createECDH1(a);b.generateKeys();var h=createECDH2(a);h.generateKeys();var g=b.getPublicKey(null,"compressed");var e=h.getPublicKey(null,"compressed");f.notEquals(g.toString("hex"),e.toString("hex"),"diff public keys");var d=b.computeSecret(e).toString("hex");var c=h.computeSecret(g).toString("hex");f.equals(d,c,"equal secrets")});test("createECDH: "+a+" set stuff",function(i){i.plan(5);var e=createECDH1(a);var d=createECDH2(a);e.generateKeys();d.generateKeys();e.setPrivateKey(d.getPrivateKey());e.setPublicKey(d.getPublicKey());var c=e.getPrivateKey("hex");var b=d.getPrivateKey("hex");i.equals(c,b,"same private key");var g=e.getPublicKey();var f=d.getPublicKey();i.equals(g.toString("hex"),f.toString("hex"),"same public keys, uncompressed");i.equals(e.getPublicKey("hex","compressed"),d.getPublicKey("hex","compressed"),"same public keys compressed");i.equals(e.getPublicKey("hex","hybrid"),d.getPublicKey("hex","hybrid"),"same public keys hybrid");var j=e.computeSecret(f).toString("hex");var h=d.computeSecret(g).toString("hex");i.equals(j,h,"equal secrets")})});