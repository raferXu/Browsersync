var test=require("tape");var crypto=require("diffie-hellman/browser");test("diffie-hellman mod groups",function(a){["modp1","modp2","modp5","modp14","modp15","modp16"].forEach(function(b){a.test(b,function(j){j.plan(3);var d=crypto.getDiffieHellman(b);var h=d.getPrime().toString("hex");d.generateKeys();var c=crypto.getDiffieHellman(b);var g=c.getPrime().toString("hex");c.generateKeys();j.equals(h,g,"equal primes");var f=d.getPublicKey();var e=c.getPublicKey();j.notEquals(f,e,"diff public keys");var k=d.computeSecret(e).toString("hex");var i=c.computeSecret(d.getPublicKey()).toString("hex");j.equals(k,i,"equal secrets")})})});test("diffie-hellman key lengths",function(a){[64,65,192].forEach(function(b){a.test(""+b,function(k){k.plan(3);var c=crypto.createDiffieHellman(b);var d=c.getPrime();var h=d.toString("hex");var e=crypto.createDiffieHellman(d);var i=e.getPrime().toString("hex");e.generateKeys();c.generateKeys();k.equals(i,h,"equal primes");var g=e.getPublicKey();var f=c.getPublicKey();k.notEquals(g,f,"diff public keys");var l=e.computeSecret(f).toString("hex");var j=c.computeSecret(e.getPublicKey()).toString("hex");k.equals(l,j,"equal secrets")})})});