var test=require("tape");var algorithms=["sha1","sha224","sha256","sha384","sha512","md5","rmd160"];var encodings=["hex","base64"];var vectors=require("hash-test-vectors");testLib("createHash in crypto-browserify",require("../").createHash);testLib("create-hash/browser",require("create-hash/browser"));function testLib(a,b){algorithms.forEach(function(c){runTest(a,b,c)})}function runTest(b,c,a){test(b+" test "+a+" against test vectors",function(d){e(0);function e(g){if(g>=vectors.length){return d.end()}var l=vectors[g];var f=new Buffer(l.input,"base64");var h=l[a];var k=c(a).update(f).digest("hex");if(k!==h){d.equal(k,h,a+"(testVector["+g+"]) == "+h)}encodings.forEach(function(n){var i=new Buffer(l.input,"base64").toString(n);var m=l[a];var o=c(a).update(i,n).digest("hex");if(o!==m){d.equal(o,m,a+"(testVector["+g+"], "+n+") == "+m)}});f=new Buffer(l.input,"base64");h=l[a];var j=c(a);j.end(f);k=j.read().toString("hex");if(k!==h){d.equal(k,h,a+"(testVector["+g+"]) == "+h)}setTimeout(e,0,g+1)}})};