var crypto=require("crypto");var tape=require("tape");var Sha1=require("../").sha1;var inputs=[["","ascii"],["abc","ascii"],["123","ascii"],["123456789abcdef123456789abcdef123456789abcdef123456789abcdef","ascii"],["123456789abcdef123456789abcdef123456789abcdef123456789abc","ascii"],["123456789abcdef123456789abcdef123456789abcdef123456789ab","ascii"],["0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcde","ascii"],["0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef","ascii"],["foobarbaz","ascii"]];tape("hash is the same as node's crypto",function(a){inputs.forEach(function(c){var b=new Sha1().update(c[0],c[1]).digest("hex");var d=crypto.createHash("sha1").update(c[0],c[1]).digest("hex");console.log(b,"==",d);a.equal(b,d)});a.end()});tape("call update multiple times",function(a){inputs.forEach(function(c){var j=new Sha1();var g=crypto.createHash("sha1");for(var d=0;d<c[0].length;d=(d+1)*2){var f=c[0].substring(d,(d+1)*2);j.update(f,c[1]);g.update(f,c[1])}var b=j.digest("hex");var h=g.digest("hex");console.log(b,"==",h);a.equal(b,h)});a.end()});tape("call update twice",function(c){var d=crypto.createHash("sha1");var g=new Sha1();d.update("foo","ascii");g.update("foo","ascii");d.update("bar","ascii");g.update("bar","ascii");d.update("baz","ascii");g.update("baz","ascii");var b=g.digest("hex");var f=d.digest("hex");c.equal(b,f);c.end()});tape("hex encoding",function(a){inputs.forEach(function(c){var j=new Sha1();var g=crypto.createHash("sha1");for(var d=0;d<c[0].length;d=(d+1)*2){var f=c[0].substring(d,(d+1)*2);j.update(new Buffer(f,"ascii").toString("hex"),"hex");g.update(new Buffer(f,"ascii").toString("hex"),"hex")}var b=j.digest("hex");var h=g.digest("hex");console.log(b,"==",h);a.equal(b,h)});a.end()});