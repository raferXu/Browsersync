var tape=require("tape");var vectors=require("hash-test-vectors");var Buffer=require("buffer").Buffer;var hexpp=require("../hexpp");var createHash=require("../");function makeTest(d,c,a){var b=vectors[c];tape(d+": NIST vector "+c,function(g){if(a){console.log(b);console.log("VECTOR",c);console.log("INPUT",b.input);console.log(hexpp(new Buffer(b.input,"base64")));console.log(new Buffer(b.input,"base64").toString("hex"))}var f=new Buffer(b.input,"base64");g.equal(createHash(d).update(f).digest("hex"),b[d]);c=~~(f.length/2);var k=f.slice(0,c);var i=f.slice(c,f.length);console.log(k.length,i.length,f.length);console.log(createHash(d)._block.length);g.equal(createHash(d).update(k).update(i).digest("hex"),b[d]);var e,h;c=~~(f.length/3);e=~~(f.length*2/3);k=f.slice(0,c);i=f.slice(c,e);h=f.slice(e,f.length);g.equal(createHash(d).update(k).update(i).update(h).digest("hex"),b[d]);setTimeout(function(){g.end()})})}if(process.argv[2]){makeTest(process.argv[2],parseInt(process.argv[3],10),true)}else{vectors.forEach(function(a,b){makeTest("sha",b);makeTest("sha1",b);makeTest("sha224",b);makeTest("sha256",b);makeTest("sha384",b);makeTest("sha512",b)})};