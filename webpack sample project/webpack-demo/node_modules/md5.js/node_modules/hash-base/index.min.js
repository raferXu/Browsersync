"use strict";var Buffer=require("safe-buffer").Buffer;var Transform=require("stream").Transform;var inherits=require("inherits");function throwIfNotStringOrBuffer(b,a){if(!Buffer.isBuffer(b)&&typeof b!=="string"){throw new TypeError(a+" must be a string or a buffer")}}function HashBase(a){Transform.call(this);this._block=Buffer.allocUnsafe(a);this._blockSize=a;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false}inherits(HashBase,Transform);HashBase.prototype._transform=function(b,d,e){var a=null;try{this.update(b,d)}catch(c){a=c}e(a)};HashBase.prototype._flush=function(c){var a=null;try{this.push(this.digest())}catch(b){a=b}c(a)};HashBase.prototype.update=function(d,c){throwIfNotStringOrBuffer(d,"Data");if(this._finalized){throw new Error("Digest already called")}if(!Buffer.isBuffer(d)){d=Buffer.from(d,c)}var g=this._block;var f=0;while(this._blockOffset+d.length-f>=this._blockSize){for(var b=this._blockOffset;b<this._blockSize;){g[b++]=d[f++]}this._update();this._blockOffset=0}while(f<d.length){g[this._blockOffset++]=d[f++]}for(var a=0,e=d.length*8;e>0;++a){this._length[a]+=e;e=(this._length[a]/4294967296)|0;if(e>0){this._length[a]-=4294967296*e}}return this};HashBase.prototype._update=function(){throw new Error("_update is not implemented")};HashBase.prototype.digest=function(b){if(this._finalized){throw new Error("Digest already called")}this._finalized=true;var c=this._digest();if(b!==undefined){c=c.toString(b)}this._block.fill(0);this._blockOffset=0;for(var a=0;a<4;++a){this._length[a]=0}return c};HashBase.prototype._digest=function(){throw new Error("_digest is not implemented")};module.exports=HashBase;