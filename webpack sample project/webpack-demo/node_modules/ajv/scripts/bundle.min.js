"use strict";var fs=require("fs"),path=require("path"),browserify=require("browserify"),uglify=require("uglify-js");var pkg=process.argv[2],standalone=process.argv[3],compress=process.argv[4];var packageDir=path.join(__dirname,"..");if(pkg!="."){packageDir=path.join(packageDir,"node_modules",pkg)}var json=require(path.join(packageDir,"package.json"));var distDir=path.join(__dirname,"..","dist");if(!fs.existsSync(distDir)){fs.mkdirSync(distDir)}var bOpts={};if(standalone){bOpts.standalone=standalone}browserify(bOpts).require(path.join(packageDir,json.main),{expose:json.name}).bundle(function(b,a){if(b){console.error("browserify error:",b);process.exit(1)}var h=path.join(distDir,json.name);var g={warnings:true,compress:{},output:{preamble:"/* "+json.name+" "+json.version+": "+json.description+" */"}};if(compress){var k=compress.split(",");for(var f=0,l=k.length;f<l;++f){var d=k[f].split("=");g.compress[d[0]]=d.length<1||d[1]!="false"}}if(standalone){g.sourceMap={filename:json.name+".min.js",url:json.name+".min.js.map"}}var m=uglify.minify(a.toString(),g);fs.writeFileSync(h+".min.js",m.code);if(m.map){fs.writeFileSync(h+".min.js.map",m.map)}if(standalone){fs.writeFileSync(h+".bundle.js",a)}if(m.warnings){for(var c=0,e=m.warnings.length;c<e;++c){console.warn("UglifyJS warning:",m.warnings[c])}}});