"use strict";var MissingRefError=require("./error_classes").MissingRef;module.exports=compileAsync;function compileAsync(c,f,g){var b=this;if(typeof this._opts.loadSchema!="function"){throw new Error("options.loadSchema should be a function")}if(typeof f=="function"){g=f;f=undefined}var e=d(c).then(function(){var h=b._addSchema(c,undefined,f);return h.validate||a(h)});if(g){e.then(function(h){g(null,h)},g)}return e;function d(h){var i=h.$schema;return i&&!b.getSchema(i)?compileAsync.call(b,{$ref:i},true):Promise.resolve()}function a(i){try{return b._compile(i)}catch(j){if(j instanceof MissingRefError){return h(j)}throw j}function h(n){var l=n.missingSchema;if(k(l)){throw new Error("Schema "+l+" is loaded but "+n.missingRef+" cannot be resolved")}var o=b._loadingSchemas[l];if(!o){o=b._loadingSchemas[l]=b._opts.loadSchema(l);o.then(m,m)}return o.then(function(p){if(!k(l)){return d(p).then(function(){if(!k(l)){b.addSchema(p,l,undefined,f)}})}}).then(function(){return a(i)});function m(){delete b._loadingSchemas[l]}function k(p){return b._refs[p]||b._schemas[p]}}}};