"use strict";module.exports=function generate_oneOf(j,m,c){var s=" ";var v=j.level;var k=j.dataLevel;var t=j.schema[m];var h=j.schemaPath+j.util.getProperty(m);var n=j.errSchemaPath+"/"+m;var l=!j.opts.allErrors;var e="data"+(k||"");var g="valid"+v;var q="errs__"+v;var f=j.util.copy(j);var d="";f.level++;var u="valid"+f.level;s+="var "+(q)+" = errors;var prevValid"+(v)+" = false;var "+(g)+" = false;";var b=f.baseId;var p=j.compositeRule;j.compositeRule=f.compositeRule=true;var i=t;if(i){var o,a=-1,r=i.length-1;while(a<r){o=i[a+=1];if(j.util.schemaHasRules(o,j.RULES.all)){f.schema=o;f.schemaPath=h+"["+a+"]";f.errSchemaPath=n+"/"+a;s+="  "+(j.validate(f))+" ";f.baseId=b}else{s+=" var "+(u)+" = true; "}if(a){s+=" if ("+(u)+" && prevValid"+(v)+") "+(g)+" = false; else { ";d+="}"}s+=" if ("+(u)+") "+(g)+" = prevValid"+(v)+" = true;"}}j.compositeRule=f.compositeRule=p;s+=""+(d)+"if (!"+(g)+") {   var err =   ";if(j.createErrors!==false){s+=" { keyword: '"+("oneOf")+"' , dataPath: (dataPath || '') + "+(j.errorPath)+" , schemaPath: "+(j.util.toQuotedString(n))+" , params: {} ";if(j.opts.messages!==false){s+=" , message: 'should match exactly one schema in oneOf' "}if(j.opts.verbose){s+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(j.schemaPath)+" , data: "+(e)+" "}s+=" } "}else{s+=" {} "}s+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";if(!j.compositeRule&&l){if(j.async){s+=" throw new ValidationError(vErrors); "}else{s+=" validate.errors = vErrors; return false; "}}s+="} else {  errors = "+(q)+"; if (vErrors !== null) { if ("+(q)+") vErrors.length = "+(q)+"; else vErrors = null; }";if(j.opts.allErrors){s+=" } "}return s};