"use strict";module.exports=function generate_custom(r,E,s){var A=" ";var w=r.level;var C=r.dataLevel;var D=r.schema[E];var t=r.schemaPath+r.util.getProperty(E);var q=r.errSchemaPath+"/"+E;var B=!r.opts.allErrors;var i;var e="data"+(C||"");var k="valid"+w;var N="errs__"+w;var v=r.opts.$data&&D&&D.$data,h;if(v){A+=" var schema"+(w)+" = "+(r.util.getData(D.$data,C,r.dataPathArr))+"; ";h="schema"+w}else{h=D}var d=this,H="definition"+w,b=d.definition,F="";var a,p,z,c,u;if(v&&b.$data){u="keywordValidate"+w;var y=b.validateSchema;A+=" var "+(H)+" = RULES.custom['"+(E)+"'].definition; var "+(u)+" = "+(H)+".validate;"}else{c=r.useCustomRule(d,D,r.schema,r);if(!c){return}h="validate.schema"+t;u=c.code;a=b.compile;p=b.inline;z=b.macro}var n=u+".errors",f="i"+w,M="ruleErr"+w,o=b.async;if(o&&!r.async){throw new Error("async keyword in sync schema")}if(!(p||z)){A+=""+(n)+" = null;"}A+="var "+(N)+" = errors;var "+(k)+";";if(v&&b.$data){F+="}";A+=" if ("+(h)+" === undefined) { "+(k)+" = true; } else { ";if(y){F+="}";A+=" "+(k)+" = "+(H)+".validateSchema("+(h)+"); if ("+(k)+") { "}}if(p){if(b.statements){A+=" "+(c.validate)+" "}else{A+=" "+(k)+" = "+(c.validate)+"; "}}else{if(z){var m=r.util.copy(r);var F="";m.level++;var G="valid"+m.level;m.schema=c.validate;m.schemaPath="";var x=r.compositeRule;r.compositeRule=m.compositeRule=true;var g=r.validate(m).replace(/validate\.schema/g,u);r.compositeRule=m.compositeRule=x;A+=" "+(g)}else{var K=K||[];K.push(A);A="";A+="  "+(u)+".call( ";if(r.opts.passContext){A+="this"}else{A+="self"}if(a||b.schema===false){A+=" , "+(e)+" "}else{A+=" , "+(h)+" , "+(e)+" , validate.schema"+(r.schemaPath)+" "}A+=" , (dataPath || '')";if(r.errorPath!='""'){A+=" + "+(r.errorPath)}var l=C?"data"+((C-1)||""):"parentData",I=C?r.dataPathArr[C]:"parentDataProperty";A+=" , "+(l)+" , "+(I)+" , rootData )  ";var j=A;A=K.pop();if(b.errors===false){A+=" "+(k)+" = ";if(o){A+=""+(r.yieldAwait)}A+=""+(j)+"; "}else{if(o){n="customErrors"+w;A+=" var "+(n)+" = null; try { "+(k)+" = "+(r.yieldAwait)+(j)+"; } catch (e) { "+(k)+" = false; if (e instanceof ValidationError) "+(n)+" = e.errors; else throw e; } "}else{A+=" "+(n)+" = null; "+(k)+" = "+(j)+"; "}}}}if(b.modifying){A+=" if ("+(l)+") "+(e)+" = "+(l)+"["+(I)+"];"}A+=""+(F);if(b.valid){if(B){A+=" if (true) { "}}else{A+=" if ( ";if(b.valid===undefined){A+=" !";if(z){A+=""+(G)}else{A+=""+(k)}}else{A+=" "+(!b.valid)+" "}A+=") { ";i=d.keyword;var K=K||[];K.push(A);A="";var K=K||[];K.push(A);A="";if(r.createErrors!==false){A+=" { keyword: '"+(i||"custom")+"' , dataPath: (dataPath || '') + "+(r.errorPath)+" , schemaPath: "+(r.util.toQuotedString(q))+" , params: { keyword: '"+(d.keyword)+"' } ";if(r.opts.messages!==false){A+=" , message: 'should pass \""+(d.keyword)+"\" keyword validation' "}if(r.opts.verbose){A+=" , schema: validate.schema"+(t)+" , parentSchema: validate.schema"+(r.schemaPath)+" , data: "+(e)+" "}A+=" } "}else{A+=" {} "}var J=A;A=K.pop();if(!r.compositeRule&&B){if(r.async){A+=" throw new ValidationError(["+(J)+"]); "}else{A+=" validate.errors = ["+(J)+"]; return false; "}}else{A+=" var err = "+(J)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}var L=A;A=K.pop();if(p){if(b.errors){if(b.errors!="full"){A+="  for (var "+(f)+"="+(N)+"; "+(f)+"<errors; "+(f)+"++) { var "+(M)+" = vErrors["+(f)+"]; if ("+(M)+".dataPath === undefined) "+(M)+".dataPath = (dataPath || '') + "+(r.errorPath)+"; if ("+(M)+".schemaPath === undefined) { "+(M)+'.schemaPath = "'+(q)+'"; } ';if(r.opts.verbose){A+=" "+(M)+".schema = "+(h)+"; "+(M)+".data = "+(e)+"; "}A+=" } "}}else{if(b.errors===false){A+=" "+(L)+" "}else{A+=" if ("+(N)+" == errors) { "+(L)+" } else {  for (var "+(f)+"="+(N)+"; "+(f)+"<errors; "+(f)+"++) { var "+(M)+" = vErrors["+(f)+"]; if ("+(M)+".dataPath === undefined) "+(M)+".dataPath = (dataPath || '') + "+(r.errorPath)+"; if ("+(M)+".schemaPath === undefined) { "+(M)+'.schemaPath = "'+(q)+'"; } ';if(r.opts.verbose){A+=" "+(M)+".schema = "+(h)+"; "+(M)+".data = "+(e)+"; "}A+=" } } "}}}else{if(z){A+="   var err =   ";if(r.createErrors!==false){A+=" { keyword: '"+(i||"custom")+"' , dataPath: (dataPath || '') + "+(r.errorPath)+" , schemaPath: "+(r.util.toQuotedString(q))+" , params: { keyword: '"+(d.keyword)+"' } ";if(r.opts.messages!==false){A+=" , message: 'should pass \""+(d.keyword)+"\" keyword validation' "}if(r.opts.verbose){A+=" , schema: validate.schema"+(t)+" , parentSchema: validate.schema"+(r.schemaPath)+" , data: "+(e)+" "}A+=" } "}else{A+=" {} "}A+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";if(!r.compositeRule&&B){if(r.async){A+=" throw new ValidationError(vErrors); "}else{A+=" validate.errors = vErrors; return false; "}}}else{if(b.errors===false){A+=" "+(L)+" "}else{A+=" if (Array.isArray("+(n)+")) { if (vErrors === null) vErrors = "+(n)+"; else vErrors = vErrors.concat("+(n)+"); errors = vErrors.length;  for (var "+(f)+"="+(N)+"; "+(f)+"<errors; "+(f)+"++) { var "+(M)+" = vErrors["+(f)+"]; if ("+(M)+".dataPath === undefined) "+(M)+".dataPath = (dataPath || '') + "+(r.errorPath)+";  "+(M)+'.schemaPath = "'+(q)+'";  ';if(r.opts.verbose){A+=" "+(M)+".schema = "+(h)+"; "+(M)+".data = "+(e)+"; "}A+=" } } else { "+(L)+" } "}}}A+=" } ";if(B){A+=" else { "}}return A};