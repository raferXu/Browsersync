"use strict";module.exports=function generate_required(q,F,s){var B=" ";var x=q.level;var D=q.dataLevel;var E=q.schema[F];var u=q.schemaPath+q.util.getProperty(F);var p=q.errSchemaPath+"/"+F;var C=!q.opts.allErrors;var c="data"+(D||"");var n="valid"+x;var w=q.opts.$data&&E&&E.$data,l;if(w){B+=" var schema"+(x)+" = "+(q.util.getData(E.$data,D,q.dataPathArr))+"; ";l="schema"+x}else{l=E}var m="schema"+x;if(!w){if(E.length<q.opts.loopRequired&&q.schema.properties&&Object.keys(q.schema.properties).length){var z=[];var J=E;if(J){var f,i=-1,k=J.length-1;while(i<k){f=J[i+=1];var a=q.schema.properties[f];if(!(a&&q.util.schemaHasRules(a,q.RULES.all))){z[z.length]=f}}}}else{var z=E}}if(w||z.length){var b=q.errorPath,t=w||z.length>=q.opts.loopRequired,v=q.opts.ownProperties;if(C){B+=" var missing"+(x)+"; ";if(t){if(!w){B+=" var "+(m)+" = validate.schema"+(u)+"; "}var e="i"+x,A="schema"+x+"["+e+"]",o="' + "+A+" + '";if(q.opts._errorDataPathProperty){q.errorPath=q.util.getPathExpr(b,A,q.opts.jsonPointers)}B+=" var "+(n)+" = true; ";if(w){B+=" if (schema"+(x)+" === undefined) "+(n)+" = true; else if (!Array.isArray(schema"+(x)+")) "+(n)+" = false; else {"}B+=" for (var "+(e)+" = 0; "+(e)+" < "+(m)+".length; "+(e)+"++) { "+(n)+" = "+(c)+"["+(m)+"["+(e)+"]] !== undefined ";if(v){B+=" &&   Object.prototype.hasOwnProperty.call("+(c)+", "+(m)+"["+(e)+"]) "}B+="; if (!"+(n)+") break; } ";if(w){B+="  }  "}B+="  if (!"+(n)+") {   ";var I=I||[];I.push(B);B="";if(q.createErrors!==false){B+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(q.errorPath)+" , schemaPath: "+(q.util.toQuotedString(p))+" , params: { missingProperty: '"+(o)+"' } ";if(q.opts.messages!==false){B+=" , message: '";if(q.opts._errorDataPathProperty){B+="is a required property"}else{B+="should have required property \\'"+(o)+"\\'"}B+="' "}if(q.opts.verbose){B+=" , schema: validate.schema"+(u)+" , parentSchema: validate.schema"+(q.schemaPath)+" , data: "+(c)+" "}B+=" } "}else{B+=" {} "}var K=B;B=I.pop();if(!q.compositeRule&&C){if(q.async){B+=" throw new ValidationError(["+(K)+"]); "}else{B+=" validate.errors = ["+(K)+"]; return false; "}}else{B+=" var err = "+(K)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}B+=" } else { "}else{B+=" if ( ";var H=z;if(H){var d,e=-1,j=H.length-1;while(e<j){d=H[e+=1];if(e){B+=" || "}var r=q.util.getProperty(d),y=c+r;B+=" ( ( "+(y)+" === undefined ";if(v){B+=" || ! Object.prototype.hasOwnProperty.call("+(c)+", '"+(q.util.escapeQuotes(d))+"') "}B+=") && (missing"+(x)+" = "+(q.util.toQuotedString(q.opts.jsonPointers?d:r))+") ) "}}B+=") {  ";var A="missing"+x,o="' + "+A+" + '";if(q.opts._errorDataPathProperty){q.errorPath=q.opts.jsonPointers?q.util.getPathExpr(b,A,true):b+" + "+A}var I=I||[];I.push(B);B="";if(q.createErrors!==false){B+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(q.errorPath)+" , schemaPath: "+(q.util.toQuotedString(p))+" , params: { missingProperty: '"+(o)+"' } ";if(q.opts.messages!==false){B+=" , message: '";if(q.opts._errorDataPathProperty){B+="is a required property"}else{B+="should have required property \\'"+(o)+"\\'"}B+="' "}if(q.opts.verbose){B+=" , schema: validate.schema"+(u)+" , parentSchema: validate.schema"+(q.schemaPath)+" , data: "+(c)+" "}B+=" } "}else{B+=" {} "}var K=B;B=I.pop();if(!q.compositeRule&&C){if(q.async){B+=" throw new ValidationError(["+(K)+"]); "}else{B+=" validate.errors = ["+(K)+"]; return false; "}}else{B+=" var err = "+(K)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}B+=" } else { "}}else{if(t){if(!w){B+=" var "+(m)+" = validate.schema"+(u)+"; "}var e="i"+x,A="schema"+x+"["+e+"]",o="' + "+A+" + '";if(q.opts._errorDataPathProperty){q.errorPath=q.util.getPathExpr(b,A,q.opts.jsonPointers)}if(w){B+=" if ("+(m)+" && !Array.isArray("+(m)+")) {  var err =   ";if(q.createErrors!==false){B+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(q.errorPath)+" , schemaPath: "+(q.util.toQuotedString(p))+" , params: { missingProperty: '"+(o)+"' } ";if(q.opts.messages!==false){B+=" , message: '";if(q.opts._errorDataPathProperty){B+="is a required property"}else{B+="should have required property \\'"+(o)+"\\'"}B+="' "}if(q.opts.verbose){B+=" , schema: validate.schema"+(u)+" , parentSchema: validate.schema"+(q.schemaPath)+" , data: "+(c)+" "}B+=" } "}else{B+=" {} "}B+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+(m)+" !== undefined) { "}B+=" for (var "+(e)+" = 0; "+(e)+" < "+(m)+".length; "+(e)+"++) { if ("+(c)+"["+(m)+"["+(e)+"]] === undefined ";if(v){B+=" || ! Object.prototype.hasOwnProperty.call("+(c)+", "+(m)+"["+(e)+"]) "}B+=") {  var err =   ";if(q.createErrors!==false){B+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(q.errorPath)+" , schemaPath: "+(q.util.toQuotedString(p))+" , params: { missingProperty: '"+(o)+"' } ";if(q.opts.messages!==false){B+=" , message: '";if(q.opts._errorDataPathProperty){B+="is a required property"}else{B+="should have required property \\'"+(o)+"\\'"}B+="' "}if(q.opts.verbose){B+=" , schema: validate.schema"+(u)+" , parentSchema: validate.schema"+(q.schemaPath)+" , data: "+(c)+" "}B+=" } "}else{B+=" {} "}B+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ";if(w){B+="  }  "}}else{var G=z;if(G){var d,g=-1,h=G.length-1;while(g<h){d=G[g+=1];var r=q.util.getProperty(d),o=q.util.escapeQuotes(d),y=c+r;if(q.opts._errorDataPathProperty){q.errorPath=q.util.getPath(b,d,q.opts.jsonPointers)}B+=" if ( "+(y)+" === undefined ";if(v){B+=" || ! Object.prototype.hasOwnProperty.call("+(c)+", '"+(q.util.escapeQuotes(d))+"') "}B+=") {  var err =   ";if(q.createErrors!==false){B+=" { keyword: '"+("required")+"' , dataPath: (dataPath || '') + "+(q.errorPath)+" , schemaPath: "+(q.util.toQuotedString(p))+" , params: { missingProperty: '"+(o)+"' } ";if(q.opts.messages!==false){B+=" , message: '";if(q.opts._errorDataPathProperty){B+="is a required property"}else{B+="should have required property \\'"+(o)+"\\'"}B+="' "}if(q.opts.verbose){B+=" , schema: validate.schema"+(u)+" , parentSchema: validate.schema"+(q.schemaPath)+" , data: "+(c)+" "}B+=" } "}else{B+=" {} "}B+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}}}q.errorPath=b}else{if(C){B+=" if (true) {"}}return B};