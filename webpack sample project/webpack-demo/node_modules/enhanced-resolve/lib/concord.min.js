var globToRegExp=require("./globToRegExp").globToRegExp;function parseType(c){var a=c.split("+");var b=a.shift();return{type:b==="*"?null:b,features:a}}function isTypeMatched(b,a){if(typeof b==="string"){b=parseType(b)}if(typeof a==="string"){a=parseType(a)}if(a.type&&a.type!==b.type){return false}return a.features.every(function(c){return b.features.indexOf(c)>=0})}function isResourceTypeMatched(c,a){c=c.split("/");a=a.split("/");if(c.length!==a.length){return false}for(var b=0;b<c.length;b++){if(!isTypeMatched(c[b],a[b])){return false}}return true}function isResourceTypeSupported(a,b){return a.supportedResourceTypes&&a.supportedResourceTypes.some(function(c){return isResourceTypeMatched(c,b)})}function isEnvironment(a,b){return a.environments&&a.environments.every(function(c){return isTypeMatched(c,b)})}var globCache={};function getGlobRegExp(b){var a=globCache[b]||(globCache[b]=globToRegExp(b));return a}function matchGlob(c,a){var b=getGlobRegExp(c);return b.exec(a)}function isGlobMatched(b,a){return !!matchGlob(b,a)}function isConditionMatched(b,d){var a=d.split("|");return a.some(function c(h){h=h.trim();var e=/^!/.test(h);if(e){return !c(h.substr(1))}if(/^[a-z]+:/.test(h)){var g=/^([a-z]+):\s*/.exec(h);var i=h.substr(g[0].length);var f=g[1];switch(f){case"referrer":return isGlobMatched(i,b.referrer);default:return false}}else{if(h.indexOf("/")>=0){return isResourceTypeSupported(b,h)}else{return isEnvironment(b,h)}}})}function isKeyMatched(c,b){while(true){var a=/^\[([^\]]+)\]\s*/.exec(b);if(!a){return b}b=b.substr(a[0].length);var d=a[1];if(!isConditionMatched(c,d)){return false}}}function getField(a,d,c){var b;Object.keys(d).forEach(function(e){var f=isKeyMatched(a,e);if(f===c){b=d[e]}});return b}function getMain(a,b){return getField(a,b,"main")}function getExtensions(a,b){return getField(a,b,"extensions")}function matchModule(a,c,f){var e=getField(a,c,"modules");if(!e){return f}var k=f;var o=Object.keys(e);var d=0;for(var h=0;h<o.length;h++){var n=o[h];var b=isKeyMatched(a,n);var j=matchGlob(b,k);if(j){var m=e[n];if(typeof m!=="string"){return m}else{if(/^\(.+\)$/.test(b)){k=k.replace(getGlobRegExp(b),m)}else{var l=1;k=m.replace(/(\/?\*)?\*/g,g)}}h=-1;if(d++>o.length){throw new Error("Request '"+f+"' matches recursively")}}}return k;function g(p){switch(p){case"/**":var i=j[l++];return i?"/"+i:"";case"**":case"*":return j[l++]}}}function matchType(c,e,b){var a=getField(c,e,"types");if(!a){return undefined}var d;Object.keys(a).forEach(function(f){var h=isKeyMatched(c,f);if(isGlobMatched(h,b)){var g=a[f];if(!d&&/\/\*$/.test(g)){throw new Error("value ('"+g+"') of key '"+f+"' contains '*', but there is no previous value defined")}d=g.replace(/\/\*$/,"/"+d)}});return d}exports.parseType=parseType;exports.isTypeMatched=isTypeMatched;exports.isResourceTypeSupported=isResourceTypeSupported;exports.isEnvironment=isEnvironment;exports.isGlobMatched=isGlobMatched;exports.isConditionMatched=isConditionMatched;exports.isKeyMatched=isKeyMatched;exports.getField=getField;exports.getMain=getMain;exports.getExtensions=getExtensions;exports.matchModule=matchModule;exports.matchType=matchType;