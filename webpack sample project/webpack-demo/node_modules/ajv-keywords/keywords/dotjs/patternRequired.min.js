"use strict";module.exports=function generate_patternRequired(h,m,b){var q=" ";var w=h.level;var i=h.dataLevel;var r=h.schema[m];var f=h.schemaPath+h.util.getProperty(m);var n=h.errSchemaPath+"/"+m;var k=!h.opts.allErrors;var d="data"+(i||"");var e="valid"+w;var j="key"+w,v="idx"+w,u="patternMatched"+w,t="dataProperties"+w,c="",a=h.opts.ownProperties;q+="var "+(e)+" = true;";if(a){q+=" var "+(t)+" = undefined;"}var g=r;if(g){var l,o=-1,p=g.length-1;while(o<p){l=g[o+=1];q+=" var "+(u)+" = false;  ";if(a){q+=" "+(t)+" = "+(t)+" || Object.keys("+(d)+"); for (var "+(v)+"=0; "+(v)+"<"+(t)+".length; "+(v)+"++) { var "+(j)+" = "+(t)+"["+(v)+"]; "}else{q+=" for (var "+(j)+" in "+(d)+") { "}q+=" "+(u)+" = "+(h.usePattern(l))+".test("+(j)+"); if ("+(u)+") break; } ";var s=h.util.escapeQuotes(l);q+=" if (!"+(u)+") { "+(e)+" = false;  var err =   ";if(h.createErrors!==false){q+=" { keyword: '"+("patternRequired")+"' , dataPath: (dataPath || '') + "+(h.errorPath)+" , schemaPath: "+(h.util.toQuotedString(n))+" , params: { missingPattern: '"+(s)+"' } ";if(h.opts.messages!==false){q+=" , message: 'should have property matching pattern \\'"+(s)+"\\'' "}if(h.opts.verbose){q+=" , schema: validate.schema"+(f)+" , parentSchema: validate.schema"+(h.schemaPath)+" , data: "+(d)+" "}q+=" } "}else{q+=" {} "}q+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; }   ";if(k){c+="}";q+=" else { "}}}q+=""+(c);return q};