"use strict";module.exports=function generate__formatLimit(j,o,c){var C=" ";var F=j.level;var l=j.dataLevel;var D=j.schema[o];var h=j.schemaPath+j.util.getProperty(o);var r=j.errSchemaPath+"/"+o;var n=!j.opts.allErrors;var b;var f="data"+(l||"");var g="valid"+F;C+="var "+(g)+" = undefined;";if(j.opts.format===false){C+=" "+(g)+" = true; ";return C}var y=j.schema.format,m=j.opts.$data&&y.$data,e="";if(m){var x=j.util.getData(y.$data,l,j.dataPathArr),E="format"+F,s="compare"+F;C+=" var "+(E)+" = formats["+(x)+"] , "+(s)+" = "+(E)+" && "+(E)+".compare;"}else{var E=j.formats[y];if(!(E&&E.compare)){C+="  "+(g)+" = true; ";return C}var s="formats"+j.util.getProperty(y)+".compare"}var t=o=="formatMaximum",p="formatExclusive"+(t?"Maximum":"Minimum"),q=j.schema[p],w=j.opts.$data&&q&&q.$data,k=t?"<":">",v="result"+F;var d=j.opts.$data&&D&&D.$data,B;if(d){C+=" var schema"+(F)+" = "+(j.util.getData(D.$data,l,j.dataPathArr))+"; ";B="schema"+F}else{B=D}if(w){var u=j.util.getData(q.$data,l,j.dataPathArr),G="exclusive"+F,i="op"+F,A="' + "+i+" + '";C+=" var schemaExcl"+(F)+" = "+(u)+"; ";u="schemaExcl"+F;C+=" if (typeof "+(u)+" != 'boolean' && "+(u)+" !== undefined) { "+(g)+" = false; ";var b=p;var z=z||[];z.push(C);C="";if(j.createErrors!==false){C+=" { keyword: '"+(b||"_formatExclusiveLimit")+"' , dataPath: (dataPath || '') + "+(j.errorPath)+" , schemaPath: "+(j.util.toQuotedString(r))+" , params: {} ";if(j.opts.messages!==false){C+=" , message: '"+(p)+" should be boolean' "}if(j.opts.verbose){C+=" , schema: validate.schema"+(h)+" , parentSchema: validate.schema"+(j.schemaPath)+" , data: "+(f)+" "}C+=" } "}else{C+=" {} "}var a=C;C=z.pop();if(!j.compositeRule&&n){if(j.async){C+=" throw new ValidationError(["+(a)+"]); "}else{C+=" validate.errors = ["+(a)+"]; return false; "}}else{C+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}C+=" }  ";if(n){e+="}";C+=" else { "}if(d){C+=" if ("+(B)+" === undefined) "+(g)+" = true; else if (typeof "+(B)+" != 'string') "+(g)+" = false; else { ";e+="}"}if(m){C+=" if (!"+(s)+") "+(g)+" = true; else { ";e+="}"}C+=" var "+(v)+" = "+(s)+"("+(f)+",  ";if(d){C+=""+(B)}else{C+=""+(j.util.toQuotedString(D))}C+=" ); if ("+(v)+" === undefined) "+(g)+" = false; var "+(G)+" = "+(u)+" === true; if ("+(g)+" === undefined) { "+(g)+" = "+(G)+" ? "+(v)+" "+(k)+" 0 : "+(v)+" "+(k)+"= 0; } if (!"+(g)+") var op"+(F)+" = "+(G)+" ? '"+(k)+"' : '"+(k)+"=';"}else{var G=q===true,A=k;if(!G){A+="="}var i="'"+A+"'";if(d){C+=" if ("+(B)+" === undefined) "+(g)+" = true; else if (typeof "+(B)+" != 'string') "+(g)+" = false; else { ";e+="}"}if(m){C+=" if (!"+(s)+") "+(g)+" = true; else { ";e+="}"}C+=" var "+(v)+" = "+(s)+"("+(f)+",  ";if(d){C+=""+(B)}else{C+=""+(j.util.toQuotedString(D))}C+=" ); if ("+(v)+" === undefined) "+(g)+" = false; if ("+(g)+" === undefined) "+(g)+" = "+(v)+" "+(k);if(!G){C+="="}C+=" 0;"}C+=""+(e)+"if (!"+(g)+") { ";var b=o;var z=z||[];z.push(C);C="";if(j.createErrors!==false){C+=" { keyword: '"+(b||"_formatLimit")+"' , dataPath: (dataPath || '') + "+(j.errorPath)+" , schemaPath: "+(j.util.toQuotedString(r))+" , params: { comparison: "+(i)+", limit:  ";if(d){C+=""+(B)}else{C+=""+(j.util.toQuotedString(D))}C+=" , exclusive: "+(G)+" } ";if(j.opts.messages!==false){C+=" , message: 'should be "+(A)+' "';if(d){C+="' + "+(B)+" + '"}else{C+=""+(j.util.escapeQuotes(D))}C+="\"' "}if(j.opts.verbose){C+=" , schema:  ";if(d){C+="validate.schema"+(h)}else{C+=""+(j.util.toQuotedString(D))}C+="         , parentSchema: validate.schema"+(j.schemaPath)+" , data: "+(f)+" "}C+=" } "}else{C+=" {} "}var a=C;C=z.pop();if(!j.compositeRule&&n){if(j.async){C+=" throw new ValidationError(["+(a)+"]); "}else{C+=" validate.errors = ["+(a)+"]; return false; "}}else{C+=" var err = "+(a)+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}C+="}";return C};