/*!
 * micromatch <https://github.com/jonschlinkert/micromatch>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */
;"use strict";var expand=require("./lib/expand");var utils=require("./lib/utils");function micromatch(g,d,f){if(!g||!d){return[]}f=f||{};if(typeof f.cache==="undefined"){f.cache=true}if(!Array.isArray(d)){return match(g,d,f)}var a=d.length,c=0;var e=[],b=[];while(a--){var h=d[c++];if(typeof h==="string"&&h.charCodeAt(0)===33){e.push.apply(e,match(g,h.slice(1),f))}else{b.push.apply(b,match(g,h,f))}}return utils.diff(b,e)}function match(b,k,a){if(utils.typeOf(b)!=="string"&&!Array.isArray(b)){throw new Error(msg("match","files","a string or array"))}b=utils.arrayify(b);a=a||{};var d=a.negate||false;var l=k;if(typeof k==="string"){d=k.charAt(0)==="!";if(d){k=k.slice(1)}if(a.nonegate===true){d=false}}var f=matcher(k,a);var g=b.length,e=0;var j=[];while(e<g){var c=b[e++];var h=utils.unixify(c,a);if(!f(h)){continue}j.push(h)}if(j.length===0){if(a.failglob===true){throw new Error('micromatch.match() found no matches for: "'+l+'".')}if(a.nonull||a.nullglob){j.push(utils.unescapeGlob(l))}}if(d){j=utils.diff(b,j)}if(a.ignore&&a.ignore.length){k=a.ignore;a=utils.omit(a,["ignore"]);j=utils.diff(j,micromatch(j,k,a))}if(a.nodupes){return utils.unique(j)}return j}function filter(c,d){if(!Array.isArray(c)&&typeof c!=="string"){throw new TypeError(msg("filter","patterns","a string or array"))}c=utils.arrayify(c);var a=c.length,b=0;var e=Array(a);while(b<a){e[b]=matcher(c[b++],d)}return function(g){if(g==null){return[]}var f=e.length,j=0;var h=true;g=utils.unixify(g,d);while(j<f){var k=e[j++];if(!k(g)){h=false;break}}return h}}function isMatch(a,c,b){if(typeof a!=="string"){throw new TypeError(msg("isMatch","filepath","a string"))}a=utils.unixify(a,b);if(utils.typeOf(c)==="object"){return matcher(a,c)}return matcher(c,b)(a)}function contains(a,c,b){if(typeof a!=="string"){throw new TypeError(msg("contains","pattern","a string"))}b=b||{};b.contains=(c!=="");a=utils.unixify(a,b);if(b.contains&&!utils.isGlob(c)){return a.indexOf(c)!==-1}return matcher(c,b)(a)}function any(b,d,e){if(!Array.isArray(d)&&typeof d!=="string"){throw new TypeError(msg("any","patterns","a string or array"))}d=utils.arrayify(d);var a=d.length;b=utils.unixify(b,e);while(a--){var c=matcher(d[a],e);if(c(b)){return true}}return false}function matchKeys(e,f,a){if(utils.typeOf(e)!=="object"){throw new TypeError(msg("matchKeys","first argument","an object"))}var d=matcher(f,a);var c={};for(var b in e){if(e.hasOwnProperty(b)&&d(b)){c[b]=e[b]}}return c}function matcher(c,b){if(typeof c==="function"){return c}if(c instanceof RegExp){return function(d){return c.test(d)}}if(typeof c!=="string"){throw new TypeError(msg("matcher","pattern","a string, regex, or function"))}c=utils.unixify(c,b);if(!utils.isGlob(c)){return utils.matchPath(c,b)}var a=makeRe(c,b);if(b&&b.matchBase){return utils.hasFilename(a,b)}return function(d){d=utils.unixify(d,b);return a.test(d)}}function toRegex(g,c){var f=Object.create(c||{});var a=f.flags||"";if(f.nocase&&a.indexOf("i")===-1){a+="i"}var b=expand(g,f);f.negated=f.negated||b.negated;f.negate=f.negated;g=wrapGlob(b.pattern,f);var d;try{d=new RegExp(g,a);return d}catch(e){e.reason="micromatch invalid regex: ("+d+")";if(f.strict){throw new SyntaxError(e)}}return/$^/}function wrapGlob(d,a){var b=(a&&!a.contains)?"^":"";var c=(a&&!a.contains)?"$":"";d=("(?:"+d+")"+c);if(a&&a.negate){return b+("(?!^"+d+").*$")}return b+d}function makeRe(b,a){if(utils.typeOf(b)!=="string"){throw new Error(msg("makeRe","glob","a string"))}return utils.cache(toRegex,b,a)}function msg(c,b,a){return"micromatch."+c+"(): "+b+" should be "+a+"."}micromatch.any=any;micromatch.braces=micromatch.braceExpand=utils.braces;micromatch.contains=contains;micromatch.expand=expand;micromatch.filter=filter;micromatch.isMatch=isMatch;micromatch.makeRe=makeRe;micromatch.match=match;micromatch.matcher=matcher;micromatch.matchKeys=matchKeys;module.exports=micromatch;