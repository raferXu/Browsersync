var inherits=require("inherits");var Reporter=require("../base").Reporter;var Buffer=require("buffer").Buffer;function DecoderBuffer(b,a){Reporter.call(this,a);if(!Buffer.isBuffer(b)){this.error("Input not Buffer");return}this.base=b;this.offset=0;this.length=b.length}inherits(DecoderBuffer,Reporter);exports.DecoderBuffer=DecoderBuffer;DecoderBuffer.prototype.save=function save(){return{offset:this.offset,reporter:Reporter.prototype.save.call(this)}};DecoderBuffer.prototype.restore=function restore(b){var a=new DecoderBuffer(this.base);a.offset=b.offset;a.length=this.offset;this.offset=b.offset;Reporter.prototype.restore.call(this,b.reporter);return a};DecoderBuffer.prototype.isEmpty=function isEmpty(){return this.offset===this.length};DecoderBuffer.prototype.readUInt8=function readUInt8(a){if(this.offset+1<=this.length){return this.base.readUInt8(this.offset++,true)}else{return this.error(a||"DecoderBuffer overrun")}};DecoderBuffer.prototype.skip=function skip(b,a){if(!(this.offset+b<=this.length)){return this.error(a||"DecoderBuffer overrun")}var c=new DecoderBuffer(this.base);c._reporterState=this._reporterState;c.offset=this.offset;c.length=this.offset+b;this.offset+=b;return c};DecoderBuffer.prototype.raw=function raw(a){return this.base.slice(a?a.offset:this.offset,this.length)};function EncoderBuffer(b,a){if(Array.isArray(b)){this.length=0;this.value=b.map(function(c){if(!(c instanceof EncoderBuffer)){c=new EncoderBuffer(c,a)}this.length+=c.length;return c},this)}else{if(typeof b==="number"){if(!(0<=b&&b<=255)){return a.error("non-byte EncoderBuffer value")}this.value=b;this.length=1}else{if(typeof b==="string"){this.value=b;this.length=Buffer.byteLength(b)}else{if(Buffer.isBuffer(b)){this.value=b;this.length=b.length}else{return a.error("Unsupported type: "+typeof b)}}}}}exports.EncoderBuffer=EncoderBuffer;EncoderBuffer.prototype.join=function join(a,b){if(!a){a=new Buffer(this.length)}if(!b){b=0}if(this.length===0){return a}if(Array.isArray(this.value)){this.value.forEach(function(c){c.join(a,b);b+=c.length})}else{if(typeof this.value==="number"){a[b]=this.value}else{if(typeof this.value==="string"){a.write(this.value,b)}else{if(Buffer.isBuffer(this.value)){this.value.copy(a,b)}}}b+=this.length}return a};