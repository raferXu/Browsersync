var inherits=require("inherits");var Buffer=require("buffer").Buffer;var asn1=require("../../asn1");var base=asn1.base;var der=asn1.constants.der;function DEREncoder(a){this.enc="der";this.name=a.name;this.entity=a;this.tree=new DERNode();this.tree._init(a.body)}module.exports=DEREncoder;DEREncoder.prototype.encode=function encode(b,a){return this.tree._encode(b,a).join()};function DERNode(a){base.Node.call(this,"der",a)}inherits(DERNode,base.Node);DERNode.prototype._encodeComposite=function encodeComposite(k,f,h,g){var b=encodeTag(k,f,h,this.reporter);if(g.length<128){var e=new Buffer(2);e[0]=b;e[1]=g.length;return this._createEncoderBuffer([e,g])}var a=1;for(var d=g.length;d>=256;d>>=8){a++}var e=new Buffer(1+1+a);e[0]=b;e[1]=128|a;for(var d=1+a,c=g.length;c>0;d--,c>>=8){e[d]=c&255}return this._createEncoderBuffer([e,g])};DERNode.prototype._encodeStr=function encodeStr(d,a){if(a==="bitstr"){return this._createEncoderBuffer([d.unused|0,d.data])}else{if(a==="bmpstr"){var b=new Buffer(d.length*2);for(var c=0;c<d.length;c++){b.writeUInt16BE(d.charCodeAt(c),c*2)}return this._createEncoderBuffer(b)}else{if(a==="numstr"){if(!this._isNumstr(d)){return this.reporter.error("Encoding of string type: numstr supports only digits and space")}return this._createEncoderBuffer(d)}else{if(a==="printstr"){if(!this._isPrintstr(d)){return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark")}return this._createEncoderBuffer(d)}else{if(/str$/.test(a)){return this._createEncoderBuffer(d)}else{if(a==="objDesc"){return this._createEncoderBuffer(d)}else{return this.reporter.error("Encoding of string type: "+a+" unsupported")}}}}}}};DERNode.prototype._encodeObjid=function encodeObjid(h,b,f){if(typeof h==="string"){if(!b){return this.reporter.error("string objid given, but no values map found")}if(!b.hasOwnProperty(h)){return this.reporter.error("objid not found in values map")}h=b[h].split(/[\s\.]+/g);for(var d=0;d<h.length;d++){h[d]|=0}}else{if(Array.isArray(h)){h=h.slice();for(var d=0;d<h.length;d++){h[d]|=0}}}if(!Array.isArray(h)){return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(h))}if(!f){if(h[1]>=40){return this.reporter.error("Second objid identifier OOB")}h.splice(0,2,h[0]*40+h[1])}var c=0;for(var d=0;d<h.length;d++){var e=h[d];for(c++;e>=128;e>>=7){c++}}var a=new Buffer(c);var g=a.length-1;for(var d=h.length-1;d>=0;d--){var e=h[d];a[g--]=e&127;while((e>>=7)>0){a[g--]=128|(e&127)}}return this._createEncoderBuffer(a)};function two(a){if(a<10){return"0"+a}else{return a}}DERNode.prototype._encodeTime=function encodeTime(c,a){var d;var b=new Date(c);if(a==="gentime"){d=[two(b.getFullYear()),two(b.getUTCMonth()+1),two(b.getUTCDate()),two(b.getUTCHours()),two(b.getUTCMinutes()),two(b.getUTCSeconds()),"Z"].join("")}else{if(a==="utctime"){d=[two(b.getFullYear()%100),two(b.getUTCMonth()+1),two(b.getUTCDate()),two(b.getUTCHours()),two(b.getUTCMinutes()),two(b.getUTCSeconds()),"Z"].join("")}else{this.reporter.error("Encoding "+a+" time is not supported yet")}}return this._encodeStr(d,"octstr")};DERNode.prototype._encodeNull=function encodeNull(){return this._createEncoderBuffer("")};DERNode.prototype._encodeInt=function encodeInt(d,b){if(typeof d==="string"){if(!b){return this.reporter.error("String int or enum given, but no values map")}if(!b.hasOwnProperty(d)){return this.reporter.error("Values map doesn't contain: "+JSON.stringify(d))}d=b[d]}if(typeof d!=="number"&&!Buffer.isBuffer(d)){var a=d.toArray();if(!d.sign&&a[0]&128){a.unshift(0)}d=new Buffer(a)}if(Buffer.isBuffer(d)){var f=d.length;if(d.length===0){f++}var c=new Buffer(f);d.copy(c);if(d.length===0){c[0]=0}return this._createEncoderBuffer(c)}if(d<128){return this._createEncoderBuffer(d)}if(d<256){return this._createEncoderBuffer([0,d])}var f=1;for(var e=d;e>=256;e>>=8){f++}var c=new Array(f);for(var e=c.length-1;e>=0;e--){c[e]=d&255;d>>=8}if(c[0]&128){c.unshift(0)}return this._createEncoderBuffer(new Buffer(c))};DERNode.prototype._encodeBool=function encodeBool(a){return this._createEncoderBuffer(a?255:0)};DERNode.prototype._use=function use(a,b){if(typeof a==="function"){a=a(b)}return a._getEncoder("der").tree};DERNode.prototype._skipDefault=function skipDefault(b,a,d){var f=this._baseState;var c;if(f["default"]===null){return false}var e=b.join();if(f.defaultBuffer===undefined){f.defaultBuffer=this._encodeValue(f["default"],a,d).join()}if(e.length!==f.defaultBuffer.length){return false}for(c=0;c<e.length;c++){if(e[c]!==f.defaultBuffer[c]){return false}}return true};function encodeTag(a,c,b,d){var e;if(a==="seqof"){a="seq"}else{if(a==="setof"){a="set"}}if(der.tagByName.hasOwnProperty(a)){e=der.tagByName[a]}else{if(typeof a==="number"&&(a|0)===a){e=a}else{return d.error("Unknown tag: "+a)}}if(e>=31){return d.error("Multi-octet tag encoding unsupported")}if(!c){e|=32}e|=(der.tagClassByName[b||"universal"]<<6);return e};