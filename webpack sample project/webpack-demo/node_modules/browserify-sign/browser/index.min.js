var createHash=require("create-hash");var stream=require("stream");var inherits=require("inherits");var sign=require("./sign");var verify=require("./verify");var algorithms=require("./algorithms.json");Object.keys(algorithms).forEach(function(a){algorithms[a].id=new Buffer(algorithms[a].id,"hex");algorithms[a.toLowerCase()]=algorithms[a]});function Sign(a){stream.Writable.call(this);var b=algorithms[a];if(!b){throw new Error("Unknown message digest")}this._hashType=b.hash;this._hash=createHash(b.hash);this._tag=b.id;this._signType=b.sign}inherits(Sign,stream.Writable);Sign.prototype._write=function _write(c,b,a){this._hash.update(c);a()};Sign.prototype.update=function update(b,a){if(typeof b==="string"){b=new Buffer(b,a)}this._hash.update(b);return this};Sign.prototype.sign=function signMethod(b,a){this.end();var c=this._hash.digest();var d=sign(c,b,this._hashType,this._signType,this._tag);return a?d.toString(a):d};function Verify(a){stream.Writable.call(this);var b=algorithms[a];if(!b){throw new Error("Unknown message digest")}this._hash=createHash(b.hash);this._tag=b.id;this._signType=b.sign}inherits(Verify,stream.Writable);Verify.prototype._write=function _write(c,b,a){this._hash.update(c);a()};Verify.prototype.update=function update(b,a){if(typeof b==="string"){b=new Buffer(b,a)}this._hash.update(b);return this};Verify.prototype.verify=function verifyMethod(b,d,a){if(typeof d==="string"){d=new Buffer(d,a)}this.end();var c=this._hash.digest();return verify(d,c,b,this._signType,this._tag)};function createSign(a){return new Sign(a)}function createVerify(a){return new Verify(a)}module.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify};