var createHmac=require("create-hmac");var crt=require("browserify-rsa");var EC=require("elliptic").ec;var BN=require("bn.js");var parseKeys=require("parse-asn1");var curves=require("./curves.json");function sign(e,h,b,f,k){var j=parseKeys(h);if(j.curve){if(f!=="ecdsa"&&f!=="ecdsa/rsa"){throw new Error("wrong private key type")}return ecSign(e,j)}else{if(j.type==="dsa"){if(f!=="dsa"){throw new Error("wrong private key type")}return dsaSign(e,j,b)}else{if(f!=="rsa"&&f!=="ecdsa/rsa"){throw new Error("wrong private key type")}}}e=Buffer.concat([k,e]);var g=j.modulus.byteLength();var a=[0,1];while(e.length+a.length+1<g){a.push(255)}a.push(0);var d=-1;while(++d<e.length){a.push(e[d])}var c=crt(a,j);return c}function ecSign(e,b){var d=curves[b.curve.join(".")];if(!d){throw new Error("unknown curve "+b.curve.join("."))}var f=new EC(d);var c=f.keyFromPrivate(b.privateKey);var a=c.sign(e);return new Buffer(a.toDER())}function dsaSign(e,m,f){var j=m.params.priv_key;var c=m.params.p;var b=m.params.q;var h=m.params.g;var a=new BN(0);var d;var l=bits2int(e,b).mod(b);var n=false;var i=getKey(j,b,e,f);while(n===false){d=makeKey(b,i,f);a=makeR(h,d,c,b);n=d.invm(b).imul(l.add(j.mul(a))).mod(b);if(n.cmpn(0)===0){n=false;a=new BN(0)}}return toDER(a,n)}function toDER(d,b){d=d.toArray();b=b.toArray();if(d[0]&128){d=[0].concat(d)}if(b[0]&128){b=[0].concat(b)}var c=d.length+b.length+4;var a=[48,c,2,d.length];a=a.concat(d,[2,b.length],b);return new Buffer(a)}function getKey(g,a,d,f){g=new Buffer(g.toArray());if(g.length<a.byteLength()){var b=new Buffer(a.byteLength()-g.length);b.fill(0);g=Buffer.concat([b,g])}var e=d.length;var h=bits2octets(d,a);var i=new Buffer(e);i.fill(1);var c=new Buffer(e);c.fill(0);c=createHmac(f,c).update(i).update(new Buffer([0])).update(g).update(h).digest();i=createHmac(f,c).update(i).digest();c=createHmac(f,c).update(i).update(new Buffer([1])).update(g).update(h).digest();i=createHmac(f,c).update(i).digest();return{k:c,v:i}}function bits2int(b,d){var c=new BN(b);var a=(b.length<<3)-d.bitLength();if(a>0){c.ishrn(a)}return c}function bits2octets(d,c){d=bits2int(d,c);d=d.mod(c);var b=new Buffer(d.toArray());if(b.length<c.byteLength()){var a=new Buffer(c.byteLength()-b.length);a.fill(0);b=Buffer.concat([a,b])}return b}function makeKey(d,c,e){var b;var a;do{b=new Buffer(0);while(b.length*8<d.bitLength()){c.v=createHmac(e,c.k).update(c.v).digest();b=Buffer.concat([b,c.v])}a=bits2int(b,d);c.k=createHmac(e,c.k).update(c.v).update(new Buffer([0])).digest();c.v=createHmac(e,c.k).update(c.v).digest()}while(a.cmp(d)!==-1);return a}function makeR(b,a,d,c){return b.toRed(BN.mont(d)).redPow(a).fromRed().mod(c)}module.exports=sign;module.exports.getKey=getKey;module.exports.makeKey=makeKey;