var test=require("tape");var url=require("url");var location="http://localhost:8081/foo/123";var noop=function(){};global.location=url.parse(location);global.XMLHttpRequest=function(){this.open=noop;this.send=noop;this.withCredentials=false};var moduleName=require.resolve("../../");delete require.cache[moduleName];var http=require("../../");test("Test simple url string",function(b){var d={path:"/api/foo"};var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"http://localhost:8081/api/foo","Url should be correct");b.end()});test("Test full url object",function(b){var d={host:"localhost:8081",hostname:"localhost",href:"http://localhost:8081/api/foo?bar=baz",method:"GET",path:"/api/foo?bar=baz",pathname:"/api/foo",port:"8081",protocol:"http:",query:"bar=baz",search:"?bar=baz",slashes:true};var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"http://localhost:8081/api/foo?bar=baz","Url should be correct");b.end()});test("Test alt protocol",function(b){var d={protocol:"foo:",hostname:"localhost",port:"3000",path:"/bar"};var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"foo://localhost:3000/bar","Url should be correct");b.end()});test("Test page with 'file:' protocol",function(c){var f={hostname:"localhost",port:3000,path:"/bar"};var a="file:///home/me/stuff/index.html";var e=global.location;global.location=url.parse(a);var d=http.get(f,noop);global.location=e;var b=url.resolve(a,d._opts.url);c.equal(b,"http://localhost:3000/bar","Url should be correct");c.end()});test("Test string as parameters",function(b){var d="/api/foo";var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"http://localhost:8081/api/foo","Url should be correct");b.end()});test("Test withCredentials param",function(b){var a="/api/foo";var c=http.get({url:a,withCredentials:false},noop);b.equal(c._xhr.withCredentials,false,"xhr.withCredentials should be false");var c=http.get({url:a,withCredentials:true},noop);b.equal(c._xhr.withCredentials,true,"xhr.withCredentials should be true");var c=http.get({url:a},noop);b.equal(c._xhr.withCredentials,false,"xhr.withCredentials should be false");b.end()});test("Test ipv6 address",function(b){var d="http://[::1]:80/foo";var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"http://[::1]:80/foo","Url should be correct");b.end()});test("Test relative path in url",function(b){var d={path:"./bar"};var c=http.get(d,noop);var a=url.resolve(location,c._opts.url);b.equal(a,"http://localhost:8081/foo/bar","Url should be correct");b.end()});test("Cleanup",function(a){delete global.location;delete global.XMLHttpRequest;delete require.cache[moduleName];a.end()});