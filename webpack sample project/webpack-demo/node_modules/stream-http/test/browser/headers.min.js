var Buffer=require("buffer").Buffer;var fs=require("fs");var test=require("tape");var UAParser=require("ua-parser-js");var http=require("../..");test("headers",function(a){http.get({path:"/testHeaders?Response-Header=bar&Response-Header-2=BAR2",headers:{"Test-Request-Header":"foo","Test-Request-Header-2":"FOO2"}},function(f){var h=[];for(var e=0;e<f.rawHeaders.length;e+=2){var d=f.rawHeaders[e].toLowerCase();if(d.indexOf("test-")===0){h.push(d,f.rawHeaders[e+1])}}var c=h.indexOf("test-response-header");a.ok(c>=0,"raw response header 1 present");a.equal(h[c+1],"bar","raw response header value 1");var g=h.indexOf("test-response-header-2");a.ok(g>=0,"raw response header 2 present");a.equal(h[g+1],"BAR2","raw response header value 2");a.equal(h.length,4,"correct number of raw headers");a.equal(f.headers["test-response-header"],"bar","response header 1");a.equal(f.headers["test-response-header-2"],"BAR2","response header 2");var b=[];f.on("end",function(){var i=JSON.parse(Buffer.concat(b).toString());a.equal(i["test-request-header"],"foo","request header 1");a.equal(i["test-request-header-2"],"FOO2","request header 2");a.equal(Object.keys(i).length,2,"correct number of request headers");a.end()});f.on("data",function(i){b.push(i)})})});test("arrays of headers",function(a){http.get({path:"/testHeaders?Response-Header=bar&Response-Header=BAR2",headers:{"Test-Request-Header":["foo","FOO2"]}},function(e){var f=[];for(var d=0;d<e.rawHeaders.length;d+=2){var c=e.rawHeaders[d].toLowerCase();if(c.indexOf("test-")===0){f.push(c,e.rawHeaders[d+1])}}a.equal(f[0],"test-response-header","raw response header present");a.equal(f[1],"bar, BAR2","raw response header value");a.equal(f.length,2,"correct number of raw headers");a.equal(e.headers["test-response-header"],"bar, BAR2","response header");var b=[];e.on("end",function(){var g=JSON.parse(Buffer.concat(b).toString());a.equal(g["test-request-header"],"foo,FOO2","request headers");a.equal(Object.keys(g).length,1,"correct number of request headers");a.end()});e.on("data",function(g){b.push(g)})})});test("content-type response header",function(a){http.get("/testHeaders",function(b){a.equal(b.headers["content-type"],"application/json","content-type preserved");a.end()})});var browser=(new UAParser()).setUA(navigator.userAgent).getBrowser();var browserName=browser.name;var browserVersion=browser.major;var browserMinorVersion=browser.minor||0;var wrongMimeType=((browserName==="Chrome"&&browserVersion<=42)||((browserName==="Safari"||browserName==="Mobile Safari")&&browserVersion>=6&&(browserVersion<10||(browserVersion==10&&browserMinorVersion==0)))||(browserName==="Android Browser"));test("content-type response header with forced streaming",function(a){http.get({path:"/testHeaders",mode:"prefer-streaming"},function(c){if(wrongMimeType){var d=c.headers["content-type"];var b=(d==="text/plain; charset=x-user-defined")||(d==="application/json");a.ok(b,"content-type either preserved or overridden")}else{a.equal(c.headers["content-type"],"application/json","content-type preserved")}a.end()})});