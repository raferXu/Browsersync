"use strict";const path=require("path");const BasicEvaluatedExpression=require("./BasicEvaluatedExpression");const ConstDependency=require("./dependencies/ConstDependency");const UnsupportedFeatureWarning=require("./UnsupportedFeatureWarning");const ParserHelpers=exports;ParserHelpers.addParsedVariableToModule=function(d,a,c){if(!d.state.current.addVariable){return false}var b=[];d.parse(c,{current:{addDependency:function(e){e.userRequest=a;b.push(e)}},module:d.state.module});d.state.current.addVariable(a,c,b);return true};ParserHelpers.requireFileAsExpression=function(c,a){var b=path.relative(c,a);if(!/^[A-Z]:/i.test(b)){b="./"+b.replace(/\\/g,"/")}return"require("+JSON.stringify(b)+")"};ParserHelpers.toConstantDependency=function(b){return function a(d){var c=new ConstDependency(b,d.range);c.loc=d.loc;this.state.current.addDependency(c);return true}};ParserHelpers.evaluateToString=function(a){return function b(c){return new BasicEvaluatedExpression().setString(a).setRange(c.range)}};ParserHelpers.evaluateToBoolean=function(b){return function a(c){return new BasicEvaluatedExpression().setBoolean(b).setRange(c.range)}};ParserHelpers.evaluateToIdentifier=function(b,c){return function a(d){let evex=new BasicEvaluatedExpression().setIdentifier(b).setRange(d.range);if(c===true){evex=evex.setTruthy()}else{if(c===false){evex=evex.setFalsy()}}return evex}};ParserHelpers.expressionIsUnsupported=function(a){return function b(d){var c=new ConstDependency("(void 0)",d.range);c.loc=d.loc;this.state.current.addDependency(c);if(!this.state.module){return}this.state.module.warnings.push(new UnsupportedFeatureWarning(this.state.module,a));return true}};ParserHelpers.skipTraversal=function skipTraversal(){return true};ParserHelpers.approve=function approve(){return true};