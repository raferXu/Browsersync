var jumpProjectFlag=false;(function(i,d,f){var h="";var e="/";var c;function v(x){console.log("_userProgress函数参数projectname: "+x);console.log(x);console.log("_userProgress发送ajax的url：url + 'token/project/' + projectname + '/userprogress'");return d.ajax({url:e+"token/project/"+x+"/userprogress",beforeSend:function(y){if(h===""){return}else{y.setRequestHeader("Authorization",h)}},success:function(y){console.log("url + 'token/project/' + projectname + '/userprogress' success");console.log(y)},error:function(y){console.log("url + 'token/project/' + projectname + '/userprogress' error");console.log(y)},cache:false,dataType:"json"})}function l(x){console.log("_fetchProject函数参数projectname: "+x);console.log(x);console.log("_fetchProject发送ajax的url: url + 'token/project'");return d.ajax({url:e+"token/project",beforeSend:function(y){if(h===""){return}else{y.setRequestHeader("Authorization",h)}},success:function(y){console.log("url + 'token/project' success");console.log(y)},error:function(y){console.log("url + 'token/project' error");console.log(y)},data:"all=1&short_name="+x,dataType:"json"})}function n(x,y){console.log("_fetchNewTask函数第一参数projectId: "+x+", 第二参数offset: "+y);console.log(x);console.log(y);console.log("_fetchNewTask发送ajax的url: url + 'token/project/' + projectId + '/newtask'");y=y||0;return d.ajax({url:e+"token/project/"+x+"/newtask",beforeSend:function(z){if(h===""){return}else{z.setRequestHeader("Authorization",h)}},success:function(z){console.log("url + 'token/project/' + projectId + '/newtask' success");console.log(z);if(!z.id){jumpProjectFlag=true}},error:function(z){console.log("url + 'token/project/' + projectId + '/newtask' error");console.log(z)},data:"offset="+y,cache:false,dataType:"json"})}function b(x){console.log("_fetchTask函数参数taskId: "+x);console.log(x);console.log("_fetchTask发送ajax的url: url + 'token/task/' + taskId");return d.ajax({url:e+"token/task/"+x,beforeSend:function(y){if(h===""){return}else{y.setRequestHeader("Authorization",h)}},success:function(y){console.log("url + 'token/task/' + taskId success");console.log(y)},error:function(y){console.log("url + 'token/task/' + taskId error");console.log(y);if(y.status==401){console.log("url + 'token/task/' + taskId接口返回401");jobTask.notifyToRelogin()}},cache:false,dataType:"json"})}function w(x){console.log("_saveTaskRun函数参数taskrun: "+x);console.log(x);console.log("_saveTaskRun发送ajax的url： url + 'token/taskrun'");return d.ajax({type:"POST",url:e+"token/taskrun",beforeSend:function(y){if(h===""){return}else{y.setRequestHeader("Authorization",h)}},success:function(y){console.log("url + 'token/taskrun' success");console.log(y)},error:function(y){console.log("url + 'token/taskrun' error");console.log(y)},dataType:"json",contentType:"application/json",data:x})}function r(x){console.log("_getProject函数参数projectname: "+x);console.log(x);return l(x).then(function(y){return y[0]})}function s(x){console.log("_getNewTask函数参数project: "+x);console.log(x);return n(x.id).then(t.bind(f,x))}function t(y,x){console.log("_addProjectDescription函数第一参数project: "+y+", 第二参数task："+x);console.log(y);console.log(x);return{question:y.description,task:x}}function m(x,y){console.log("_addAnswerToTask函数第一参数task: "+x+", 第二参数answer："+y);console.log(x);console.log(y);x.answer=y;return x}function u(z,x){console.log("_createTaskRun函数第一参数answer: "+z+", 第二参数task："+x);console.log(z);console.log(x);x=m(x,z);var y={project_id:x.project_id,task_id:x.id,info:x.answer};y=JSON.stringify(y);return w(y).then(function(A){return A})}function a(y){console.log("_getCurrentTaskId函数参数url: "+y);pathArray=y.split("/");if(y.indexOf("/task/")!=-1){var x=pathArray.length;var z=0;for(z=0;z<x;z++){if(pathArray[z]=="task"){return pathArray[z+1]}}}return false}var p=function(y,x){console.log("_taskLoaded函数第一参数task: "+y+", 第二参数deferred："+x);console.log(y);console.log(x);x.resolve(y)};var k=function(y,x){console.log("_presentTask函数第一参数task: "+y+", 第二参数deferred："+x);console.log(y);console.log(x);x.resolve(y)};function g(x){console.log("_setUserTaskLoaded函数参数userFunc: "+x);console.log(x);p=x}function q(x){console.log("_setUserPresentTask函数参数userFunc: "+x);console.log(x);k=x}function j(y,x){console.log("_resolveNextTaskLoaded函数第一参数task: "+y+", 第二参数deferred："+x);console.log(y);console.log(x);var z=d.Deferred();p(y,z);z.done(function(A){x.resolve(A)})}function o(x,y){console.log("_run函数第一参数projectname: "+x+", 第二参数_window："+y);console.log(x);console.log(y);y=y||window;l(x).done(function(B){B=B[0];function A(G,E){console.log("getNextTask函数第一参数offset: "+G+", 第二参数previousTask："+E);console.log(G);console.log(E);G=G||0;var D=d.Deferred();var C=c;(C&&(E===f))?console.log("(taskId && (previousTask === undefined))最终值为true，调用了_fetchNewTask"):console.log("(taskId && (previousTask === undefined))最终值为false，调用了_fetchNewTask");console.log("taskId: "+C);console.log("previousTask === undefined: "+(E===f));var F=(C&&(E===f))?n(B.id,0):n(B.id,1);F.done(function(H){if(E&&H.id===E.id){console.log("previousTask && task.id === previousTask.id 的最终值为true，先调用了_fetchNewTask后才去调用_resolveNextTaskLoaded");var I=n(B.id,G).done(function(J){j(J,D)})}else{console.log("previousTask && task.id === previousTask.id 的最终值为false，直接调用_resolveNextTaskLoaded");j(H,D)}});return D.promise()}function z(D){console.log("loop函数的参数task: "+D);console.log(D);var E=A(1,D),C=d.Deferred(),F;if(D.id){c=D.id;if(e!="/"){F=e+"/project/"+x+"/task/"+D.id}else{F="/project/"+x+"/task/"+D.id}console.log(F)}k(D,C);d.when(E,C).done(z)}A(0,f).done(z)})}i.newTask=function(x){return r(x).then(s)};i.saveTask=function(y,z){console.log("pybossa.saveTask函数第一参数taskId: "+y+", 第二参数answer："+z);console.log(y);console.log(z);if(typeof(y)==="number"){console.log("taskId为number,所以调用了_fetchTask后才去调用_createTaskRun");return b(y).then(u.bind(f,z))}if(typeof(y)==="object"){console.log("taskId为object,所以直接调用_createTaskRun");var x=y;return u(z,x)}};i.getCurrentTaskId=function(x){console.log("pybossa.getCurrentTaskId函数参数urle: "+x);console.log(x);if(x!==f){return a(x)}else{return a(window.location.pathname)}};i.userProgress=function(x){console.log("pybossa.userProgress函数参数projectname: "+x);console.log(x);return v(x)};i.run=function(x,y){console.log("pybossa.run函数第一参数projectname: "+x+", 第二参数_window："+y);console.log(x);console.log(y);h=d("#token").data("token");console.log("token: "+h);return o(x,y)};i.taskLoaded=function(x){console.log("pybossa.taskLoaded函数参数userFunc: "+x);console.log(x);return g(x)};i.presentTask=function(x){console.log("pybossa.presentTask函数参数userFunc: "+x);console.log(x);return q(x)};i.setEndpoint=function(x){console.log("pybossa.setEndpoint函数参数endpoint: "+x);console.log(x);if(x.charAt(x.length-1)!="/"){x+="/"}e=x;return e};i.setToken=function(x){console.log("pybossa.setToken函数参数token_value: "+x);console.log(x);x=x}}(window.pybossa=window.pybossa||{},jQuery));