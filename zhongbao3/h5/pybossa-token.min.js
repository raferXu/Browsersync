var jumpProjectFlag=false;(function(h,c,e){var g="";var d="/";var b={id:""};function k(v){console.log("_fetchProject函数参数projectname: "+v);console.log(v);console.log("_fetchProject发送ajax的url: url + 'token/project'");return c.ajax({url:d+"token/project",beforeSend:function(w){if(g===""){return}else{w.setRequestHeader("Authorization",g)}},success:function(w){console.log("url + 'token/project' success");console.log(w)},error:function(w){console.log("url + 'token/project' error");console.log(w)},data:"all=1&short_name="+v,dataType:"json"})}function m(v,w){console.log("_fetchNewTask函数第一参数projectId: "+v+", 第二参数offset: "+w);console.log(v);console.log(w);console.log("_fetchNewTask发送ajax的url: url + 'token/project/' + projectId + '/newtask'");w=w||0;return c.ajax({url:d+"token/project/"+v+"/newtask",beforeSend:function(x){if(g===""){return}else{x.setRequestHeader("Authorization",g)}},success:function(x){console.log("url + 'token/project/' + projectId + '/newtask' success");console.log(x);if(!x.id){jumpProjectFlag=true}},error:function(x){console.log("url + 'token/project/' + projectId + '/newtask' error");console.log(x)},data:"offset="+w,cache:false,dataType:"json"})}function a(v){console.log("_fetchTask函数参数taskId: "+v);console.log(v);console.log("_fetchTask发送ajax的url: url + 'token/task/' + taskId");return c.ajax({url:d+"token/task/"+v,beforeSend:function(w){if(g===""){return}else{w.setRequestHeader("Authorization",g)}},success:function(w){console.log("url + 'token/task/' + taskId success");console.log(w)},error:function(w){console.log("url + 'token/task/' + taskId error");console.log(w);if(w.status==401){console.log("url + 'token/task/' + taskId接口返回401");jobTask.notifyToRelogin()}},cache:false,dataType:"json"})}function u(v){console.log("_saveTaskRun函数参数taskrun: "+v);console.log(v);console.log("_saveTaskRun发送ajax的url： url + 'token/taskrun'");return c.ajax({type:"POST",url:d+"token/taskrun",beforeSend:function(w){if(g===""){return}else{w.setRequestHeader("Authorization",g)}},success:function(w){console.log("url + 'token/taskrun' success");console.log(w)},error:function(w){console.log("url + 'token/taskrun' error");console.log(w)},dataType:"json",contentType:"application/json",data:v})}function q(v){console.log("_getProject函数参数projectname: "+v);console.log(v);return k(v).then(function(w){return w[0]})}function r(v){console.log("_getNewTask函数参数project: "+v);console.log(v);return m(v.id).then(s.bind(e,v))}function s(w,v){console.log("_addProjectDescription函数第一参数project: "+w+", 第二参数task："+v);console.log(w);console.log(v);return{question:w.description,task:v}}function l(v,w){console.log("_addAnswerToTask函数第一参数task: "+v+", 第二参数answer："+w);console.log(v);console.log(w);v.answer=w;return v}function t(x,v){console.log("_createTaskRun函数第一参数answer: "+x+", 第二参数task："+v);console.log(x);console.log(v);v=l(v,x);var w={project_id:v.project_id,task_id:v.id,info:v.answer};w=JSON.stringify(w);return u(w).then(function(y){return y})}var o=function(w,v){console.log("_taskLoaded函数第一参数task: "+w+", 第二参数deferred："+v);console.log(w);console.log(v);v.resolve(w)};var j=function(w,v){console.log("_presentTask函数第一参数task: "+w+", 第二参数deferred："+v);console.log(w);console.log(v);v.resolve(w)};function f(v){console.log("_setUserTaskLoaded函数参数userFunc: "+v);console.log(v);o=v}function p(v){console.log("_setUserPresentTask函数参数userFunc: "+v);console.log(v);j=v}function i(w,v){console.log("_resolveNextTaskLoaded函数第一参数task: "+w+", 第二参数deferred："+v);console.log(w);console.log(v);var x=c.Deferred();o(w,x);x.done(function(y){v.resolve(y)})}function n(v,w){console.log("_run函数第一参数projectname: "+v+", 第二参数_window："+w);console.log(v);console.log(w);w=w||window;k(v).done(function(z){z=z[0];function y(E,C){console.log("getNextTask函数第一参数offset: "+E+", 第二参数previousTask："+C);console.log(E);console.log(C);E=E||0;var B=c.Deferred();var A=b.id;(A&&(C===e))?console.log("(taskId && (previousTask === undefined))最终值为true，调用了_fetchNewTask"):console.log("(taskId && (previousTask === undefined))最终值为false，调用了_fetchNewTask");console.log("taskId: "+A);console.log("previousTask === undefined: "+(C===e));var D=(A&&(C===e))?m(z.id,0):m(z.id,E);D.done(function(F){console.log("previousTask: "+C);console.log(C);console.log("done后的参数task: "+F);console.log(F);console.log("task.id: "+F.id);if(C&&F.id===C.id){console.log("previousTask && task.id === previousTask.id 的最终值为true，先调用了_fetchNewTask后才去调用_resolveNextTaskLoaded");var G=m(z.id,E).done(function(H){i(H,B)})}else{console.log("previousTask && task.id === previousTask.id 的最终值为false，直接调用_resolveNextTaskLoaded");i(F,B)}});return B.promise()}function x(B){console.log("loop函数的参数task: "+B);console.log(B);var C=y(1,B),A=c.Deferred(),D;if(B.id){b.id=B.id}console.log("myTaskId.id被赋值了，为："+B.id);j(B,A);c.when(C,A).done(x)}y(0,e).done(x)})}h.saveTask=function(w,x){console.log("pybossa.saveTask函数第一参数taskId: "+w+", 第二参数answer："+x);console.log(w);console.log(x);if(typeof(w)==="number"){console.log("taskId为number,所以调用了_fetchTask后才去调用_createTaskRun");return a(w).then(t.bind(e,x))}if(typeof(w)==="object"){console.log("taskId为object,所以直接调用_createTaskRun");var v=w;return t(x,v)}};h.run=function(v,w){console.log("pybossa.run函数第一参数projectname: "+v+", 第二参数_window："+w);console.log(v);console.log(w);g=c("#token").data("token");console.log("token: "+g);return n(v,w)};h.taskLoaded=function(v){console.log("pybossa.taskLoaded函数参数userFunc: "+v);console.log(v);return f(v)};h.presentTask=function(v){console.log("pybossa.presentTask函数参数userFunc: "+v);console.log(v);return p(v)}}(window.pybossa=window.pybossa||{},jQuery));